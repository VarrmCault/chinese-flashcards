var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.153,1,0.885]],["body/components/AppComponent.html",[0,0.228,1,1.431,2,1.289,3,0.157,4,0.125,5,0.957,6,0.957,7,0.957,8,0.957,9,0.141,10,3.095,11,0.848,12,1.68,13,1.75,14,2.587,15,1.098,16,5.79,17,1.098,18,5.013,19,0.19,20,0.365,21,0.698,22,5.79,23,0.903,24,5.014,25,0.854,26,1.51,27,5.013,28,6.276,29,0.97,30,3.574,31,6.276,32,7.036,33,4.067,34,2.851,35,0.814,36,5.013,37,0.748,38,0.016,39,0.867,40,0.336,41,5.013,42,5.013,43,1.909,44,3.863,45,3.574,46,0.782,47,1.165,48,3.574,49,5.79,50,2.78,51,5.013,52,3.574,53,0.583,54,0.486,55,1.143,56,0.408,57,3.095,58,0.356,59,2.356,60,3.574,61,2.544,62,2.2,63,5.013,64,1.515,65,2.356,66,1.665,67,1.75,68,0.157,69,0.064,70,3.574,71,3.574,72,2.78,73,3.574,74,2.356,75,3.574,76,3.574,77,3.574,78,3.574,79,3.574,80,5.79,81,3.574,82,5.79,83,3.574,84,3.574,85,2.06,86,5.013,87,3.574,88,5.013,89,3.574,90,3.574,91,1.272,92,1.385,93,1.396,94,1.995,95,2.031,96,2.031,97,1.665,98,3.574,99,2.544,100,2.78,101,1.17,102,1.943,103,4.341,104,1.272,105,1.385,106,2.587,107,2.356,108,1.385,109,1.238,110,1.948,111,2.544,112,3.095,113,1.448,114,1.143,115,2.066,116,0.782,117,1.342,118,1.289,119,0.815,120,1.68,121,0.957,122,0.957,123,0.751,124,0.957,125,0.782,126,0.957,127,0.782,128,1.031,129,0.957,130,0.782,131,1.342,132,0.815,133,1.098,134,1.342,135,0.815,136,0.957,137,0.815,138,0.957,139,0.782,140,1.075,141,0.957,142,0.782,143,0.782,144,0.957,145,0.782,146,1.19,147,1.342,148,0.782,149,0.919,150,0.815,151,0.957,152,0.782,153,0.751,154,0.636,155,0.957,156,0.782,157,0.957,158,0.815,159,1.374,160,0.883,161,1.342,162,0.782,163,0.957,164,0.782,165,0.011,166,0.751,167,0.957,168,0.883,169,0.957,170,0.815,171,0.957,172,0.957,173,0.815,174,0.848,175,0.957,176,0.957,177,0.919,178,0.848,179,0.919,180,0.957,181,0.01]],["title/modules/AppModule.html",[182,1.901,183,2.764]],["body/modules/AppModule.html",[1,1.776,3,0.192,4,0.153,9,0.172,38,0.016,55,0.993,56,0.46,58,0.434,61,4.083,62,2.681,68,0.192,69,0.078,99,3.101,110,2.375,116,0.954,133,0.954,150,1.657,154,0.775,165,0.011,173,1.657,181,0.011,182,2.134,183,5.696,184,2.03,185,2.518,186,4.227,187,4.227,188,3.315,189,2.681,190,3.773,191,3.773,192,3.773,193,3.773,194,4.793,195,4.793,196,4.793,197,4.793,198,3.781,199,2.134,200,2.681,201,3.388,202,1.957,203,5.735,204,5.735,205,3.781,206,5.735,207,5.735,208,4.356,209,4.356,210,4.967,211,3.773,212,3.773,213,5.735,214,4.356,215,4.083,216,3.101,217,4.461,218,4.356,219,4.356,220,4.967,221,3.773,222,3.388,223,3.388,224,3.388,225,3.388,226,2.872,227,2.872,228,4.356,229,4.356,230,4.356,231,4.356,232,2.248,233,3.773,234,3.773,235,5.735,236,4.356,237,4.356,238,0.843,239,3.388,240,4.461,241,1.765,242,4.356,243,4.356,244,4.356,245,4.356,246,4.356,247,4.356,248,4.356,249,4.356,250,3.773,251,4.356,252,4.356,253,4.356,254,4.356,255,4.356,256,2.375,257,4.356,258,4.356,259,3.388,260,4.356,261,3.388,262,4.356]],["title/modules/AppRoutingModule.html",[182,1.901,194,2.56]],["body/modules/AppRoutingModule.html",[0,0.296,3,0.232,4,0.185,9,0.208,38,0.016,56,0.454,58,0.526,64,2.239,68,0.232,69,0.095,139,1.42,143,1.42,156,1.42,162,1.42,165,0.013,166,1.363,181,0.013,184,2.461,189,3.251,194,4.275,202,1.803,205,4.275,234,5.615,238,1.022,263,5.282,264,5.282,265,3.991,266,4.625,267,4.616,268,4.575,269,4.575,270,3.761,271,4.575,272,3.761,273,4.575,274,5.282,275,3.761,276,4.575,277,5.282,278,5.282,279,7.641,280,5.043,281,5.282,282,4.109,283,2.461,284,5.282,285,1.961,286,5.282,287,5.282,288,5.282,289,5.282]],["title/components/ButtonComponent.html",[0,0.153,123,0.816]],["body/components/ButtonComponent.html",[0,0.244,1,0.791,2,1.262,3,0.153,4,0.121,5,0.928,6,0.928,7,0.928,8,0.928,9,0.137,11,0.823,12,1.676,13,1.749,15,1.075,17,1.075,19,0.185,20,0.358,21,0.633,23,0.766,25,0.836,35,0.86,37,0.732,38,0.016,39,0.86,40,0.421,43,1.725,46,0.889,47,1.15,53,1.107,54,0.922,55,1.119,56,0.379,58,0.346,68,0.153,69,0.062,93,0.966,94,1.047,104,1.234,108,1.903,109,0.857,116,0.759,117,1.314,118,1.262,119,0.791,120,1.989,121,0.928,122,0.928,123,1.302,124,0.928,125,0.759,126,0.928,127,0.759,128,1.02,129,0.928,130,0.759,131,1.314,132,0.791,133,1.075,134,1.314,135,0.791,136,0.928,137,0.791,138,0.928,139,0.759,140,1.057,141,0.928,142,0.759,143,0.759,144,0.928,145,0.759,146,1.165,147,1.314,148,0.759,149,0.892,150,0.791,151,0.928,152,0.759,153,0.729,154,0.617,155,0.928,156,0.759,157,0.928,158,0.791,159,1.352,160,0.857,161,1.314,162,0.759,163,0.928,164,0.759,165,0.011,166,0.729,167,0.928,168,0.857,169,0.928,170,0.791,171,0.928,172,0.928,173,0.791,174,0.823,175,0.928,176,0.928,177,0.892,178,0.823,179,0.892,180,0.928,181,0.009,202,1.675,241,2.509,290,3.004,291,3.494,292,4.474,293,1.213,294,5.696,295,5.16,296,1.822,297,2.415,298,5.696,299,4.908,300,3.817,301,6.193,302,4.817,303,3.817,304,3.817,305,2.676,306,5.696,307,6.536,308,5.426,309,3.468,310,3.468,311,3.756,312,3.468,313,3.468,314,2.698,315,4.431,316,3.004,317,3.817,318,2.698,319,3.506,320,2.698,321,1.822,322,2.698,323,4.817,324,2.698,325,3.004,326,1.54,327,2.698,328,2.469,329,2.135,330,1.47,331,2.287,332,3.004,333,2.698,334,1.405,335,3.196,336,3.004,337,3.468,338,3.468,339,2.287,340,2.759,341,2.135,342,3.004,343,2.287,344,3.004,345,3.468,346,1.79,347,3.004,348,2.287,349,2.115,350,1.79,351,2.287,352,2.698,353,3.468,354,2.469,355,2.135,356,1.345,357,1.184,358,1.288,359,1.09,360,1.288,361,1.54,362,3.004,363,3.468,364,3.468,365,1.616,366,2.698,367,3.004,368,3.021,369,3.494]],["title/classes/Card.html",[69,0.07,128,0.606]],["body/classes/Card.html",[3,0.167,4,0.133,9,0.149,19,0.278,20,0.38,21,0.84,25,0.89,29,0.733,35,0.969,37,0.565,38,0.016,39,0.467,40,0.434,43,2.123,46,1.154,47,1.253,53,0.974,54,0.811,56,0.303,68,0.263,69,0.068,101,1.241,106,1.955,114,1.686,128,1.004,153,1.353,165,0.01,181,0.01,199,3.152,238,1.156,293,1.29,326,3.099,330,1.606,370,2.066,371,2.498,372,3.601,373,3.152,374,2.858,375,3.962,376,2.728,377,4.244,378,3.72,379,3.509,380,6.043,381,5.574,382,5.574,383,5.574,384,5.972,385,5.574,386,5.006,387,5.574,388,3.442,389,5.22,390,2.925,391,3.789,392,1.755,393,3.789,394,3.962,395,3.789,396,3.789,397,3.789,398,3.789,399,3.789,400,3.789,401,3.789,402,3.789,403,3.789,404,3.789,405,3.789,406,3.789,407,4.601,408,2.617,409,3.789,410,3.789,411,2.498,412,2.498,413,2.498,414,0.83,415,2.066,416,2.947,417,2.697,418,2.697,419,2.947,420,2.697,421,2.697,422,2.498,423,2.19,424,2.498,425,2.498,426,2.947,427,3.281,428,1.944,429,5.574,430,4.521,431,5.173,432,3.281,433,3.281,434,3.281,435,3.281,436,3.281,437,3.281,438,3.281,439,3.281,440,3.281,441,0.764,442,3.281,443,4.521]],["title/classes/CardCollection.html",[69,0.07,444,1.809]],["body/classes/CardCollection.html",[3,0.183,4,0.146,9,0.164,19,0.221,20,0.405,21,0.854,25,0.948,26,1.317,29,0.805,35,0.946,37,1.04,38,0.016,39,0.859,40,0.446,43,1.999,46,1.044,47,1.242,54,0.756,56,0.323,68,0.245,69,0.075,114,0.948,128,0.978,140,0.772,165,0.011,181,0.011,238,0.805,293,1.374,321,2.484,370,2.268,372,3.452,376,2.836,392,1.823,408,2.156,414,0.911,428,1.549,441,0.839,444,2.591,445,6.017,446,3.235,447,3.911,448,2.191,449,2.971,450,4.874,451,4.874,452,5.561,453,5.58,454,5.561,455,5.561,456,5.561,457,4.817,458,5.561,459,4.159,460,4.159,461,4.159,462,4.159,463,4.498,464,4.159,465,4.817,466,4.159,467,4.817,468,6.447,469,4.159,470,4.817,471,4.159,472,5.427,473,4.817,474,4.159,475,2.961,476,3.602,477,2.961,478,2.56,479,3.602,480,2.742,481,3.602,482,2.961,483,4.817,484,3.235,485,2.961,486,3.602,487,3.602,488,3.602,489,3.602,490,3.602,491,3.602,492,2.742,493,3.602,494,2.742,495,3.602,496,2.56,497,3.602,498,1.612]],["title/interfaces/CardCollectionModel.html",[414,0.85,447,2.117]],["body/interfaces/CardCollectionModel.html",[3,0.216,4,0.172,9,0.194,19,0.262,20,0.452,21,0.793,26,1.033,38,0.016,40,0.394,43,2.148,47,1.151,54,0.668,56,0.36,68,0.273,69,0.088,114,1.121,128,0.967,165,0.012,181,0.012,238,0.952,293,1.215,321,2.73,372,3.199,376,3.116,392,1.809,408,1.906,414,1.076,428,1.727,441,0.992,444,2.291,445,3.824,446,3.824,447,3.888,448,1.61,449,3.265,450,3.824,451,3.824,453,4.822,457,4.258,463,4.339,465,4.258,467,4.258,468,6.501,470,4.258,472,4.258,473,4.258,475,3.5,476,4.258,477,3.5,478,3.026,479,4.258,480,3.241,481,4.258,482,3.5,483,5.369,484,3.824,485,3.5,486,4.258,487,4.258,488,4.258,489,4.258,490,4.258,491,4.258,492,3.241,493,4.258,494,3.241,495,4.258,496,3.026,497,4.258,498,1.906,499,2.291]],["title/components/CardComponent.html",[0,0.153,125,0.85]],["body/components/CardComponent.html",[0,0.238,1,0.743,2,1.207,3,0.143,4,0.114,5,0.872,6,0.872,7,0.872,8,0.872,9,0.129,11,0.774,12,1.667,13,1.732,15,1.028,17,1.028,19,0.174,20,0.342,21,0.612,23,0.733,25,0.8,35,0.819,37,0.7,38,0.016,39,0.844,40,0.37,43,1.677,46,0.859,47,1.118,53,0.898,54,0.931,55,1.07,56,0.349,58,0.325,68,0.143,69,0.059,93,1.677,94,1.926,95,1.32,96,1.32,100,2.535,101,1.067,104,1.16,105,1.263,108,2.718,109,0.805,113,2.841,115,4.052,116,0.714,117,1.256,118,1.207,119,0.743,120,2.003,121,0.872,122,0.872,123,0.685,124,0.872,125,1.318,126,0.872,127,0.714,128,1.192,129,0.872,130,0.714,131,1.256,132,0.743,133,1.028,134,1.256,135,0.743,136,0.872,137,0.743,138,0.872,139,0.714,140,1.021,141,0.872,142,0.714,143,0.714,144,0.872,145,0.714,146,1.114,147,1.256,148,0.714,149,0.838,150,0.743,151,0.872,152,0.714,153,0.685,154,0.58,155,0.872,156,0.714,157,0.872,158,0.743,159,1.306,160,0.805,161,1.256,162,0.714,163,0.872,164,0.714,165,0.011,166,0.685,167,0.872,168,0.805,169,0.872,170,0.743,171,0.872,172,0.872,173,0.743,174,0.774,175,0.872,176,0.872,177,0.838,178,0.774,179,0.838,180,0.872,181,0.009,202,1.602,241,2.439,291,3.342,292,4.382,293,1.16,296,1.743,297,2.333,300,3.652,302,4.683,303,3.652,304,3.652,305,2.559,308,5.328,314,2.535,315,4.28,316,2.822,317,3.652,318,2.535,319,3.387,320,2.535,321,1.743,322,2.535,323,4.683,324,2.535,325,2.822,326,1.447,327,2.535,328,2.32,329,2.006,330,1.381,331,2.149,332,2.822,333,2.535,334,1.32,335,2.84,336,2.822,339,1.518,340,2.043,341,2.006,346,3.942,348,2.149,349,2.043,350,1.682,356,1.263,357,1.112,358,1.21,359,1.476,360,1.743,361,1.447,500,2.822,501,2.444,502,5.502,503,4.694,504,2.674,505,5.502,506,6.021,507,2.143,508,3.259,509,3.259,510,3.259,511,3.259,512,5.526,513,2.149,514,6.381,515,3.259,516,3.259,517,3.267,518,4.315,519,3.259,520,3.259,521,3.652,522,1.82,523,2.822,524,2.32,525,2.32,526,2.822,527,3.259,528,1.596,529,1.777,530,1.263,531,1.21,532,2.149,533,3.259,534,3.259]],["title/components/CardDifficultyComponent.html",[0,0.153,127,0.85]],["body/components/CardDifficultyComponent.html",[0,0.232,1,0.837,2,1.313,3,0.161,4,0.128,5,0.982,6,0.982,7,0.982,8,0.982,9,0.145,11,0.871,12,1.684,13,1.751,15,1.118,17,1.118,19,0.195,20,0.372,23,0.916,35,0.724,38,0.016,39,0.724,40,0.341,44,3.143,53,0.599,54,0.499,55,1.164,56,0.387,58,0.366,68,0.161,69,0.066,85,1.306,91,1.306,92,1.423,93,1.636,94,1.773,95,1.487,96,1.487,102,1.423,104,1.306,108,1.423,109,0.907,113,1.487,116,0.804,117,1.367,118,1.313,119,0.837,120,1.849,121,0.982,122,0.982,123,0.772,124,0.982,125,0.804,126,0.982,127,1.39,128,1.217,129,0.982,130,0.804,131,1.367,132,0.837,133,1.118,134,1.367,135,0.837,136,0.982,137,0.837,138,0.982,139,0.804,140,1.09,141,0.982,142,0.804,143,0.804,144,0.982,145,0.804,146,1.212,147,1.367,148,0.804,149,0.944,150,0.837,151,0.982,152,0.804,153,0.772,154,0.653,155,0.982,156,0.804,157,0.982,158,0.837,159,1.394,160,0.907,161,1.367,162,0.804,163,0.982,164,0.804,165,0.011,166,0.772,167,0.982,168,0.907,169,0.982,170,0.837,171,0.982,172,0.982,173,0.837,174,0.871,175,0.982,176,0.982,177,0.944,178,0.871,179,0.944,180,0.982,181,0.01,202,1.743,296,1.896,297,2.49,305,2.784,334,1.487,335,2.635,340,2.76,343,2.42,349,1.363,357,1.253,358,1.363,359,1.154,361,1.63,375,4.253,394,3.615,411,4.4,412,3.872,413,4.4,441,0.74,513,2.42,522,1.423,528,1.798,530,1.423,531,1.363,535,4.939,536,4.52,537,3.179,538,3.395,539,5.873,540,5.107,541,2.462,542,3.143,543,5.873,544,3.67,545,3.395,546,3.67,547,1.894,548,5.873,549,5.873,550,5.873,551,3.67,552,2.952,553,1.63,554,2.121,555,2.121,556,1.423,557,5.107,558,2.259,559,3.67,560,2.121,561,2.42,562,6.91,563,2.855,564,2.613,565,2.259,566,3.179,567,4.181,568,5.107,569,1.71,570,2.42,571,3.67,572,3.67,573,3.67]],["title/components/CardEditorComponent.html",[0,0.153,130,0.85]],["body/components/CardEditorComponent.html",[0,0.177,1,0.532,2,0.939,3,0.103,4,0.082,5,0.624,6,0.624,7,0.624,8,0.624,9,0.092,11,0.554,12,1.609,13,1.676,15,0.799,17,0.799,19,0.124,20,0.266,21,0.614,23,1.194,25,0.622,26,1.53,29,0.706,34,2.48,35,0.89,37,0.348,38,0.016,39,0.627,40,0.378,46,0.794,47,1.087,53,0.998,54,0.831,55,0.832,56,0.368,58,0.232,67,1.142,68,0.103,69,0.042,85,0.83,91,0.83,93,1.017,94,1.358,95,0.945,96,0.945,102,0.904,104,0.83,105,2.141,108,0.904,109,0.576,113,1.822,114,0.832,116,0.511,117,0.977,118,0.939,119,0.532,120,1.362,121,0.624,122,0.624,123,0.49,124,0.624,125,0.511,126,0.624,127,0.511,128,1.214,129,0.624,130,1.114,131,0.977,132,0.532,133,1.114,134,0.977,135,0.532,136,0.624,137,0.532,138,0.624,139,0.511,140,0.944,141,0.624,142,0.511,143,0.511,144,0.624,145,0.511,146,0.866,147,0.977,148,0.511,149,0.6,150,0.532,151,0.624,152,0.511,153,1.47,154,1.042,155,0.624,156,0.511,157,0.624,158,0.532,159,1.067,160,0.576,161,0.977,162,0.511,163,0.624,164,0.511,165,0.009,166,0.49,167,0.624,168,0.576,169,0.624,170,0.532,171,0.977,172,0.624,173,0.532,174,0.554,175,0.624,176,0.624,177,0.6,178,0.554,179,0.6,180,0.624,181,0.007,199,2.202,238,0.985,241,1.479,293,0.902,319,2.247,339,1.087,340,1.355,346,1.203,349,1.67,350,1.203,356,1.743,359,0.733,360,0.866,361,1.036,373,2.997,374,2.259,376,0.989,377,1.538,378,1.348,379,3.453,388,1.538,390,1.788,392,1.067,408,1.415,414,0.511,441,1.369,498,0.904,501,1.997,504,2.259,507,2.178,517,1.087,522,1.415,528,1.788,529,1.271,530,0.904,531,0.866,541,1.972,547,1.883,553,1.036,556,0.904,565,1.435,569,2.37,574,4.799,575,4.48,576,1.538,577,2.598,578,3.201,579,2.598,580,3.894,581,3.894,582,3.192,583,3.894,584,3.894,585,3.894,586,3.201,587,3.498,588,1.906,589,4.406,590,4.406,591,4.406,592,2.247,593,3.192,594,3.537,595,3.65,596,2.332,597,2.332,598,1.479,599,2.332,600,2.332,601,2.332,602,2.332,603,2.332,604,2.332,605,2.768,606,4.742,607,4.169,608,2.598,609,4.176,610,2.02,611,3.354,612,2.768,613,3.641,614,2.965,615,2.332,616,2.332,617,2.02,618,2.598,619,2.02,620,2.332,621,1.348,622,3.131,623,1.66,624,0.989,625,1.348,626,1.087,627,1.66,628,1.435,629,1.66,630,1.66,631,1.348,632,2.839,633,1.66,634,2.02,635,2.02,636,2.02,637,3.894,638,2.02,639,1.66,640,1.348,641,1.538,642,2.768,643,1.538,644,1.538,645,2.02,646,1.66,647,2.02,648,1.66,649,3.161,650,3.161,651,2.02,652,2.02,653,2.02,654,2.02,655,2.02,656,3.161,657,2.02,658,2.02,659,3.161,660,2.02,661,2.02,662,1.547,663,2.02,664,2.02,665,1.538,666,2.02,667,2.02,668,2.02,669,2.02,670,2.02,671,2.02,672,3.161,673,3.161,674,2.02,675,3.161,676,3.65,677,3.65,678,3.65,679,3.65,680,3.161,681,3.65,682,3.65,683,2.406,684,3.161,685,2.406,686,3.65,687,3.161,688,3.161,689,2.11,690,1.66,691,3.65,692,3.65,693,2.332,694,2.02,695,1.435,696,2.332,697,2.02,698,2.332,699,1.814,700,1.203]],["title/interfaces/CardForm.html",[414,0.85,630,2.764]],["body/interfaces/CardForm.html",[0,0.206,3,0.167,4,0.133,9,0.15,12,0.799,13,0.832,15,0.832,17,0.832,19,0.202,20,0.381,23,1.154,26,1.504,29,0.736,34,2.424,38,0.016,40,0.347,47,1.111,55,0.867,56,0.423,58,0.379,67,1.862,68,0.167,69,0.068,85,1.353,91,1.353,114,1.193,128,1.212,130,0.832,140,0.706,153,1.555,154,0.676,165,0.01,181,0.01,238,1.248,293,0.939,356,2.028,373,1.862,374,2.324,376,1.611,377,2.506,378,2.197,379,2.853,390,1.862,392,1.242,408,2.028,414,0.832,441,1.409,499,1.771,501,2.324,504,1.688,507,2.294,541,2.028,553,1.688,556,1.474,574,2.506,575,2.34,576,2.506,577,2.706,578,2.706,579,2.706,580,3.292,581,3.292,582,2.197,583,3.292,584,3.292,585,3.292,586,2.706,587,2.957,588,1.611,589,3.292,590,3.292,591,3.292,593,3.024,594,3.458,598,1.54,605,3.221,606,5.33,607,4.26,608,2.706,609,4.807,611,2.506,612,3.221,613,3.945,614,3.45,618,2.706,621,2.197,622,4.609,623,2.706,624,1.611,625,2.197,626,1.771,627,2.706,628,2.34,629,2.706,630,3.725,631,2.197,632,4.07,633,2.706,634,3.292,635,3.292,636,3.292,637,5.182,638,3.292,639,2.706,640,2.197,641,2.506,642,3.683,643,2.506,644,2.506,645,3.292,646,2.706,647,3.292,648,2.706,649,4.531,650,4.531,651,3.292,652,3.292,653,3.292,654,3.292,655,3.292,656,4.531,657,3.292,658,3.292,659,4.531,660,3.292,661,3.292,662,2.218,663,3.292,664,3.292,665,2.506,666,3.292,667,3.292,668,3.292,669,3.292,670,3.292,671,3.292,672,4.531,673,4.531,674,3.292]],["title/pipes/CardMeaningsPipe.html",[701,2.244,702,2.39]],["body/pipes/CardMeaningsPipe.html",[3,0.249,4,0.198,9,0.224,11,1.346,19,0.36,21,0.63,25,0.966,35,0.699,37,0.846,38,0.016,39,0.891,40,0.329,43,2.133,46,0.885,55,1.543,56,0.329,58,0.565,68,0.249,69,0.102,101,2.216,165,0.013,181,0.013,293,1.401,296,2.513,366,4.41,379,3.091,428,1.579,701,3.911,702,4.165,703,4.41,704,5.861,705,4.91,706,6.767,707,6.767,708,5.67,709,5.861,710,5.67,711,5.67,712,5.67,713,5.67]],["title/interfaces/CardModel.html",[372,2.003,414,0.85]],["body/interfaces/CardModel.html",[3,0.188,4,0.15,9,0.169,19,0.302,20,0.413,21,0.851,38,0.016,40,0.44,43,2.205,47,1.052,56,0.329,68,0.279,69,0.077,101,1.401,106,2.208,114,1.682,128,0.884,153,1.48,165,0.011,181,0.011,199,2.096,238,1.23,293,1.057,326,2.822,371,2.822,372,3.491,373,3.447,374,3.126,375,4.332,376,2.984,377,4.641,378,4.068,379,3.837,380,5.504,381,3.706,382,3.706,383,3.706,385,3.706,386,3.329,387,3.706,388,2.822,390,2.776,392,1.832,394,4.332,407,4.641,408,2.623,411,2.822,412,2.822,413,2.822,414,0.937,415,2.333,416,3.329,417,3.047,418,3.047,419,3.329,420,3.047,421,3.047,422,2.822,423,2.474,424,2.822,425,2.822,426,3.329,427,3.706,428,2.015,429,5.86,430,4.909,431,5.504,432,3.706,433,3.706,434,3.706,435,3.706,436,3.706,437,3.706,438,3.706,439,3.706,440,3.706,441,0.863,442,3.706,443,4.909,499,1.994]],["title/components/CardProgressBarComponent.html",[0,0.153,132,0.885]],["body/components/CardProgressBarComponent.html",[0,0.225,1,0.792,2,1.264,3,0.153,4,0.122,5,0.93,6,0.93,7,0.93,8,0.93,9,0.137,11,0.825,12,1.676,13,1.742,15,1.076,17,1.076,19,0.185,20,0.358,21,0.386,23,0.89,25,0.838,29,0.673,34,2.512,35,0.806,37,0.518,38,0.016,39,0.764,40,0.331,46,0.542,47,0.912,53,0.567,54,0.472,56,0.331,58,0.346,67,1.702,68,0.153,69,0.062,92,1.347,93,1.589,94,1.722,97,2.29,101,1.61,102,1.347,105,1.347,108,2.536,109,0.859,110,2.68,113,1.991,114,0.792,115,2.841,116,0.761,117,1.315,118,1.264,119,0.792,120,1.659,121,0.93,122,0.93,123,0.731,124,0.93,125,0.761,126,0.93,127,0.761,128,1.219,129,0.93,130,0.761,131,1.315,132,1.413,133,1.726,134,1.315,135,0.792,136,0.93,137,0.792,138,0.93,139,0.761,140,1.058,141,0.93,142,0.761,143,0.761,144,0.93,145,0.761,146,1.167,147,1.315,148,0.761,149,0.894,150,0.792,151,0.93,152,0.761,153,0.731,154,0.618,155,0.93,156,0.761,157,0.93,158,0.792,159,1.354,160,0.859,161,1.315,162,0.761,163,0.93,164,0.761,165,0.011,166,0.731,167,0.93,168,0.859,169,0.93,170,0.792,171,0.93,172,0.93,173,0.792,174,0.825,175,0.93,176,0.93,177,0.894,178,0.825,179,0.894,180,0.93,181,0.01,256,1.895,285,1.825,293,1.214,305,2.68,335,2.536,339,2.29,340,2.117,346,3.375,349,1.825,350,1.793,351,2.291,357,1.186,358,1.29,359,1.545,361,1.543,392,1.354,428,0.968,498,2.211,501,2.532,504,2.753,512,5.881,517,2.29,518,3.025,522,1.347,528,1.702,530,1.347,531,1.29,553,1.543,558,2.139,569,1.619,574,4.477,714,4.477,715,5.282,716,2.703,717,4.939,718,4.257,719,5.702,720,3.823,721,6.541,722,2.703,723,4.915,724,3.475,725,3.01,726,3.475,727,3.475,728,3.01,729,3.01,730,3.475,731,3.475,732,3.475,733,3.475,734,3.01,735,2.703,736,3.01,737,3.823,738,4.413,739,2.703,740,3.475,741,3.01,742,4.915,743,3.475,744,2.291,745,3.475,746,3.475,747,3.01,748,2.291]],["title/components/CardProgressIndicatorComponent.html",[0,0.153,135,0.885]],["body/components/CardProgressIndicatorComponent.html",[0,0.233,1,0.847,2,1.324,3,0.163,4,0.13,5,0.994,6,0.994,7,0.994,8,0.994,9,0.147,11,0.882,12,1.685,13,1.758,15,1.127,17,1.127,19,0.198,20,0.375,21,0.413,23,1.082,35,0.855,37,0.554,38,0.016,39,0.786,40,0.402,43,1.778,46,0.58,47,0.689,53,0.964,54,0.942,55,1.174,56,0.299,58,0.37,68,0.163,69,0.067,92,1.44,93,1.035,101,1.216,102,1.44,109,0.918,114,1.455,116,0.813,117,1.378,118,1.324,119,0.847,120,1.856,121,0.994,122,0.994,123,0.781,124,0.994,125,0.813,126,0.994,127,0.813,128,1.208,129,0.994,130,0.813,131,1.378,132,0.847,133,1.758,134,1.378,135,1.455,136,0.994,137,0.847,138,0.994,139,0.813,140,1.097,141,0.994,142,0.813,143,0.813,144,0.994,145,0.813,146,1.222,147,1.378,148,0.813,149,0.955,150,0.847,151,0.994,152,0.813,153,0.781,154,0.661,155,0.994,156,0.813,157,0.994,158,0.847,159,1.403,160,0.918,161,1.378,162,0.813,163,0.994,164,0.813,165,0.011,166,0.781,167,0.994,168,0.918,169,0.994,170,0.847,171,0.994,172,0.994,173,0.847,174,0.882,175,0.994,176,0.994,177,0.955,178,0.882,179,0.955,180,0.994,181,0.01,202,1.757,225,4.597,226,2.449,227,2.449,296,1.912,305,2.807,335,3.293,357,1.268,359,1.168,365,1.731,392,1.591,448,1.216,449,2.977,526,5.119,531,1.379,535,5.532,558,2.286,720,4.005,749,5.532,750,3.217,751,5.149,752,5.91,753,5.149,754,5.91,755,6.382,756,5.91,757,5.149,758,3.714,759,3.714,760,3.714,761,3.714,762,3.714,763,2.286,764,3.714,765,3.714,766,3.714,767,3.217,768,4.459,769,5.527,770,3.714,771,4.459,772,3.714]],["title/injectables/CardService.html",[594,2.244,773,1.382]],["body/injectables/CardService.html",[3,0.167,4,0.133,9,0.15,14,1.964,19,0.203,20,0.382,21,0.841,25,0.892,26,1.258,29,0.737,35,0.899,37,1.068,38,0.016,39,0.882,40,0.435,43,1.06,46,1.09,56,0.405,58,0.379,65,2.509,68,0.167,69,0.068,128,1.241,140,1.197,153,0.8,165,0.01,181,0.01,238,1.248,256,2.075,329,2.342,369,4.591,372,2.702,373,1.864,376,2.866,379,2.075,392,1.778,408,2.03,428,1.947,441,1.301,448,1.246,485,2.709,553,1.69,588,3.334,592,3.223,594,3.027,598,3.09,606,2.709,641,3.452,662,2.734,773,1.863,774,1.964,775,3.296,776,3.606,777,5.236,778,4.535,779,5.236,780,5.236,781,5.236,782,5.236,783,4.073,784,3.489,785,5.236,786,5.236,787,3.806,788,5.236,789,3.806,790,5.236,791,3.806,792,3.296,793,5.236,794,3.806,795,5.236,796,3.806,797,5.236,798,3.806,799,3.806,800,2.96,801,3.806,802,2.96,803,2.509,804,2.075,805,2.709,806,2.709,807,3.296,808,3.806,809,3.806,810,3.806,811,5.986,812,3.806,813,3.806,814,3.296,815,5.986,816,2.96,817,4.535,818,3.806,819,2.709,820,4.535,821,3.806,822,3.806,823,5.236,824,3.806,825,3.296,826,3.806,827,3.806,828,3.806,829,3.806,830,2.709,831,3.806,832,2.709,833,3.806,834,3.806,835,3.806,836,3.806]],["title/components/CardViewerComponent.html",[0,0.153,137,0.885]],["body/components/CardViewerComponent.html",[0,0.198,1,0.635,2,1.076,3,0.123,4,0.098,5,0.746,6,0.746,7,0.746,8,0.746,9,0.11,11,0.661,12,1.642,13,1.714,15,0.916,17,0.916,19,0.148,20,0.305,21,0.31,23,1.219,25,0.713,26,1.258,29,0.81,35,0.874,37,0.416,38,0.016,39,0.688,40,0.378,46,0.784,47,0.777,53,0.911,54,0.759,55,0.635,56,0.365,58,0.278,68,0.123,69,0.05,85,1.489,91,0.992,93,1.555,94,1.968,95,2.035,96,2.035,102,2.165,104,0.992,105,1.947,108,1.08,109,0.688,110,1.519,113,2.262,114,0.635,116,0.61,117,1.12,118,1.076,119,0.635,120,1.602,121,0.746,122,0.746,123,0.586,124,0.746,125,0.61,126,0.746,127,0.61,128,1.244,129,0.746,130,0.916,131,1.12,132,0.635,133,1.53,134,1.12,135,0.635,136,0.746,137,1.273,138,0.746,139,0.61,140,1.111,141,0.746,142,0.61,143,0.61,144,0.746,145,0.61,146,0.993,147,1.12,148,0.61,149,0.717,150,0.635,151,0.746,152,0.61,153,0.586,154,0.496,155,0.746,156,0.61,157,0.746,158,0.635,159,1.192,160,0.688,161,1.12,162,0.61,163,0.746,164,0.61,165,0.01,166,0.586,167,0.746,168,0.688,169,0.746,170,0.635,171,0.746,172,0.746,173,0.635,174,0.661,175,0.746,176,0.746,177,0.717,178,0.661,179,0.717,180,0.746,181,0.008,199,3.284,256,2.281,340,1.553,341,1.715,343,1.837,349,1.865,354,1.984,355,1.715,356,1.622,357,1.428,358,1.553,359,1.315,360,1.865,361,2.231,373,1.365,374,2.231,375,2.575,388,1.837,390,2.46,392,1.192,498,1.08,507,2.386,517,1.298,522,1.08,529,1.519,530,1.08,531,1.865,541,2.165,547,1.438,553,1.237,556,1.08,560,1.611,561,1.837,569,2.341,574,4.738,575,1.715,582,3.459,588,2.664,592,2.575,593,3.459,594,3.768,598,2.262,612,3.092,621,1.611,625,1.611,626,1.298,627,1.984,631,1.611,632,2.167,640,3.227,642,2.575,643,1.837,662,2.129,665,1.837,689,1.611,699,2.167,700,2.881,714,4.738,741,2.413,778,4.836,830,2.979,832,2.979,837,2.413,838,4.184,839,5.023,840,4.184,841,3.907,842,5.023,843,5.023,844,5.583,845,5.583,846,3.975,847,4.184,848,2.787,849,2.787,850,2.787,851,2.787,852,2.787,853,3.975,854,4.35,855,4.474,856,3.907,857,5.023,858,2.787,859,2.787,860,2.787,861,2.787,862,1.984,863,4.836,864,4.184,865,1.984,866,2.413,867,1.984,868,2.787,869,2.787,870,2.787,871,5.023,872,2.787,873,2.787,874,2.787,875,2.787,876,5.182,877,3.623,878,2.418,879,3.623,880,4.184,881,2.787,882,1.984,883,2.413,884,2.167,885,2.413,886,2.787,887,1.715,888,2.413,889,2.787,890,2.787]],["title/classes/CoercionComponent.html",[69,0.07,292,2.56]],["body/classes/CoercionComponent.html",[3,0.207,4,0.165,9,0.185,19,0.25,20,0.439,21,0.78,23,1.038,25,1.027,35,0.819,37,0.898,38,0.016,39,0.914,40,0.386,43,2.067,46,0.94,47,1.302,53,0.767,54,1.07,56,0.35,68,0.207,69,0.084,165,0.012,181,0.012,238,0.91,241,3.127,292,3.972,300,5.172,302,5.771,303,4.686,304,4.686,308,5.455,314,4.686,317,5.455,318,4.686,319,4.567,320,4.686,321,2.237,322,4.686,323,5.943,324,4.686,326,2.675,327,4.686,328,4.289,329,3.708,330,1.992,331,4.384,333,3.655,370,2.562,408,1.822,891,6.074,892,3.345,893,4.699,894,4.699,895,4.069,896,4.699,897,4.699,898,4.384,899,4.699,900,4.699,901,4.069,902,3.345,903,4.699,904,4.699,905,4.699]],["title/components/CollectionCardsComponent.html",[0,0.153,139,0.85]],["body/components/CollectionCardsComponent.html",[0,0.157,1,0.441,2,0.808,3,0.085,4,0.068,5,0.517,6,0.517,7,0.517,8,0.517,9,0.076,11,0.459,12,1.57,13,1.628,15,0.688,17,0.688,19,0.103,20,0.229,21,0.68,23,1.165,25,0.536,26,1.522,29,0.608,34,2.302,35,0.908,37,0.592,38,0.016,39,0.7,40,0.393,43,1.502,44,3.096,46,0.982,47,1.335,50,2.444,53,1.026,54,0.855,56,0.411,57,1.674,58,0.193,64,0.82,65,3.745,66,0.901,67,0.947,68,0.085,69,0.035,74,3.015,85,1.118,91,0.688,93,0.875,94,1.199,96,1.853,97,0.901,101,1.647,102,1.218,104,1.627,105,1.539,108,1.539,109,0.478,111,1.376,112,1.674,113,1.853,114,1.434,116,0.423,117,0.841,118,0.808,119,0.441,120,1.346,121,0.517,122,0.517,123,0.406,124,0.517,125,0.423,126,0.517,127,0.423,128,1.182,129,0.517,130,0.688,131,0.841,132,0.441,133,0.688,134,0.841,135,0.441,136,0.517,137,0.716,138,0.517,139,1.001,140,1.352,141,0.517,142,0.688,143,0.423,144,0.517,145,0.423,146,0.746,147,0.841,148,0.423,149,0.497,150,0.441,151,0.517,152,0.423,153,1.194,154,0.559,155,0.517,156,0.423,157,0.517,158,0.441,159,0.942,160,0.478,161,0.841,162,0.423,163,0.517,164,0.423,165,0.008,166,0.406,167,0.517,168,0.478,169,0.517,170,0.441,171,0.517,172,0.517,173,0.441,174,0.459,175,0.517,176,0.517,177,0.497,178,0.459,179,0.497,180,0.517,181,0.006,232,0.998,238,0.769,241,0.783,270,5.27,283,0.901,293,0.776,330,0.82,339,0.901,340,0.718,344,1.674,346,1.622,349,2.272,350,1.622,351,1.275,354,1.376,355,1.934,356,0.75,357,0.66,358,0.718,359,0.608,360,1.167,361,0.859,373,1.539,374,1.763,379,2.743,390,2.464,392,0.746,422,1.275,428,1.106,441,1.088,444,1.85,448,1.497,449,2.031,480,1.275,498,0.75,501,1.763,504,2.031,507,1.118,521,2.444,522,1.773,524,1.376,528,0.947,541,1.773,547,1.622,553,0.859,556,0.75,565,1.19,569,0.901,575,1.19,606,1.376,612,2.444,626,0.901,640,1.816,642,2.444,689,2.643,694,2.722,700,2.049,714,1.275,748,1.275,792,3.439,803,1.275,817,1.674,820,1.674,830,2.827,832,2.237,846,3.255,854,3.439,862,2.237,865,2.827,866,1.674,867,2.827,878,2.643,882,1.376,887,1.19,902,2.237,906,4.556,907,1.674,908,3.97,909,3.439,910,3.97,911,3.142,912,4.357,913,3.088,914,3.97,915,2.618,916,4.573,917,3.97,918,3.97,919,2.444,920,3.97,921,4.573,922,4.573,923,3.96,924,4.573,925,3.96,926,3.142,927,3.142,928,4.573,929,4.573,930,1.933,931,4.573,932,2.782,933,3.097,934,2.408,935,1.933,936,2.444,937,1.933,938,1.933,939,1.933,940,1.933,941,1.933,942,1.933,943,3.142,944,1.933,945,3.142,946,1.933,947,1.933,948,1.933,949,1.933,950,1.933,951,1.933,952,1.933,953,3.97,954,1.933,955,1.933,956,3.97,957,1.933,958,3.142,959,3.97,960,3.97,961,3.142,962,1.933,963,2.237,964,1.933,965,3.97,966,3.142,967,1.933,968,1.933,969,3.97,970,3.142,971,1.933,972,2.827,973,3.142,974,3.439,975,3.142,976,1.933,977,1.674,978,1.674,979,1.674,980,1.275,981,1.054,982,1.275,983,0.947,984,1.504,985,1.933,986,1.054,987,1.275,988,1.674,989,1.19,990,1.933,991,1.933,992,3.97,993,1.933,994,1.933,995,1.674,996,1.376,997,1.504,998,1.504,999,1.504,1000,1.933,1001,4.573,1002,1.933,1003,1.933,1004,1.933,1005,1.933,1006,1.933,1007,1.933,1008,1.933,1009,1.933,1010,3.97,1011,3.142,1012,1.933,1013,3.97,1014,1.674,1015,1.933,1016,1.933,1017,1.933,1018,1.933,1019,1.933,1020,1.933,1021,1.933,1022,1.933,1023,1.933,1024,1.933,1025,1.933,1026,1.933,1027,1.933,1028,3.142,1029,1.933,1030,1.933,1031,1.933,1032,1.933,1033,1.933,1034,1.933,1035,1.933,1036,1.674,1037,1.376,1038,1.933,1039,1.933,1040,1.933,1041,3.142,1042,3.142,1043,2.722,1044,2.722,1045,3.142,1046,1.275,1047,1.933,1048,1.933,1049,1.376,1050,1.674,1051,1.674,1052,1.674,1053,3.142,1054,3.142,1055,3.142,1056,1.933,1057,2.444,1058,1.933,1059,1.933,1060,1.933,1061,1.933,1062,1.933,1063,3.142,1064,1.504,1065,1.674,1066,1.674,1067,1.674]],["title/components/CollectionEditorComponent.html",[0,0.153,142,0.85]],["body/components/CollectionEditorComponent.html",[0,0.206,1,0.68,2,1.132,3,0.131,4,0.104,5,0.799,6,0.799,7,0.799,8,0.799,9,0.118,11,0.708,12,1.653,13,1.718,15,0.964,17,0.964,19,0.159,20,0.321,21,0.685,23,1.19,25,0.75,26,0.926,29,0.852,33,3.853,35,0.861,37,0.445,38,0.016,39,0.712,40,0.387,46,0.687,53,0.942,54,0.785,56,0.397,58,0.297,64,1.265,68,0.131,69,0.054,85,1.062,91,1.062,93,0.831,94,1.329,95,1.209,96,1.209,102,1.707,104,1.062,105,1.707,109,0.737,113,1.209,116,0.653,117,1.178,118,1.132,119,0.68,120,1.546,121,0.799,122,0.799,123,0.627,124,0.799,125,0.653,126,0.799,127,0.653,128,1.04,129,0.799,130,0.653,131,1.178,132,0.68,133,0.964,134,1.178,135,0.68,136,0.799,137,0.68,138,0.799,139,0.653,140,1.448,141,0.799,142,1.265,143,0.653,144,0.799,145,0.653,146,1.045,147,1.178,148,0.653,149,0.767,150,0.68,151,0.799,152,0.653,153,0.627,154,1.096,155,0.799,156,0.653,157,0.799,158,0.68,159,1.242,160,0.737,161,1.178,162,0.653,163,0.799,164,0.653,165,0.01,166,0.627,167,0.799,168,0.737,169,0.799,170,0.68,171,0.799,172,0.799,173,0.68,174,0.708,175,0.799,176,0.799,177,0.767,178,0.708,179,0.767,180,0.799,181,0.009,238,0.852,241,1.209,321,2.475,356,2.028,357,1.019,358,1.108,359,0.938,360,1.108,374,2.323,388,1.968,390,2.157,392,1.045,414,0.653,441,1.38,444,2.052,447,2.401,448,1.442,449,3.038,478,1.837,498,1.157,507,1.567,529,1.627,541,2.239,547,2.272,556,1.157,576,1.968,577,3.135,578,3.725,579,3.135,582,3.56,586,3.725,588,2.732,592,2.71,593,3.56,598,2.34,605,3.22,607,4.112,608,3.135,610,2.585,611,3.808,612,3.22,613,4.061,614,3.45,617,2.585,618,3.135,619,2.585,621,1.725,622,3.22,623,2.125,624,1.265,625,1.725,626,1.391,628,1.837,629,2.125,631,1.725,639,2.125,640,1.725,641,1.968,642,3.555,643,1.968,648,2.125,662,2.218,665,2.903,675,3.813,688,3.813,689,2.545,699,2.321,700,1.54,841,4.07,855,4.589,856,4.07,877,3.813,878,2.545,879,3.813,883,2.585,885,2.585,906,4.373,932,3.265,980,1.968,981,1.627,982,1.968,989,4.373,1068,4.492,1069,5.002,1070,2.984,1071,2.984,1072,2.984,1073,2.984,1074,2.984,1075,2.984,1076,2.125,1077,2.585,1078,2.585,1079,2.585,1080,2.585,1081,2.585,1082,2.585,1083,2.585,1084,2.585]],["title/interfaces/CollectionForm.html",[414,0.85,1076,2.764]],["body/interfaces/CollectionForm.html",[0,0.23,3,0.196,4,0.156,9,0.176,12,0.936,13,0.975,15,0.975,17,0.975,19,0.237,20,0.424,23,1.141,26,1.223,29,0.862,33,3.746,38,0.016,40,0.338,56,0.438,58,0.444,64,1.888,68,0.196,69,0.08,85,1.585,91,1.585,140,1.418,142,0.975,154,0.792,165,0.011,181,0.011,238,1.126,321,2.766,356,2.256,374,1.977,390,2.181,392,1.057,414,0.975,441,1.386,444,2.711,447,3.172,449,3.355,478,2.741,499,2.075,507,1.585,541,2.256,556,1.726,576,2.936,577,3.17,578,3.17,579,3.17,582,2.574,586,3.17,588,2.466,593,3.363,598,2.357,605,3.581,607,4.142,608,3.17,611,2.936,612,3.581,613,4.273,614,3.836,618,3.17,621,2.574,622,4.586,623,3.17,624,1.888,625,2.574,626,2.075,628,2.741,629,3.17,631,2.574,639,3.17,640,2.574,641,2.936,642,4.23,643,2.936,648,3.17,662,2.747,665,3.836,841,3.464,855,3.17,856,4.526,906,2.741,932,3.174,980,2.936,981,2.428,982,2.936,989,2.741,1068,3.464,1069,3.856,1076,4.142,1077,3.856,1078,3.856,1079,3.856,1080,3.856,1081,3.856,1082,3.856,1083,3.856,1084,3.856]],["title/components/CollectionListComponent.html",[0,0.153,143,0.85]],["body/components/CollectionListComponent.html",[0,0.213,1,0.721,2,1.181,3,0.139,4,0.111,5,0.846,6,0.846,7,0.846,8,0.846,9,0.125,11,0.751,12,1.662,13,1.731,15,1.006,17,1.006,19,0.168,20,0.335,21,0.511,23,1.106,25,0.783,26,1.427,29,0.889,35,0.836,37,0.685,38,0.016,39,0.777,40,0.366,46,0.844,47,1.221,53,0.882,54,0.735,56,0.403,58,0.315,68,0.139,69,0.057,74,2.085,85,1.125,91,1.125,92,1.226,93,1.28,94,1.792,95,1.281,96,1.281,101,1.944,104,1.635,105,1.781,108,1.226,109,0.781,113,1.861,114,1.354,116,0.692,117,1.229,118,1.181,119,0.721,120,1.589,121,0.846,122,0.846,123,0.665,124,0.846,125,0.692,126,0.846,127,0.692,128,1.124,129,0.846,130,0.692,131,1.229,132,0.721,133,1.006,134,1.229,135,0.721,136,0.846,137,0.721,138,0.846,139,0.692,140,1.403,141,0.846,142,1.006,143,1.3,144,0.846,145,0.692,146,1.09,147,1.229,148,0.692,149,0.813,150,0.721,151,0.846,152,0.692,153,0.665,154,0.563,155,0.846,156,0.692,157,0.846,158,0.721,159,1.284,160,0.781,161,1.229,162,0.692,163,0.846,164,0.692,165,0.01,166,0.665,167,0.846,168,0.781,169,0.846,170,0.721,171,0.846,172,0.846,173,0.721,174,0.751,175,0.846,176,0.846,177,0.813,178,0.751,179,0.813,180,0.846,181,0.009,232,1.632,272,4.951,283,2.938,293,1.135,295,2.251,330,1.34,339,1.473,340,1.174,346,1.632,349,1.174,357,1.568,358,1.174,359,1.444,360,1.174,361,1.404,390,1.549,422,2.085,441,0.927,444,3.065,448,1.504,480,3.028,482,3.27,501,2.402,504,2.636,518,1.946,521,2.46,522,1.226,525,3.27,528,1.549,530,1.226,531,1.174,532,2.085,541,2.302,547,2.37,556,1.226,565,1.946,569,2.14,626,1.473,683,3.028,700,2.791,846,4.227,862,2.251,865,2.251,867,2.251,884,2.46,906,4.28,912,5.461,932,3.222,933,3.701,934,2.877,974,4.685,980,2.085,981,1.724,982,2.085,983,1.549,986,1.724,987,2.085,989,1.946,1014,2.738,1036,2.738,1037,2.251,1043,3.978,1049,2.251,1050,2.738,1051,2.738,1052,2.738,1085,2.738,1086,3.978,1087,5.409,1088,4.593,1089,5.937,1090,4.593,1091,2.46,1092,3.162,1093,3.162,1094,3.162,1095,4.593,1096,3.162,1097,3.162,1098,3.162,1099,4.593,1100,5.409,1101,3.162,1102,4.593,1103,2.738,1104,2.738,1105,3.162,1106,2.738,1107,3.162,1108,2.738,1109,4.593,1110,3.162]],["title/modules/CollectionPageModule.html",[182,1.901,195,2.56]],["body/modules/CollectionPageModule.html",[3,0.17,4,0.135,9,0.153,38,0.016,56,0.469,58,0.385,59,2.549,64,1.639,68,0.17,69,0.069,116,0.847,123,1.476,125,1.537,127,1.537,128,0.942,130,1.537,132,1.601,133,1.159,137,1.601,139,1.537,140,1.12,142,1.537,143,1.537,146,1.256,148,1.537,152,1.537,154,1.074,165,0.01,181,0.01,182,1.894,184,1.801,185,2.235,186,3.98,187,2.549,188,2.235,189,2.38,195,5.325,198,3.49,199,1.894,200,2.38,202,1.807,205,3.49,221,4.584,222,3.007,223,3.007,224,3.007,233,3.348,241,1.566,265,3.258,270,2.752,271,3.348,272,2.752,273,3.348,297,2.244,334,1.566,536,2.752,538,3.06,554,2.235,555,2.235,575,2.38,624,1.639,626,1.801,690,2.752,702,4.322,714,3.49,715,3.007,862,3.769,906,2.38,977,3.348,978,3.348,979,3.348,988,3.348,989,2.38,1111,3.348,1112,3.348,1113,3.348,1114,4.629,1115,3.348,1116,3.769,1117,4.584,1118,3.258,1119,2.549,1120,4.584,1121,3.348,1122,5.293,1123,3.866,1124,4.117,1125,5.293,1126,3.866,1127,3.49,1128,2.752,1129,3.49,1130,3.49,1131,2.752,1132,5.293,1133,4.584,1134,3.348,1135,5.293,1136,5.293,1137,3.348,1138,3.348,1139,3.866,1140,3.007,1141,3.348,1142,3.007,1143,2.549,1144,2.549,1145,2.38,1146,2.38,1147,3.348,1148,3.348,1149,3.348]],["title/injectables/CollectionService.html",[773,1.382,932,1.901]],["body/injectables/CollectionService.html",[3,0.146,4,0.116,9,0.131,14,1.711,19,0.177,20,0.346,21,0.797,25,0.81,26,1.405,29,0.642,35,0.908,37,1.07,38,0.016,39,0.884,40,0.422,46,1.161,47,0.616,56,0.388,58,0.33,68,0.146,69,0.06,114,1.084,128,1.099,140,1.482,165,0.009,181,0.009,238,1.175,283,1.545,321,2.063,329,2.041,330,2.015,369,3.384,372,2.453,374,3.305,376,2.919,378,2.748,392,1.807,408,1.286,415,2.592,428,2.052,441,1.224,444,3.115,447,4.016,448,2.19,478,2.041,496,2.926,588,3.04,598,2.949,662,2.355,773,1.692,774,1.711,776,3.45,783,3.697,784,3.315,804,1.808,805,2.361,806,2.361,814,2.872,816,3.697,825,5.256,898,3.664,923,4.812,932,2.328,981,1.808,1068,3.697,1106,5.256,1150,2.872,1151,4.753,1152,4.753,1153,4.753,1154,4.753,1155,4.753,1156,4.753,1157,4.753,1158,4.753,1159,3.316,1160,4.753,1161,3.316,1162,4.753,1163,3.316,1164,3.316,1165,4.753,1166,3.316,1167,5.79,1168,5.345,1169,6.886,1170,6.686,1171,4.117,1172,3.316,1173,4.753,1174,4.117,1175,3.316,1176,3.316,1177,3.316,1178,4.753,1179,3.316,1180,2.579,1181,2.579,1182,2.579,1183,2.579,1184,3.316,1185,3.316,1186,3.316,1187,3.316,1188,2.872,1189,3.316,1190,3.316,1191,3.316,1192,2.579,1193,3.316,1194,3.316,1195,3.316,1196,3.316,1197,3.316,1198,3.316,1199,5.556,1200,3.316,1201,4.753,1202,3.316,1203,3.316,1204,3.316,1205,3.316]],["title/interfaces/CollectionStats.html",[414,0.85,463,2.244]],["body/interfaces/CollectionStats.html",[3,0.261,4,0.207,9,0.234,19,0.316,20,0.506,38,0.015,40,0.428,68,0.261,165,0.013,181,0.013,392,1.904,414,1.298,463,4.015,492,5.011,494,5.011,496,4.679,499,2.761,1206,5.133]],["title/components/ConfirmDialogComponent.html",[0,0.153,145,0.85]],["body/components/ConfirmDialogComponent.html",[0,0.244,1,0.922,2,1.404,3,0.178,4,0.142,5,1.083,6,1.083,7,1.083,8,1.083,9,0.16,11,0.96,12,1.696,13,1.764,15,1.195,17,1.195,19,0.215,20,0.398,21,0.45,23,1.111,29,1.057,35,0.761,37,0.603,38,0.016,39,0.815,40,0.359,43,1.843,50,3.147,55,1.245,56,0.384,58,0.403,68,0.178,69,0.073,109,0.999,116,0.886,117,1.461,118,1.404,119,0.922,120,1.77,121,1.083,122,1.083,123,0.85,124,1.083,125,0.886,126,1.083,127,0.886,128,1.078,129,1.083,130,0.886,131,1.461,132,0.922,133,1.195,134,1.461,135,0.922,136,1.083,137,0.922,138,1.083,139,0.886,140,1.147,141,1.083,142,0.886,143,0.886,144,1.083,145,1.448,146,1.815,147,1.461,148,1.448,149,1.404,150,0.922,151,1.083,152,0.886,153,0.85,154,0.72,155,1.083,156,0.886,157,1.083,158,0.922,159,1.467,160,0.999,161,1.461,162,0.886,163,1.083,164,0.886,165,0.012,166,0.85,167,1.083,168,0.999,169,1.083,170,0.922,171,1.083,172,1.083,173,0.922,174,0.96,175,1.083,176,1.083,177,1.04,178,0.96,179,1.04,180,1.083,181,0.011,202,1.863,296,2.027,311,3.599,356,1.568,414,0.886,582,3.992,593,3.992,621,2.338,625,2.338,626,1.885,631,3.155,700,2.817,1124,4.806,1143,2.667,1144,2.667,1207,4.361,1208,4.361,1209,2.88,1210,4.806,1211,4.246,1212,5.729,1213,4.045,1214,4.917,1215,4.045,1216,4.045,1217,4.045,1218,3.147,1219,2.88,1220,2.88,1221,2.88,1222,3.147,1223,5.459,1224,5.459]],["title/interfaces/ConfirmDialogConfig.html",[414,0.85,1214,2.764]],["body/interfaces/ConfirmDialogConfig.html",[0,0.253,3,0.228,4,0.182,9,0.205,12,1.09,13,1.135,15,1.135,17,1.135,19,0.276,20,0.467,21,0.808,23,1,29,1.004,38,0.016,40,0.433,43,2.223,55,1.182,56,0.422,58,0.517,68,0.228,69,0.093,145,1.135,146,1.773,148,1.404,149,1.334,165,0.012,181,0.012,202,1.77,296,1.925,311,4.792,356,2.818,414,1.135,499,2.416,582,2.997,593,3.705,621,2.997,625,2.997,626,2.416,631,2.997,700,2.676,1124,4.986,1143,3.419,1144,3.419,1207,3.419,1208,3.419,1209,3.692,1210,4.034,1211,4.034,1212,4.491,1214,4.953,1218,4.034,1219,5.174,1220,5.174,1221,5.174,1222,5.653]],["title/classes/ControlValueAccessorComponent.html",[69,0.07,1225,2.764]],["body/classes/ControlValueAccessorComponent.html",[3,0.201,4,0.16,9,0.181,19,0.244,20,0.432,21,0.8,23,1.251,25,1.01,26,1.381,35,0.924,37,0.98,38,0.016,39,0.809,40,0.428,46,1.122,47,1.438,53,0.747,54,1.08,56,0.266,68,0.201,69,0.082,165,0.011,181,0.011,293,1.464,370,2.496,624,1.941,892,3.26,895,3.965,1225,4.218,1226,5.912,1227,5.411,1228,5.688,1229,5.109,1230,4.608,1231,5.402,1232,5.402,1233,4.608,1234,4.608,1235,5.731,1236,4.579,1237,5.064,1238,4.579,1239,4.608,1240,4.579,1241,4.608,1242,4.579,1243,4.608,1244,4.579,1245,4.608,1246,5.131,1247,4.579,1248,5.688,1249,5.925,1250,3.965,1251,4.579]],["title/classes/Database.html",[69,0.07,776,2.003]],["body/classes/Database.html",[3,0.177,4,0.141,9,0.159,19,0.215,20,0.397,23,1.169,25,0.928,26,1.296,29,1.194,35,0.876,38,0.016,40,0.358,46,0.85,56,0.422,68,0.177,69,0.072,101,1.32,114,1.406,153,1.575,165,0.011,181,0.011,238,1.194,256,2.198,283,1.878,285,2.452,291,3.877,370,2.198,372,2.08,373,3.669,374,3.363,376,2.614,377,4.687,378,4.377,379,4.084,407,3.591,423,2.33,424,2.658,428,1.123,447,2.198,448,2.328,449,2.739,588,2.614,598,2.206,662,2.8,685,2.658,776,3.408,981,2.198,1057,5.653,1168,4.702,1182,3.135,1183,3.135,1252,3.135,1253,5.72,1254,6.605,1255,6.605,1256,5.446,1257,4.031,1258,4.031,1259,4.031,1260,4.031,1261,2.481,1262,2.87,1263,2.658,1264,3.491,1265,4.236,1266,3.135,1267,3.491,1268,4.031,1269,4.031,1270,4.031,1271,4.031,1272,3.135,1273,4.031,1274,4.031,1275,4.031,1276,4.031,1277,4.031,1278,4.031,1279,4.031,1280,6.899,1281,5.446,1282,4.031,1283,5.446,1284,4.031,1285,3.491,1286,2.198,1287,4.031,1288,6.167,1289,4.031,1290,4.031,1291,5.446,1292,4.031,1293,4.031,1294,3.491,1295,4.031,1296,4.031,1297,7.109,1298,3.491,1299,3.491,1300,3.877,1301,5.341,1302,2.658,1303,3.491,1304,4.031,1305,4.031,1306,4.031,1307,3.491,1308,4.031,1309,3.491]],["title/injectables/DatabaseService.html",[773,1.382,784,2.003]],["body/injectables/DatabaseService.html",[3,0.219,4,0.175,9,0.197,14,2.574,19,0.266,20,0.456,23,1.067,25,1.066,29,1.323,35,0.91,38,0.016,46,1.067,47,1.161,53,0.814,54,0.678,56,0.397,58,0.497,68,0.219,69,0.09,140,0.926,165,0.012,181,0.012,238,1.429,283,2.915,285,2.323,428,1.39,441,1.262,448,2.049,478,3.07,588,2.898,598,2.904,662,2.898,773,2.227,774,2.574,776,3.888,784,3.229,804,2.72,807,4.32,919,4.208,1168,3.551,1188,4.32,1310,4.32,1311,5.576,1312,7.168,1313,7.168,1314,6.257,1315,4.988,1316,4.988,1317,4.988,1318,3.88,1319,4.988,1320,4.988,1321,4.988,1322,3.88,1323,4.988,1324,4.988,1325,4.988,1326,4.988,1327,4.988,1328,6.257,1329,4.988,1330,4.32,1331,4.988,1332,4.32,1333,4.988,1334,4.988,1335,4.988]],["title/components/InlineConfirmDialogComponent.html",[0,0.153,148,0.85]],["body/components/InlineConfirmDialogComponent.html",[0,0.236,1,0.865,2,1.343,3,0.167,4,0.133,5,1.015,6,1.015,7,1.015,8,1.015,9,0.15,11,0.9,12,1.688,13,1.755,15,1.144,17,1.144,19,0.202,35,0.832,38,0.016,39,0.736,40,0.392,43,1.794,53,0.619,54,0.515,55,1.191,56,0.374,58,0.378,68,0.167,69,0.068,92,1.47,93,1.455,94,1.944,95,1.537,96,1.537,97,1.767,105,2.025,109,0.937,116,0.83,117,1.398,118,1.343,119,0.865,120,1.723,121,1.015,122,1.015,123,1.354,124,1.015,125,0.83,126,1.015,127,0.83,128,1.054,129,1.015,130,0.83,131,1.398,132,0.865,133,1.144,134,1.398,135,0.865,136,1.015,137,0.865,138,1.015,139,0.83,140,1.109,141,1.015,142,0.83,143,0.83,144,1.015,145,0.83,146,1.883,147,1.398,148,1.41,149,1.874,150,0.865,151,1.015,152,0.83,153,0.797,154,0.675,155,1.015,156,0.83,157,1.015,158,0.865,159,1.418,160,0.937,161,1.398,162,0.83,163,1.015,164,0.83,165,0.012,166,0.797,167,1.015,168,0.937,169,1.015,170,0.865,171,1.015,172,1.015,173,0.865,174,0.9,175,1.015,176,1.015,177,0.975,178,0.9,179,0.975,180,1.015,181,0.01,202,1.783,296,1.94,297,2.533,305,2.848,311,3.94,334,1.537,335,3.323,349,1.94,350,1.957,356,1.47,359,1.192,360,1.94,368,3.216,441,1.054,522,1.47,529,2.068,530,1.47,531,1.408,542,3.216,545,3.904,552,3.454,697,3.285,700,2.696,748,2.501,887,2.335,1142,5.43,1143,4.603,1209,2.7,1210,4.648,1211,4.064,1218,2.95,1219,4.808,1220,4.808,1221,4.255,1336,5.976,1337,5.176,1338,3.793,1339,3.793,1340,3.793,1341,3.793,1342,3.793,1343,3.793,1344,3.285,1345,2.95,1346,4.064]],["title/pipes/JoinPipe.html",[701,2.244,1114,2.56]],["body/pipes/JoinPipe.html",[3,0.254,4,0.202,9,0.228,11,1.371,21,0.642,25,0.984,35,0.712,37,0.861,38,0.016,39,0.898,40,0.335,43,2.173,55,1.56,56,0.335,58,0.575,68,0.254,69,0.104,165,0.013,181,0.013,293,1.427,296,2.54,366,4.492,428,1.609,680,5.925,701,3.955,703,4.492,709,5.925,816,4.492,1114,4.511,1347,5.002,1348,6.842,1349,7.29,1350,5.775,1351,5.775,1352,5.775]],["title/modules/LearnPageModule.html",[182,1.901,196,2.56]],["body/modules/LearnPageModule.html",[3,0.184,4,0.147,9,0.165,38,0.016,56,0.467,58,0.417,59,2.762,64,1.776,68,0.184,69,0.075,116,0.917,123,1.511,125,1.574,127,1.574,133,1.377,135,1.639,145,1.574,152,1.574,154,0.994,156,1.574,158,1.639,159,0.994,160,1.381,162,1.574,164,1.574,165,0.013,181,0.011,182,2.052,184,1.952,185,2.422,186,4.147,187,2.762,188,2.422,189,2.579,196,5.327,198,3.685,199,2.052,200,2.579,202,1.907,205,3.685,225,4.347,226,2.762,227,2.762,241,1.698,265,3.44,275,2.983,276,3.629,297,2.369,334,1.698,536,2.983,538,3.23,554,2.422,555,2.422,624,1.776,702,4.425,749,3.259,1115,3.629,1116,3.979,1118,3.44,1119,2.762,1120,4.84,1121,3.629,1127,3.685,1128,2.983,1129,3.685,1130,3.685,1131,2.983,1137,3.629,1138,3.629,1140,3.259,1141,3.629,1144,2.762,1145,2.579,1146,2.579,1147,3.629,1148,4.84,1149,3.629,1207,2.762,1208,2.762,1353,3.629,1354,3.629,1355,3.629,1356,4.19,1357,5.589,1358,4.19,1359,4.19,1360,4.19,1361,5.589,1362,3.685,1363,5.589,1364,4.19]],["title/injectables/LearningSessionService.html",[773,1.382,1365,2.56]],["body/injectables/LearningSessionService.html",[3,0.191,4,0.152,9,0.171,14,2.236,19,0.231,20,0.416,21,0.711,23,1.186,25,0.974,26,1.486,29,1.106,34,2.999,35,0.912,37,0.954,38,0.016,39,0.788,40,0.395,46,1.061,53,0.932,54,0.777,56,0.41,58,0.432,66,2.019,68,0.191,69,0.078,128,0.676,140,1.061,165,0.011,181,0.011,238,1.238,285,1.609,326,2.538,330,2.423,392,1.723,415,2.363,428,1.894,441,1.464,448,1.872,484,3.371,485,4.069,588,3.077,598,2.941,662,2.711,773,2.034,774,2.236,804,2.363,919,4.468,932,3.555,995,3.753,996,3.085,997,3.371,1037,4.069,1091,3.371,1183,3.371,1365,3.769,1366,5.843,1367,3.371,1368,6.395,1369,5.889,1370,5.716,1371,5.716,1372,6.8,1373,6.8,1374,5.716,1375,5.716,1376,4.334,1377,5.716,1378,4.334,1379,4.334,1380,4.334,1381,4.553,1382,4.334,1383,5.716,1384,3.753,1385,4.334,1386,3.769,1387,4.334,1388,4.334,1389,4.334,1390,4.334,1391,4.334,1392,4.334,1393,4.334,1394,4.334,1395,3.371,1396,2.857,1397,4.334,1398,4.334,1399,4.334,1400,4.334,1401,4.334,1402,3.371]],["title/directives/LongPressDirective.html",[119,0.885,178,0.921]],["body/directives/LongPressDirective.html",[3,0.2,4,0.159,9,0.179,11,1.08,12,1.24,19,0.242,20,0.43,21,0.506,25,1.005,26,1.546,29,0.88,35,0.885,37,0.678,38,0.016,39,0.56,40,0.402,46,0.71,47,1.095,53,0.742,54,0.801,55,1.579,56,0.342,58,0.453,65,2.999,66,2.119,68,0.2,69,0.082,74,2.999,114,1.345,115,3.41,119,1.345,165,0.011,177,1.17,178,1.4,179,1.517,181,0.011,238,1.341,293,1.457,295,4.2,296,2.19,392,1.08,441,0.918,507,2.099,524,4.2,542,3.631,545,3.784,552,3.41,701,2.629,902,3.238,909,5.67,925,6,1403,5.237,1404,6.37,1405,3.939,1406,5.67,1407,6.547,1408,6.547,1409,5.899,1410,6.217,1411,5.899,1412,4.548,1413,4.548,1414,6.547,1415,4.548,1416,4.548,1417,5.583,1418,4.548,1419,4.548,1420,4.548,1421,4.548,1422,6.928,1423,4.548,1424,5.899,1425,5.899,1426,5.899,1427,5.899,1428,4.548,1429,5.899,1430,4.548,1431,5.899,1432,4.548,1433,5.899,1434,4.548,1435,4.548,1436,4.548,1437,4.548,1438,4.548,1439,4.548,1440,4.548,1441,4.548]],["title/interfaces/MatchingCard.html",[414,0.85,1442,2.764]],["body/interfaces/MatchingCard.html",[0,0.229,3,0.195,4,0.155,9,0.175,12,0.931,13,0.97,15,0.97,17,0.97,19,0.236,20,0.423,23,1.111,26,1.219,38,0.016,40,0.336,46,0.691,47,1.076,56,0.398,58,0.441,68,0.195,69,0.08,72,3.446,101,1.451,114,1.01,115,2.56,128,1.24,159,1.628,164,0.97,165,0.014,181,0.011,238,1.251,293,1.094,321,1.645,326,2.871,335,3.336,414,0.97,428,1.234,441,1.17,448,2.437,499,2.064,501,2.575,504,1.967,507,2.063,518,2.727,545,3.352,552,3.352,553,1.967,738,3.154,744,3.823,763,2.727,803,2.921,819,3.154,898,2.921,913,3.446,934,2.458,983,2.17,1046,2.921,1192,3.446,1286,3.161,1302,2.921,1362,2.921,1442,5.199,1443,2.56,1444,3.154,1445,6.444,1446,3.823,1447,3.446,1448,3.446,1449,3.836,1450,3.836,1451,3.836,1452,3.836,1453,3.836,1454,3.836,1455,3.154,1456,3.836,1457,5.598,1458,3.446,1459,3.836,1460,3.836,1461,3.836,1462,5.939,1463,3.446,1464,3.836,1465,3.836,1466,3.836,1467,3.836,1468,3.836,1469,3.836,1470,3.446,1471,3.836,1472,3.836,1473,3.836,1474,3.836,1475,3.836,1476,3.836,1477,3.836,1478,3.836,1479,3.836,1480,3.836]],["title/components/NavbarComponent.html",[0,0.153,150,0.885]],["body/components/NavbarComponent.html",[0,0.234,1,0.852,2,1.33,3,0.164,4,0.131,5,1.001,6,1.001,7,1.001,8,1.001,9,0.148,11,0.887,12,1.686,13,1.753,15,1.133,17,1.133,19,0.199,20,0.377,21,0.416,23,1.15,29,0.724,35,0.789,37,0.558,38,0.016,39,0.789,40,0.371,53,0.968,54,0.806,55,1.179,56,0.403,58,0.373,59,2.465,66,1.742,68,0.164,69,0.067,93,1.041,94,1.129,97,1.742,99,3.683,102,1.449,104,1.33,105,1.449,109,0.924,116,0.819,117,1.384,118,1.33,119,0.852,120,1.944,121,1.001,122,1.001,123,0.786,124,1.001,125,0.819,126,1.001,127,0.819,128,1.048,129,1.001,130,0.819,131,1.384,132,0.852,133,1.133,134,1.384,135,0.852,136,1.001,137,0.852,138,1.001,139,0.819,140,1.101,141,1.001,142,0.819,143,0.819,144,1.001,145,0.819,146,1.228,147,1.384,148,0.819,149,0.961,150,1.459,151,1.001,152,0.819,153,0.786,154,0.665,155,1.001,156,0.819,157,1.001,158,0.852,159,1.408,160,0.924,161,1.384,162,0.819,163,1.001,164,0.819,165,0.011,166,0.786,167,1.001,168,0.924,169,1.001,170,0.852,171,1.001,172,1.001,173,0.852,174,0.887,175,1.001,176,1.001,177,0.961,178,0.887,179,0.961,180,1.001,181,0.01,202,1.765,238,0.724,296,1.921,297,2.193,321,1.388,334,1.515,339,1.742,340,2.495,341,2.301,342,3.238,349,2.645,350,1.929,351,2.465,355,3.184,356,1.449,357,1.765,358,1.388,359,1.865,360,1.388,365,1.742,522,2.005,530,1.449,531,2.202,567,2.662,588,2.193,748,2.465,767,3.238,887,2.301,934,2.713,983,1.831,1118,3.184,1119,2.465,1129,3.41,1481,2.908,1482,5.931,1483,4.222,1484,5.931,1485,5.173,1486,5.819,1487,4.978,1488,5.136,1489,5.173,1490,5.173,1491,3.739,1492,4.697,1493,3.739,1494,3.739,1495,3.739,1496,3.739,1497,3.739,1498,3.739,1499,3.739,1500,3.739,1501,3.739,1502,2.908,1503,3.739,1504,2.662,1505,2.465,1506,3.238]],["title/injectables/NavigationService.html",[773,1.382,934,1.646]],["body/injectables/NavigationService.html",[3,0.201,4,0.16,9,0.181,14,2.363,19,0.244,20,0.432,21,0.73,23,1.209,25,1.01,29,0.886,35,0.937,37,0.98,38,0.016,39,0.809,40,0.441,43,2.089,46,1.025,47,1.368,53,1.133,54,0.944,56,0.381,58,0.456,61,3.26,62,2.818,66,2.133,68,0.261,69,0.082,165,0.011,181,0.011,321,1.7,356,2.857,365,2.133,441,1.487,453,5.109,609,3.906,728,3.965,773,2.108,774,2.363,804,2.496,919,4.83,934,2.511,1332,5.131,1381,4.676,1486,5.688,1487,5.833,1488,5.688,1505,3.906,1507,3.562,1508,6.568,1509,6.945,1510,5.925,1511,5.925,1512,4.579,1513,5.925,1514,5.925,1515,4.579,1516,5.925,1517,4.579,1518,5.925,1519,4.579,1520,4.579,1521,4.579,1522,5.925,1523,4.579,1524,5.925,1525,4.579,1526,4.579,1527,4.579,1528,4.579]],["title/interfaces/PendingChangesComponent.html",[414,0.85,1529,2.56]],["body/interfaces/PendingChangesComponent.html",[0,0.231,3,0.257,4,0.205,9,0.231,19,0.312,20,0.503,38,0.016,40,0.34,56,0.4,64,2.482,66,2.728,68,0.303,165,0.013,181,0.013,238,1.133,267,4.168,282,5.889,414,1.282,499,2.728,1492,4.834,1529,4.834,1530,4.554,1531,4.554,1532,4.91,1533,5.973,1534,5.071]],["title/components/PinyinFormFieldComponent.html",[0,0.153,152,0.85]],["body/components/PinyinFormFieldComponent.html",[0,0.206,1,0.676,2,1.126,3,0.13,4,0.104,5,0.793,6,0.793,7,0.793,8,0.793,9,0.117,11,0.703,12,1.652,13,1.716,15,0.959,17,0.959,19,0.158,20,0.319,21,0.715,23,1.088,25,0.746,26,1.095,35,0.886,37,0.858,38,0.016,39,0.82,40,0.386,43,2.028,46,1.038,47,1.388,53,0.85,54,0.708,55,1.312,56,0.405,58,0.295,68,0.13,69,0.053,85,1.055,91,1.055,92,1.149,93,0.826,101,0.971,102,1.698,109,0.732,116,0.649,117,1.172,118,1.126,119,0.676,120,1.541,121,0.793,122,0.793,123,0.623,124,0.793,125,0.649,126,0.793,127,0.649,128,0.958,129,0.793,130,0.649,131,1.172,132,0.676,133,0.959,134,1.172,135,0.676,136,0.793,137,0.676,138,0.793,139,0.649,140,0.967,141,0.793,142,0.649,143,0.649,144,0.793,145,0.649,146,1.04,147,1.172,148,0.649,149,0.762,150,0.676,151,0.793,152,1.408,153,1.512,154,1.414,155,0.793,156,0.649,157,0.793,158,0.676,159,1.237,160,0.732,161,1.172,162,0.649,163,0.793,164,0.649,165,0.01,166,0.623,167,0.793,168,0.732,169,0.793,170,0.676,171,0.793,172,0.793,173,0.676,174,1.237,175,1.541,176,1.395,177,0.762,178,0.703,179,0.762,180,0.793,181,0.008,184,2.428,188,2.532,202,1.495,238,0.848,241,2.695,259,3.407,261,3.407,293,1.082,296,1.626,330,1.256,334,1.201,349,1.626,355,1.824,408,1.149,498,1.698,507,1.559,522,1.149,538,2.532,541,1.149,554,1.713,555,1.713,556,1.149,558,1.824,587,4.053,624,1.256,640,2.532,689,1.713,736,2.567,853,3.119,901,4.513,1064,3.407,1066,2.567,1067,2.567,1116,3.119,1118,2.696,1119,1.954,1127,2.888,1128,2.11,1130,2.888,1131,2.11,1145,4.481,1146,4.481,1228,4.513,1229,4.053,1230,3.407,1231,4.477,1232,4.477,1233,3.407,1234,3.407,1239,3.407,1241,3.407,1243,3.407,1245,4.777,1248,4.513,1250,2.567,1535,2.11,1536,4.513,1537,3.794,1538,4.513,1539,5.21,1540,4.38,1541,5.21,1542,5.756,1543,4.38,1544,5.568,1545,2.964,1546,2.964,1547,2.964,1548,2.964,1549,2.964,1550,4.38,1551,2.964,1552,4.38,1553,2.964,1554,2.964,1555,5.21,1556,2.964,1557,2.964,1558,2.964,1559,3.794,1560,2.11,1561,2.964,1562,2.964,1563,2.964,1564,2.964,1565,2.964,1566,2.964,1567,4.38,1568,2.964,1569,2.964,1570,4.38,1571,2.964]],["title/classes/SessionCard.html",[69,0.07,1572,2.56]],["body/classes/SessionCard.html",[3,0.148,4,0.118,9,0.133,19,0.179,20,0.35,21,0.534,25,0.819,26,1.413,29,0.652,35,0.946,37,0.717,38,0.016,39,0.592,40,0.418,43,1.339,46,1.049,47,1.135,53,1.054,54,0.83,56,0.325,68,0.148,69,0.06,85,1.199,91,1.199,101,1.836,106,3.852,114,1.641,128,1.175,153,1.178,165,0.009,181,0.009,238,1.085,240,3.739,326,1.496,370,1.837,373,2.745,375,3.979,376,2.376,386,4.36,392,1.854,394,3.763,407,3.17,408,2.173,411,2.221,412,2.221,413,2.221,423,3.24,424,2.221,428,2.005,441,0.97,541,1.306,553,1.496,556,1.306,720,3.739,729,2.917,763,2.959,863,2.917,1300,2.398,1301,2.917,1386,3.17,1443,4.459,1572,3.17,1573,2.398,1574,5.605,1575,6.918,1576,5.605,1577,5.821,1578,5.605,1579,4.163,1580,6.113,1581,6.113,1582,6.113,1583,5.605,1584,4.807,1585,3.369,1586,3.369,1587,3.369,1588,3.369,1589,3.369,1590,4.854,1591,3.369,1592,4.854,1593,4.854,1594,3.369,1595,4.163,1596,3.369,1597,3.369,1598,4.807,1599,6.721,1600,5.821,1601,6.113,1602,6.113,1603,4.163,1604,4.807,1605,4.807,1606,4.807,1607,3.369,1608,6.113,1609,7.073,1610,3.369,1611,3.369,1612,3.369,1613,3.369,1614,3.369,1615,3.369,1616,3.369,1617,3.369,1618,3.369,1619,3.369,1620,3.369,1621,4.807,1622,4.807,1623,3.739,1624,3.739,1625,3.739,1626,3.739,1627,3.739,1628,3.369,1629,3.369,1630,3.369,1631,3.369,1632,5.605,1633,6.464,1634,5.605,1635,4.807,1636,6.113,1637,4.807,1638,3.369,1639,4.807,1640,3.369,1641,3.369,1642,3.369,1643,4.854,1644,3.369]],["title/components/SessionComponent.html",[0,0.153,156,0.85]],["body/components/SessionComponent.html",[0,0.202,1,0.657,2,1.103,3,0.127,4,0.101,5,0.771,6,0.771,7,0.771,8,0.771,9,0.114,11,0.684,12,1.647,13,1.711,15,0.939,17,0.939,19,0.153,20,0.313,21,0.477,23,1.161,25,0.731,26,1.424,29,0.83,33,3.809,34,2.67,35,0.868,37,0.64,38,0.016,39,0.748,40,0.329,44,2.64,46,0.8,47,1.054,53,1.038,54,0.864,55,1.168,56,0.428,58,0.287,64,1.221,66,1.342,67,1.411,68,0.127,69,0.052,85,1.025,91,1.025,92,1.117,93,1.195,94,0.87,97,1.999,102,1.663,106,2.213,107,1.899,108,1.117,109,0.712,116,0.631,117,1.148,118,1.103,119,0.657,120,1.519,121,0.771,122,0.771,123,0.606,124,0.771,125,0.631,126,0.771,127,0.631,128,1.099,129,0.771,130,0.631,131,1.148,132,0.657,133,1.243,134,1.148,135,0.657,136,0.771,137,0.657,138,0.771,139,0.631,140,0.951,141,0.771,142,0.631,143,0.631,144,0.771,145,0.939,146,1.018,147,1.148,148,0.631,149,0.741,150,0.657,151,0.771,152,0.631,153,0.606,154,0.513,155,0.771,156,1.243,157,0.771,158,0.657,159,1.718,160,0.712,161,1.148,162,0.631,163,0.771,164,0.631,165,0.01,166,0.606,167,0.771,168,0.712,169,0.771,170,0.657,171,0.771,172,0.771,173,0.657,174,0.684,175,0.771,176,0.771,177,0.741,178,0.684,179,0.741,180,0.771,181,0.008,232,1.487,238,0.558,268,2.495,269,2.495,282,4.416,293,1.06,330,1.221,340,1.593,356,1.117,357,0.983,359,0.906,365,1.342,368,1.773,390,1.411,408,1.117,428,0.803,448,1.405,449,1.905,475,2.051,498,1.663,507,2.507,525,2.051,530,1.117,531,1.07,541,1.117,553,1.279,556,1.117,558,1.773,560,1.665,561,1.899,594,3.678,611,2.828,626,1.342,627,2.051,695,1.773,700,2.644,701,1.665,744,1.899,819,2.051,830,3.054,832,3.054,846,4.042,865,2.051,867,2.051,878,2.479,933,3.593,934,2.794,936,2.241,983,1.411,986,1.571,987,1.899,1144,1.899,1207,1.899,1208,1.899,1219,2.051,1220,2.051,1221,2.051,1222,2.241,1337,2.495,1365,4.345,1417,2.241,1492,3.379,1505,1.899,1529,3.379,1572,4.195,1626,2.241,1627,2.241,1645,2.495,1646,5.124,1647,4.289,1648,5.124,1649,5.124,1650,5.124,1651,5.124,1652,4.438,1653,5.124,1654,5.677,1655,4.289,1656,2.881,1657,4.289,1658,2.881,1659,2.881,1660,4.289,1661,2.881,1662,2.881,1663,2.881,1664,2.881,1665,2.881,1666,2.881,1667,2.495,1668,2.495,1669,4.289,1670,4.289,1671,2.881,1672,2.881,1673,2.881,1674,2.881,1675,4.289,1676,4.289,1677,2.881,1678,5.124,1679,2.881,1680,2.241,1681,5.124,1682,2.881,1683,4.289,1684,2.881,1685,2.881,1686,2.881,1687,2.881,1688,2.881,1689,2.881,1690,2.495,1691,2.495,1692,2.051,1693,2.881,1694,2.495,1695,2.881,1696,2.881,1697,2.881,1698,2.881,1699,2.881,1700,2.881,1701,2.881,1702,2.881,1703,2.881,1704,2.881,1705,2.881,1706,2.241,1707,2.881,1708,2.881,1709,2.881,1710,2.495]],["title/components/SessionFillingStepComponent.html",[0,0.153,158,0.885]],["body/components/SessionFillingStepComponent.html",[0,0.166,1,0.482,2,0.868,3,0.093,4,0.074,5,0.566,6,0.566,7,0.566,8,0.566,9,0.083,11,0.502,12,1.589,13,1.667,15,0.739,17,0.739,19,0.113,20,0.246,21,0.68,23,1.223,25,0.575,26,1.326,29,0.409,34,2.274,35,0.9,37,0.504,38,0.016,39,0.649,40,0.366,43,1.341,44,1.301,46,0.955,47,1.314,53,0.961,54,0.8,55,1.343,56,0.342,58,0.211,67,1.035,68,0.093,69,0.038,85,0.752,91,0.752,92,0.819,93,1.175,94,1.273,95,0.856,96,0.856,97,0.985,102,0.819,104,0.752,105,2.041,109,0.522,111,2.404,113,1.708,114,0.482,116,0.463,117,0.904,118,0.868,119,0.482,120,1.289,121,0.566,122,0.566,123,0.444,124,0.566,125,0.463,126,0.566,127,0.463,128,1.175,129,0.566,130,0.463,131,0.904,132,0.482,133,0.739,134,0.904,135,0.482,136,0.566,137,0.482,138,0.566,139,0.463,140,0.783,141,0.566,142,0.463,143,0.463,144,0.566,145,0.463,146,0.801,147,0.904,148,0.463,149,0.543,150,0.482,151,0.566,152,0.463,153,0.886,154,0.75,155,0.566,156,0.463,157,0.566,158,1.098,159,1.695,160,1.959,161,0.904,162,0.463,163,0.566,164,0.463,165,0.008,166,0.444,167,0.566,168,0.522,169,0.566,170,0.482,171,0.566,172,0.566,173,0.482,174,0.502,175,0.566,176,0.566,177,0.543,178,0.502,179,0.543,180,0.566,181,0.007,238,1.019,241,1.368,293,0.834,305,1.841,335,1.742,340,2.084,348,1.393,349,2.187,350,1.742,351,1.393,357,1.439,358,0.785,359,1.514,360,0.785,365,2.244,373,2.065,375,2.078,392,1.001,394,2.964,408,1.309,441,0.972,448,1.381,475,1.505,498,0.819,501,1.872,504,2.138,507,1.873,513,2.226,517,1.573,518,2.078,522,2.041,523,1.83,528,1.654,529,1.152,530,1.309,531,1.565,532,1.393,541,1.867,542,2.078,545,2.437,547,1.091,552,1.952,553,0.939,556,0.819,567,1.505,569,2.244,609,2.78,683,1.393,685,1.393,689,1.222,734,1.83,738,2.404,744,3.471,803,1.393,884,1.644,887,1.301,919,2.595,934,2.497,983,1.035,996,1.505,997,1.644,1044,2.924,1049,1.505,1086,1.83,1362,4.847,1417,2.626,1443,4.249,1444,1.505,1446,2.226,1447,2.626,1448,3.28,1458,1.644,1504,1.505,1572,3.7,1579,2.924,1593,3.652,1595,2.924,1603,4.17,1652,3.652,1711,4.216,1712,5.264,1713,4.216,1714,4.216,1715,2.78,1716,5.264,1717,4.815,1718,4.815,1719,5.612,1720,5.612,1721,4.815,1722,4.815,1723,3.376,1724,2.924,1725,1.83,1726,2.113,1727,2.113,1728,2.113,1729,2.113,1730,2.113,1731,2.113,1732,2.113,1733,2.113,1734,2.113,1735,2.113,1736,2.113,1737,2.113,1738,3.745,1739,4.216,1740,3.376,1741,4.216,1742,4.216,1743,4.216,1744,2.113,1745,2.113,1746,2.113,1747,2.113,1748,2.113,1749,1.644,1750,2.626,1751,1.644,1752,1.644,1753,1.644,1754,2.113,1755,2.113,1756,2.113,1757,1.83,1758,2.113,1759,2.113,1760,2.113,1761,2.113,1762,2.113,1763,2.113,1764,2.113,1765,4.216,1766,4.216,1767,4.815,1768,2.113,1769,2.113,1770,2.113,1771,2.113,1772,2.113,1773,2.113,1774,4.216,1775,4.216,1776,3.376,1777,3.376,1778,2.113,1779,2.113,1780,2.113,1781,2.113,1782,2.113,1783,2.113,1784,2.113,1785,2.113,1786,1.83,1787,2.113,1788,2.113,1789,3.376,1790,2.113,1791,2.113,1792,2.113,1793,5.264,1794,2.113,1795,3.376,1796,2.113,1797,2.113,1798,2.113,1799,4.815,1800,2.113,1801,4.216,1802,2.113,1803,3.376,1804,2.113,1805,2.113,1806,2.113,1807,2.113,1808,2.113,1809,3.376,1810,3.376,1811,2.113,1812,2.113,1813,2.924,1814,1.83,1815,1.83,1816,1.83,1817,2.113,1818,2.113,1819,2.113,1820,2.113,1821,2.113,1822,2.113,1823,2.113,1824,2.113,1825,2.113,1826,2.113,1827,2.113,1828,2.113]],["title/components/SessionLauncherComponent.html",[0,0.153,162,0.85]],["body/components/SessionLauncherComponent.html",[0,0.201,1,0.653,2,1.098,3,0.126,4,0.1,5,0.767,6,0.767,7,0.767,8,0.767,9,0.113,11,0.68,12,1.646,13,1.739,15,0.935,17,0.935,19,0.153,20,0.311,21,0.731,23,1.078,25,0.728,26,1.383,29,0.827,33,3.802,34,2.665,35,0.811,37,0.762,38,0.016,39,0.782,40,0.382,46,0.797,47,0.793,53,0.467,54,0.389,56,0.414,58,0.285,64,1.214,67,1.403,68,0.126,69,0.051,92,1.11,93,1.422,94,1.709,95,1.16,96,1.16,104,1.019,105,1.98,109,0.708,113,1.16,114,1.448,116,0.627,117,1.143,118,1.098,119,0.653,120,1.515,121,0.767,122,0.767,123,0.602,124,0.767,125,0.627,126,0.767,127,0.627,128,0.991,129,0.767,130,0.627,131,1.143,132,0.653,133,1.48,134,1.143,135,0.653,136,0.767,137,0.653,138,0.767,139,0.627,140,1.221,141,0.767,142,0.627,143,0.627,144,0.767,145,0.627,146,1.014,147,1.143,148,0.627,149,0.736,150,0.653,151,0.767,152,0.627,153,0.602,154,0.51,155,0.767,156,0.627,157,0.767,158,0.653,159,1.694,160,0.708,161,1.143,162,1.239,163,0.767,164,0.627,165,0.01,166,0.602,167,0.767,168,0.708,169,0.767,170,0.653,171,0.767,172,0.767,173,0.653,174,0.68,175,0.767,176,0.767,177,0.736,178,0.68,179,0.736,180,0.767,181,0.008,232,1.478,238,0.988,275,4.813,283,3.065,285,2.442,293,1.055,295,4.03,321,1.063,330,1.81,341,2.629,349,1.063,360,1.063,392,1.507,415,3.586,444,1.334,448,0.938,449,1.272,450,2.228,451,2.228,463,3.272,480,2.816,482,3.04,492,1.888,494,1.888,496,2.629,501,2.268,504,2.514,517,1.99,522,1.11,528,1.403,529,1.561,530,1.656,531,1.586,532,1.888,560,2.468,561,2.816,569,1.99,588,2.691,592,1.763,598,2.293,644,1.888,662,2.165,768,4.422,769,5.499,771,4.422,888,2.48,932,3.222,933,3.586,934,2.691,980,1.888,981,1.561,982,1.888,983,1.403,986,1.561,987,1.888,1103,2.48,1104,2.48,1108,2.48,1298,3.698,1365,4.337,1386,4.337,1455,2.039,1667,2.48,1668,2.48,1829,5.855,1830,2.48,1831,4.27,1832,5.106,1833,4.27,1834,5.106,1835,4.683,1836,2.864,1837,4.27,1838,2.864,1839,2.864,1840,4.27,1841,2.864,1842,2.864,1843,4.27,1844,2.864,1845,2.864,1846,2.228,1847,2.864,1848,2.864,1849,4.27,1850,2.864,1851,2.228,1852,2.864,1853,2.864,1854,4.27,1855,2.864,1856,2.864,1857,2.864,1858,2.864,1859,2.864,1860,2.864,1861,2.864,1862,2.864,1863,2.864,1864,2.864,1865,2.864,1866,2.864,1867,2.864,1868,2.864,1869,2.864,1870,4.27,1871,2.864,1872,2.864,1873,2.864,1874,5.106,1875,2.864,1876,5.106,1877,2.864,1878,4.27,1879,2.864,1880,2.864,1881,2.864,1882,2.864,1883,2.864]],["title/components/SessionMatchingStepComponent.html",[0,0.153,164,0.85]],["body/components/SessionMatchingStepComponent.html",[0,0.19,1,0.591,2,1.018,3,0.114,4,0.091,5,1.06,6,0.694,7,0.694,8,0.694,9,0.102,11,0.615,12,1.629,13,1.697,15,0.867,17,0.867,19,0.138,20,0.289,21,0.729,23,1.139,25,0.675,26,1.378,29,0.502,35,0.9,37,0.802,38,0.016,39,0.784,40,0.41,46,0.992,47,1.18,53,0.946,54,0.788,56,0.312,58,0.258,68,0.114,69,0.047,72,3.08,92,1.005,93,1.702,94,1.845,95,1.947,96,2.18,97,1.845,101,1.297,105,1.535,106,2.043,107,1.709,108,1.005,109,0.64,113,1.05,114,0.591,115,2.778,116,0.567,117,1.06,118,1.018,119,0.591,120,1.44,121,0.694,122,0.694,123,0.545,124,0.694,125,0.567,126,0.694,127,0.567,128,1.216,129,0.694,130,0.567,131,1.06,132,0.591,133,0.867,134,1.06,135,0.591,136,0.694,137,0.591,138,0.694,139,0.567,140,0.892,141,0.694,142,0.567,143,0.567,144,0.694,145,0.567,146,0.94,147,1.06,148,0.567,149,0.666,150,0.591,151,0.694,152,0.567,153,0.545,154,0.461,155,0.694,156,0.567,157,0.694,158,0.591,159,1.679,160,0.64,161,1.06,162,0.567,163,0.694,164,1.178,165,0.015,166,0.545,167,0.694,168,0.64,169,0.694,170,0.591,171,0.694,172,0.694,173,0.591,174,0.615,175,0.694,176,0.694,177,0.666,178,0.615,179,0.666,180,0.694,181,0.008,238,0.93,293,0.978,305,2.159,321,1.47,326,1.151,335,2.48,340,1.47,341,2.437,346,2.043,348,3.169,357,0.884,358,0.962,359,1.245,360,1.784,362,2.244,392,0.615,414,0.567,428,0.722,441,0.97,448,2.391,498,1.005,501,2.134,504,2.389,507,1.409,517,1.207,518,2.958,530,1.005,531,0.962,542,2.437,545,2.778,552,2.289,553,1.151,564,1.845,609,1.709,695,1.595,738,2.819,744,3.822,763,2.437,803,1.709,819,2.819,898,1.709,913,3.738,934,2.457,983,1.269,1046,1.709,1192,3.08,1286,2.62,1302,2.611,1345,2.016,1362,4.854,1406,2.244,1442,5.097,1443,4.255,1444,1.845,1445,5.293,1446,2.611,1447,3.08,1448,3.738,1449,4.162,1450,4.162,1451,4.162,1452,4.162,1453,4.162,1454,4.162,1455,2.819,1456,2.244,1457,5.02,1458,3.08,1459,2.244,1460,2.244,1461,3.429,1462,5.293,1463,3.08,1464,3.429,1465,3.429,1466,2.244,1467,2.244,1468,2.244,1469,2.244,1470,3.08,1471,3.429,1472,4.66,1473,2.244,1474,2.244,1475,2.244,1476,2.244,1477,2.244,1478,2.244,1479,2.244,1480,2.244,1504,1.845,1724,2.244,1725,3.429,1815,2.244,1884,3.96,1885,4.806,1886,3.96,1887,3.96,1888,2.591,1889,2.591,1890,2.591,1891,2.591,1892,2.591,1893,2.591,1894,2.591,1895,2.591,1896,2.591,1897,2.591,1898,2.591,1899,2.591,1900,2.591,1901,2.591,1902,2.591,1903,3.96,1904,3.96,1905,3.96,1906,3.96,1907,3.96,1908,2.591,1909,2.591,1910,2.591]],["title/classes/Settings.html",[69,0.07,285,1.441]],["body/classes/Settings.html",[3,0.187,4,0.149,9,0.168,19,0.227,20,0.412,21,0.705,23,1.268,25,0.963,29,0.824,35,0.95,37,0.635,38,0.016,39,0.525,40,0.439,46,0.664,53,1.221,54,1.017,55,1.54,68,0.297,69,0.076,165,0.011,181,0.011,285,2.507,293,1.396,326,3.121,330,1.805,370,2.321,376,2.862,392,1.798,414,0.932,428,1.186,477,3.031,507,2.01,646,3.031,722,4.394,735,3.312,915,4.452,998,3.312,999,3.312,1263,4.762,1286,3.08,1395,3.312,1396,2.807,1402,3.312,1680,3.312,1715,4.452,1752,3.312,1753,3.312,1911,3.031,1912,4.807,1913,4.807,1914,4.807,1915,4.807,1916,4.807,1917,4.807,1918,5.848,1919,5.649,1920,4.452,1921,4.18,1922,4.258,1923,4.258,1924,4.258,1925,4.258,1926,4.156,1927,4.258,1928,4.258,1929,5.252,1930,4.156,1931,4.258,1932,4.258,1933,4.258,1934,2.807,1935,3.312,1936,3.688,1937,3.688,1938,4.893,1939,3.312,1940,3.688,1941,3.688,1942,3.688]],["title/components/SettingsComponent.html",[0,0.153,166,0.816]],["body/components/SettingsComponent.html",[0,0.189,1,0.588,2,1.014,3,0.173,4,0.09,5,0.69,6,0.69,7,0.69,8,0.69,9,0.189,11,0.612,12,1.628,13,1.691,15,0.864,17,0.864,19,0.137,20,0.287,21,0.533,23,1.182,25,0.672,26,1.128,29,0.763,34,2.571,35,0.858,37,0.384,38,0.016,39,0.661,40,0.311,46,0.747,47,1.132,53,0.995,54,0.829,55,0.899,56,0.38,58,0.257,67,1.263,68,0.113,69,0.046,85,0.917,92,0.999,93,1.099,94,1.62,99,2.808,101,0.844,102,1.529,104,0.917,105,1.857,108,0.999,109,0.637,110,1.405,113,2.343,114,0.588,116,0.564,117,1.056,118,1.014,119,0.588,120,1.548,121,0.69,122,0.69,123,0.542,124,0.69,125,0.564,126,0.69,127,0.564,128,1.087,129,0.69,130,0.564,131,1.056,132,0.588,133,1.175,134,1.056,135,0.588,136,0.69,137,0.588,138,0.69,139,0.564,140,0.889,141,0.69,142,0.564,143,0.564,144,0.69,145,0.564,146,0.936,147,1.056,148,0.564,149,0.663,150,0.588,151,0.69,152,0.564,153,0.542,154,1.029,155,0.69,156,0.564,157,0.69,158,0.588,159,1.373,160,0.637,161,1.056,162,0.564,163,0.69,164,0.564,165,0.011,166,1.128,167,0.69,168,0.637,169,0.69,170,0.588,171,0.69,172,0.69,173,0.588,174,0.612,175,0.69,176,0.69,177,0.663,178,0.612,179,0.663,180,0.69,181,0.008,199,1.932,215,3.82,216,1.835,241,1.941,256,2.925,280,4.174,283,1.838,285,2.491,293,0.974,319,1.587,349,2.264,350,1.33,354,1.835,355,1.587,356,1.529,357,0.88,358,0.957,359,0.81,360,0.957,361,1.145,414,0.564,415,2.15,441,1.504,448,1.757,449,1.145,498,1.857,501,2.127,504,2.383,517,1.201,522,2.242,524,1.835,528,1.263,532,1.7,567,1.835,569,2.694,605,2.948,622,4.13,624,1.093,633,1.835,644,1.7,689,1.49,695,1.587,776,2.035,784,3.275,800,2.005,853,1.835,855,2.808,876,3.416,882,1.835,887,1.587,915,3.538,934,2.585,963,2.808,983,1.263,1046,2.6,1261,1.587,1262,1.835,1272,3.068,1286,3.153,1311,2.005,1322,2.005,1330,4.647,1345,2.005,1346,3.068,1396,2.6,1455,1.835,1502,2.005,1506,2.232,1692,1.835,1715,3.538,1846,2.005,1851,3.068,1912,3.82,1913,3.82,1914,3.82,1915,3.82,1917,3.82,1920,1.7,1921,3.158,1926,3.754,1930,2.428,1934,1.7,1943,2.005,1944,4.148,1945,3.416,1946,5.008,1947,4.498,1948,4.148,1949,4.148,1950,4.148,1951,4.647,1952,4.647,1953,3.726,1954,3.944,1955,2.578,1956,2.578,1957,2.578,1958,3.416,1959,3.068,1960,2.578,1961,4.647,1962,4.647,1963,4.647,1964,4.647,1965,3.416,1966,3.416,1967,2.578,1968,2.578,1969,4.647,1970,3.068,1971,2.578,1972,2.578,1973,2.578,1974,2.232,1975,2.232,1976,2.005,1977,2.232,1978,2.232,1979,2.232,1980,2.232,1981,1.835,1982,2.232,1983,3.416,1984,3.416,1985,3.416,1986,3.416,1987,3.416,1988,3.416,1989,3.416,1990,3.416,1991,2.232,1992,2.232,1993,2.232,1994,2.232,1995,2.232,1996,2.232,1997,2.232,1998,2.232,1999,2.232,2000,2.232,2001,2.232,2002,2.232,2003,2.232,2004,2.232,2005,2.232,2006,6.099,2007,5.366,2008,3.944,2009,3.944,2010,3.416,2011,3.944,2012,3.944,2013,3.416,2014,3.944,2015,2.6,2016,3.068,2017,3.944,2018,2.232,2019,2.578,2020,2.578,2021,2.578]],["title/interfaces/SettingsForm.html",[414,0.85,1981,2.764]],["body/interfaces/SettingsForm.html",[0,0.212,3,0.174,4,0.138,9,0.156,12,0.832,13,0.866,15,0.866,17,0.866,19,0.211,20,0.392,23,1.129,26,1.378,29,0.766,34,2.475,38,0.016,40,0.427,47,1.134,55,1.226,56,0.427,58,0.394,67,1.938,68,0.174,69,0.071,110,2.157,154,0.704,165,0.01,166,0.832,181,0.01,215,3.828,216,2.816,285,2.545,293,0.977,319,2.435,414,0.866,441,1.505,498,1.534,499,1.843,501,2.388,504,1.757,605,3.31,622,4.943,624,1.677,633,2.816,644,2.608,784,3.152,800,3.077,853,2.816,915,4.661,934,2.589,963,2.816,983,1.938,1261,2.435,1262,2.816,1272,3.077,1286,3.33,1311,3.077,1322,3.077,1692,2.816,1715,4.661,1846,3.077,1851,4.182,1912,5.033,1913,5.033,1914,5.033,1915,5.033,1917,5.033,1920,2.608,1921,2.608,1926,4.034,1930,3.31,1934,2.608,1943,3.077,1944,3.426,1945,3.426,1946,3.426,1947,3.077,1948,3.426,1949,3.426,1950,3.426,1951,3.426,1952,3.426,1953,3.077,1958,3.426,1959,3.077,1961,6.123,1962,4.657,1963,4.657,1964,4.657,1965,3.426,1966,3.426,1969,4.657,1970,3.077,1974,3.426,1975,3.426,1976,3.077,1977,3.426,1978,3.426,1979,3.426,1980,3.426,1981,3.828,1982,3.426,1983,4.657,1984,4.657,1985,4.657,1986,4.657,1987,4.657,1988,4.657,1989,4.657,1990,4.657,1991,3.426,1992,3.426,1993,3.426,1994,3.426,1995,3.426,1996,3.426,1997,3.426,1998,3.426,1999,3.426,2000,3.426,2001,3.426,2002,3.426,2003,3.426,2004,3.426,2005,3.426]],["title/interfaces/SettingsModel.html",[414,0.85,1263,2.56]],["body/interfaces/SettingsModel.html",[3,0.205,4,0.163,9,0.184,19,0.248,20,0.436,21,0.666,23,1.212,38,0.016,40,0.454,55,1.365,68,0.307,69,0.084,165,0.012,181,0.012,285,2.223,293,1.15,326,3.449,376,3.065,392,1.876,414,1.019,428,1.296,477,3.313,499,2.168,507,1.656,646,3.313,722,3.62,735,3.62,915,4.767,998,3.62,999,3.62,1263,4.607,1286,2.537,1395,3.62,1396,3.068,1402,3.62,1680,3.62,1715,4.767,1752,3.62,1753,3.62,1911,3.313,1912,5.147,1913,5.147,1914,5.147,1915,5.147,1916,5.147,1917,5.147,1918,4.031,1920,4.767,1921,3.948,1926,3.685,1929,5.624,1930,4.074,1934,3.068,1935,3.62,1936,4.031,1937,4.031,1938,5.185,1939,3.62,1940,4.031,1941,4.031,1942,4.031]],["title/modules/SettingsModule.html",[182,1.901,197,2.56]],["body/modules/SettingsModule.html",[3,0.227,4,0.181,9,0.204,38,0.016,56,0.461,58,0.515,68,0.227,69,0.093,110,2.819,116,1.132,123,1.598,165,0.012,166,1.598,170,1.733,181,0.012,182,2.532,184,2.409,185,2.988,186,4.581,187,3.409,188,2.988,189,3.182,197,5.208,198,4.218,199,2.532,200,3.182,202,2.184,205,4.218,216,3.681,241,2.095,297,2.712,334,2.095,624,2.192,690,3.681,1117,5.541,1127,4.218,1128,3.681,1130,4.218,1131,3.681,1133,5.541,1134,4.478,1140,4.021,2022,4.478,2023,4.478,2024,4.478,2025,5.17,2026,6.398,2027,5.17,2028,6.398,2029,4.021,2030,4.021,2031,5.17,2032,5.17]],["title/injectables/SettingsService.html",[34,1.573,773,1.382]],["body/injectables/SettingsService.html",[3,0.205,4,0.163,9,0.184,14,2.402,19,0.248,20,0.436,21,0.666,24,6.052,25,1.02,26,1.556,29,0.901,34,2.426,35,0.912,37,0.893,38,0.016,39,0.738,40,0.384,46,1.033,47,1.111,53,0.759,54,0.632,56,0.42,58,0.464,66,2.168,68,0.205,69,0.084,114,1.061,165,0.012,181,0.012,238,0.901,285,2.86,339,2.168,428,1.844,441,1.41,598,2.426,613,3.068,662,1.973,763,2.865,773,2.131,774,2.402,776,3.819,783,4.657,784,3.731,804,2.537,805,3.313,806,3.313,996,4.975,1180,3.62,1181,3.62,1264,4.031,1381,4.713,1492,4.364,1916,4.263,1930,4.301,1935,3.62,1939,3.62,2033,3.62,2034,6.619,2035,5.987,2036,4.654,2037,4.654,2038,4.654,2039,5.987,2040,4.654,2041,5.987,2042,4.654,2043,4.654,2044,3.62,2045,4.654,2046,4.654,2047,4.654,2048,4.654,2049,4.654,2050,4.654,2051,4.654,2052,4.654,2053,4.654,2054,4.654,2055,4.654,2056,4.031,2057,4.654,2058,4.654]],["title/components/SidenavComponent.html",[0,0.153,168,0.959]],["body/components/SidenavComponent.html",[0,0.239,1,0.888,2,1.368,3,0.171,4,0.136,5,1.042,6,1.042,7,1.042,8,1.042,9,0.154,11,0.924,12,1.692,13,1.759,15,1.164,17,1.164,19,0.207,20,0.388,23,0.945,35,0.48,38,0.016,39,0.746,53,0.635,54,0.529,55,1.213,56,0.418,58,0.388,59,2.567,64,1.65,68,0.171,69,0.07,92,1.509,93,1.814,94,2.213,95,2.454,96,2.454,97,1.814,101,1.275,104,1.893,105,1.509,106,2.744,107,2.567,108,1.509,109,0.962,114,0.888,116,0.852,117,1.423,118,1.368,119,0.888,120,1.824,121,1.042,122,1.042,123,0.818,124,1.042,125,0.852,126,1.042,127,0.852,128,1.064,129,1.042,130,0.852,131,1.423,132,0.888,133,1.164,134,1.423,135,0.888,136,1.042,137,0.888,138,1.042,139,0.852,140,1.124,141,1.042,142,0.852,143,0.852,144,1.042,145,0.852,146,1.262,147,1.423,148,0.852,149,1.001,150,0.888,151,1.042,152,0.852,153,0.818,154,0.693,155,1.042,156,0.852,157,1.042,158,0.888,159,1.438,160,0.962,161,1.423,162,0.852,163,1.042,164,0.852,165,0.012,166,0.818,167,1.042,168,1.608,169,1.042,170,0.888,171,1.042,172,1.042,173,0.888,174,0.924,175,1.042,176,1.042,177,1.001,178,0.924,179,1.001,180,1.042,181,0.01,202,1.815,238,0.753,265,3.273,283,2.478,285,2.417,296,1.975,297,2.254,334,1.577,340,1.975,349,1.445,357,1.815,358,1.445,359,1.672,360,1.975,361,2.362,365,1.814,498,1.509,513,2.567,522,1.509,528,1.907,530,1.509,531,1.445,560,2.25,563,3.028,564,2.771,570,2.567,695,2.396,739,3.028,1118,3.273,1119,2.567,1129,3.506,1261,2.396,1262,2.771,1386,3.506,1483,4.313,1947,5.302,1959,4.137,2015,2.567,2018,3.371,2059,3.028,2060,6.058,2061,6.058,2062,5.318,2063,3.893,2064,4.606,2065,3.893,2066,5.318,2067,5.318,2068,4.606,2069,5.318,2070,3.893,2071,3.893]],["title/components/SlideToggleComponent.html",[0,0.153,170,0.885]],["body/components/SlideToggleComponent.html",[0,0.245,1,0.798,2,1.27,3,0.154,4,0.123,5,0.937,6,0.937,7,0.937,8,0.937,9,0.138,11,0.831,12,1.677,13,1.744,15,1.082,17,1.082,19,0.186,20,0.36,21,0.729,23,1.173,25,0.842,26,1.038,35,0.862,37,0.854,38,0.016,39,0.839,40,0.381,46,1.023,47,1.217,53,0.571,54,0.891,55,1.418,56,0.361,58,0.349,68,0.154,69,0.063,93,0.975,94,1.491,95,1.418,97,2.302,102,1.915,104,1.758,108,1.915,109,0.865,114,0.798,116,0.766,117,1.322,118,1.27,119,0.798,120,1.822,121,0.937,122,0.937,123,0.736,124,0.937,125,0.766,126,0.937,127,0.766,128,1.023,129,0.937,130,0.766,131,1.322,132,0.798,133,1.082,134,1.322,135,0.798,136,0.937,137,0.798,138,0.937,139,0.766,140,1.063,141,0.937,142,0.766,143,0.766,144,0.937,145,0.766,146,1.173,147,1.322,148,0.766,149,0.9,150,0.798,151,0.937,152,0.766,153,0.736,154,0.623,155,0.937,156,0.766,157,0.937,158,0.798,159,1.359,160,0.865,161,1.322,162,0.766,163,0.937,164,0.766,165,0.011,166,0.736,167,0.937,168,0.865,169,0.937,170,1.552,171,1.912,172,0.937,173,0.798,174,0.831,175,0.937,176,0.937,177,0.9,178,0.831,179,0.9,180,0.937,181,0.01,188,2.855,202,1.686,227,3.257,259,3.842,261,3.842,291,3.517,296,1.834,297,2.427,315,5.441,330,2.094,334,1.418,339,2.898,340,2.527,346,2.549,349,1.3,357,1.195,358,1.3,359,1.1,361,1.554,365,1.631,368,3.041,522,1.357,565,2.155,566,3.031,570,2.308,624,1.484,690,3.517,739,2.723,1065,3.031,1225,5.242,1227,2.492,1229,3.842,1230,3.842,1231,4.453,1232,4.453,1233,3.842,1234,3.842,1235,4.453,1237,4.324,1239,2.723,1241,2.723,1243,2.723,1245,2.723,1246,3.031,1502,2.723,1536,4.958,1537,4.278,1538,4.958,1706,2.723,2029,2.723,2030,2.723,2072,3.031,2073,5.725,2074,4.94,2075,3.5,2076,3.5,2077,3.5,2078,3.5,2079,3.5,2080,3.5,2081,3.5,2082,3.5,2083,4.94,2084,3.031,2085,5.725,2086,5.725,2087,3.5,2088,3.5,2089,3.5,2090,3.5,2091,3.5,2092,3.5,2093,3.5]],["title/injectables/StatisticsService.html",[773,1.382,1835,2.764]],["body/injectables/StatisticsService.html",[3,0.211,4,0.168,9,0.189,14,2.473,19,0.255,20,0.444,21,0.746,25,1.039,26,1.485,29,1.181,35,0.871,37,1.001,38,0.016,39,0.827,40,0.41,46,0.952,56,0.433,58,0.477,68,0.211,69,0.086,140,1.132,165,0.012,181,0.012,238,1.367,283,2.842,374,2.128,392,1.593,428,1.869,444,3.292,463,2.77,492,4.022,494,4.022,496,3.755,588,2.845,598,2.862,662,2.845,773,2.171,774,2.473,776,3.848,784,3.91,804,2.612,805,3.411,806,3.411,932,3.653,981,2.612,1037,4.343,1049,4.343,1091,3.727,1171,4.15,1174,4.15,1180,3.727,1181,3.727,1182,3.727,1384,4.15,1835,4.343,2094,4.15,2095,6.1,2096,6.1,2097,6.1,2098,6.1,2099,4.791,2100,6.1,2101,4.791,2102,4.791,2103,4.791,2104,4.791,2105,4.791,2106,4.791,2107,4.791,2108,4.791]],["title/components/TabBarComponent.html",[0,0.153,173,0.885]],["body/components/TabBarComponent.html",[0,0.236,1,0.867,2,1.346,3,0.167,4,0.133,5,1.017,6,1.017,7,1.017,8,1.017,9,0.15,11,0.902,12,1.688,13,1.756,15,1.146,17,1.146,19,0.202,20,0.381,21,0.423,23,1.09,29,0.736,35,0.737,37,0.567,38,0.016,39,0.794,40,0.347,53,0.854,54,0.711,55,1.193,56,0.392,58,0.379,64,1.611,68,0.167,69,0.068,92,1.474,93,1.059,94,1.148,104,1.353,109,1.85,110,2.853,114,0.867,116,0.832,117,1.4,118,1.346,119,0.867,120,1.725,121,1.017,122,1.017,123,0.799,124,1.017,125,0.832,126,1.017,127,0.832,128,1.055,129,1.017,130,0.832,131,1.4,132,0.867,133,1.146,134,1.4,135,0.867,136,1.017,137,0.867,138,1.017,139,0.832,140,1.111,141,1.017,142,0.832,143,0.832,144,1.017,145,0.832,146,1.242,147,1.4,148,0.832,149,0.978,150,0.867,151,1.017,152,0.832,153,0.799,154,0.676,155,1.017,156,0.832,157,1.017,158,0.867,159,1.42,160,0.939,161,1.4,162,0.832,163,1.017,164,0.832,165,0.012,166,0.799,167,1.017,168,0.939,169,1.017,170,0.867,171,1.017,172,1.017,173,1.47,174,0.902,175,1.017,176,1.017,177,0.978,178,0.902,179,0.978,180,1.017,181,0.01,202,1.786,232,3.326,265,3.683,266,3.945,296,1.943,297,2.536,334,1.54,339,1.771,340,2.221,343,2.506,357,1.297,359,1.195,360,1.411,361,2.324,365,1.771,517,1.771,529,3.262,530,1.474,531,1.411,538,3.458,554,2.197,555,2.197,560,2.197,561,2.506,569,1.771,570,2.506,695,2.34,716,2.957,717,5.182,718,4.531,725,3.292,747,3.292,878,2.197,933,3.685,972,4.26,986,3.514,987,2.506,2109,5.232,2110,5.232,2111,4.654,2112,3.801,2113,3.801,2114,5.232,2115,5.232,2116,5.232,2117,6.445,2118,3.801,2119,3.801]],["title/injectables/TabBarService.html",[773,1.382,933,2.117]],["body/injectables/TabBarService.html",[3,0.184,4,0.147,9,0.165,14,2.159,19,0.223,20,0.407,21,0.621,23,0.981,25,0.952,26,1.321,33,4.038,35,0.861,37,0.833,38,0.016,39,0.688,40,0.456,43,1.556,44,4.516,46,0.981,47,1.362,53,0.911,54,0.759,56,0.365,58,0.417,62,3.437,66,1.95,68,0.316,69,0.075,85,1.489,91,1.489,109,1.553,159,1.326,165,0.011,181,0.011,232,3.709,280,4.344,283,2.602,285,2.49,441,1.127,448,1.829,449,3.258,541,1.622,556,1.622,773,1.987,774,2.159,804,2.281,878,3.876,919,4.424,933,3.045,936,5.707,972,4.974,986,3.918,1381,4.475,1592,4.836,2056,4.836,2111,5.707,2120,3.255,2121,6.285,2122,7.688,2123,6.706,2124,5.584,2125,5.584,2126,4.185,2127,5.584,2128,4.185,2129,5.584,2130,4.185,2131,6.285,2132,6.285,2133,6.285,2134,4.185,2135,5.584,2136,4.185,2137,3.624,2138,3.624,2139,3.624,2140,4.185,2141,5.584]],["title/components/VirtualKeyboardComponent.html",[0,0.153,174,0.921]],["body/components/VirtualKeyboardComponent.html",[0,0.17,1,0.497,2,0.889,3,0.096,4,0.076,5,0.583,6,0.583,7,0.583,8,0.583,9,0.086,11,0.517,12,1.595,13,1.656,15,0.757,17,0.757,19,0.303,20,0.252,21,0.594,23,1.196,25,0.589,26,0.904,35,0.859,37,0.642,38,0.016,39,0.701,40,0.37,43,1.723,46,0.764,47,0.909,53,1.009,54,0.84,55,0.981,56,0.37,58,0.217,68,0.096,69,0.039,85,0.775,91,0.775,92,0.845,93,1.723,94,1.924,95,0.883,96,0.883,97,2.004,100,3.346,101,0.713,102,2.398,103,1.887,104,0.775,106,1.785,107,1.436,108,1.341,109,0.538,111,3.062,113,1.401,114,0.789,115,1.259,116,0.477,117,1.311,118,0.889,119,0.497,120,1.43,121,0.583,122,0.583,123,0.458,124,0.583,125,0.477,126,0.583,127,0.477,128,0.834,129,0.583,130,0.477,131,0.926,132,0.497,133,0.757,134,0.926,135,0.497,136,0.583,137,0.497,138,0.583,139,0.477,140,0.798,141,0.583,142,0.477,143,0.477,144,0.583,145,0.477,146,0.821,147,0.926,148,0.477,149,0.56,150,0.497,151,0.583,152,0.477,153,0.458,154,0.388,155,0.583,156,0.477,157,0.583,158,0.497,159,1.021,160,0.538,161,0.926,162,0.477,163,0.583,164,0.477,165,0.008,166,0.458,167,0.583,168,0.538,169,0.583,170,0.497,171,0.583,172,0.583,173,0.497,174,1.163,175,1.656,176,1.815,177,0.56,178,1.163,179,0.56,180,0.583,181,0.007,202,1.18,238,1.034,296,1.284,297,1.823,321,1.597,328,2.462,329,2.129,334,0.883,339,2.49,340,2.366,343,1.436,346,1.124,347,1.887,348,3.931,352,5.273,357,0.743,358,0.809,359,1.352,360,1.984,365,1.015,367,2.995,368,1.341,392,1.468,423,1.999,425,1.436,428,0.607,441,0.868,507,2.201,513,1.436,517,1.015,530,1.341,531,1.284,538,2.486,541,1.899,542,2.129,545,3.446,547,1.124,552,2.831,554,1.259,555,1.259,556,0.845,558,1.341,560,2.486,563,1.694,564,1.551,565,1.341,569,1.612,570,1.436,614,2.836,683,1.436,684,1.887,737,5.353,882,3.062,898,3.523,1064,4.637,1300,1.551,1302,3.23,1344,1.887,1346,2.69,1403,5.02,1410,4.628,1470,2.69,1504,1.551,1505,1.436,1560,5.02,1600,2.995,1706,4.637,1710,1.887,1757,2.995,1813,2.995,1814,1.887,1816,2.995,1926,1.341,2010,1.887,2084,1.887,2142,1.694,2143,4.302,2144,4.302,2145,4.302,2146,3.459,2147,4.302,2148,4.302,2149,4.302,2150,4.302,2151,4.302,2152,4.302,2153,4.302,2154,3.459,2155,4.302,2156,3.459,2157,5.343,2158,4.302,2159,4.302,2160,2.178,2161,2.178,2162,2.178,2163,3.459,2164,2.178,2165,3.459,2166,6.529,2167,5.962,2168,3.459,2169,3.459,2170,4.302,2171,3.459,2172,2.995,2173,3.459,2174,5.962,2175,3.459,2176,3.459,2177,2.178,2178,4.302,2179,2.178,2180,3.459,2181,6.529,2182,6.529,2183,3.459,2184,3.459,2185,2.995,2186,3.459,2187,4.898,2188,2.178,2189,3.459,2190,3.459,2191,3.459,2192,4.302,2193,4.302,2194,2.178,2195,3.346,2196,2.178,2197,2.178,2198,3.81,2199,2.178,2200,3.346,2201,2.178,2202,2.178,2203,4.302,2204,2.178,2205,2.178,2206,2.178,2207,2.178,2208,2.178,2209,2.178,2210,2.178,2211,2.69,2212,1.694,2213,2.69,2214,3.81,2215,1.887,2216,1.887,2217,1.887,2218,2.178,2219,2.178,2220,4.302,2221,3.459,2222,2.178,2223,2.178,2224,2.178,2225,2.178,2226,3.725,2227,1.887,2228,1.887,2229,4.302,2230,2.178,2231,2.995,2232,2.178,2233,2.178,2234,2.178,2235,3.459,2236,2.995,2237,3.459,2238,2.178,2239,1.887,2240,2.178,2241,5.343,2242,2.178,2243,2.178,2244,3.459,2245,2.178,2246,2.178,2247,5.687,2248,2.178,2249,2.178,2250,2.178,2251,1.887,2252,2.178,2253,2.178,2254,4.302,2255,3.459,2256,2.178,2257,2.178,2258,3.459,2259,4.302,2260,2.178,2261,2.178]],["title/coverage.html",[2262,4.597]],["body/coverage.html",[0,0.308,1,0.677,9,0.117,10,2.571,34,1.203,38,0.016,40,0.172,54,0.403,69,0.119,114,1.862,119,0.677,123,0.624,125,0.65,127,0.65,128,0.463,130,0.65,132,0.677,133,1.261,135,0.677,137,0.677,139,0.65,142,0.65,143,0.65,145,0.65,146,1.041,148,0.65,150,0.677,152,0.65,154,1.025,156,0.65,158,0.677,160,1.084,162,0.65,164,0.65,165,0.012,166,0.624,168,0.734,170,0.677,173,0.677,174,0.705,178,0.705,181,0.008,184,1.383,201,2.309,217,2.309,232,2.263,239,2.309,267,2.114,270,2.114,272,2.114,275,2.114,285,1.102,290,2.571,292,1.957,371,3.439,372,1.532,414,1.554,421,2.114,441,0.599,444,1.383,445,3.412,446,3.412,447,1.619,463,1.716,498,2.79,500,2.571,535,3.412,536,2.114,537,2.571,574,3.798,575,2.7,576,3.798,594,1.716,628,1.827,630,2.114,701,2.535,702,1.827,704,2.571,705,2.571,714,2.892,715,2.309,716,3.412,749,2.309,750,2.571,773,2.431,775,2.571,776,1.532,784,1.532,802,2.309,837,2.571,891,2.571,892,3.123,906,3.546,907,2.571,932,1.454,933,1.619,934,1.259,963,2.114,984,2.309,986,2.391,989,2.7,1057,2.309,1076,2.114,1085,2.571,1114,1.957,1142,2.309,1143,1.957,1145,2.7,1146,2.7,1150,2.571,1206,2.571,1207,2.892,1208,2.892,1209,3.713,1214,2.114,1225,2.114,1226,2.309,1227,2.114,1252,3.412,1261,3.211,1263,1.957,1265,2.309,1266,2.309,1310,2.571,1318,2.309,1347,2.571,1362,3.439,1365,1.957,1366,2.309,1367,2.309,1403,5.051,1404,2.571,1405,2.571,1442,2.114,1443,3.847,1444,3.713,1446,1.957,1481,3.412,1483,3.123,1507,2.309,1529,1.957,1530,3.412,1531,3.412,1532,4.376,1535,3.123,1560,4.101,1572,1.957,1573,4.101,1623,2.309,1624,2.309,1625,2.309,1645,2.571,1749,2.309,1750,2.309,1751,2.309,1829,2.571,1830,2.571,1835,2.114,1911,3.123,1943,3.412,1970,2.309,1981,2.114,2029,2.309,2030,2.309,2033,3.412,2044,2.309,2059,3.412,2072,2.571,2094,2.571,2120,2.309,2142,4.481,2195,2.309,2198,2.309,2200,2.309,2211,2.309,2212,2.309,2213,2.309,2214,2.309,2262,2.571,2263,2.969,2264,2.969,2265,2.969,2266,6.655,2267,7.877,2268,7.798,2269,5.216,2270,2.969,2271,2.969,2272,2.969,2273,6.433,2274,5.216,2275,6.146,2276,4.386,2277,6.146,2278,3.798,2279,3.798,2280,2.571,2281,4.517,2282,7.196,2283,2.969,2284,2.969,2285,2.309,2286,2.309,2287,4.386,2288,2.969,2289,5.761,2290,4.386,2291,2.571,2292,2.571,2293,4.386,2294,2.571,2295,2.571,2296,5.176,2297,2.571,2298,2.969,2299,2.969,2300,4.386,2301,2.969,2302,2.969,2303,2.969,2304,2.969,2305,2.571,2306,2.571,2307,2.571,2308,2.969]],["title/dependencies.html",[185,2.7,2309,2.518]],["body/dependencies.html",[38,0.016,58,0.554,61,4.761,62,4.116,64,2.356,66,2.59,85,1.978,91,2.38,133,1.217,154,0.989,165,0.013,181,0.013,185,3.213,211,4.814,212,4.814,222,4.324,223,4.324,224,4.324,226,3.665,227,3.665,334,2.252,407,3.665,541,2.155,554,3.213,555,3.213,556,2.155,624,2.356,1168,3.957,2310,5.558,2311,7.941,2312,5.558,2313,6.687,2314,5.558,2315,5.558,2316,5.558,2317,5.558,2318,5.558,2319,5.558,2320,6.687,2321,5.558,2322,5.558,2323,5.558,2324,5.558,2325,5.558,2326,5.558,2327,5.558,2328,5.558,2329,5.558]],["title/miscellaneous/functions.html",[2330,1.993,2331,4.046]],["body/miscellaneous/functions.html",[4,0.264,19,0.266,21,0.821,37,1.101,38,0.015,39,0.91,40,0.289,46,1.152,54,0.678,65,3.289,118,1.283,165,0.012,181,0.012,256,2.72,321,2.662,358,2.662,392,1.702,408,1.934,417,3.551,420,5.714,441,1.262,628,3.851,685,3.289,763,3.07,1237,5.041,1446,4.125,1463,3.88,1532,4.455,1749,4.867,1750,4.867,1751,4.867,1976,5.318,2295,4.32,2296,3.88,2330,3.07,2331,4.32,2332,6.208,2333,4.988,2334,4.988,2335,7.168,2336,5.419,2337,6.257,2338,6.257,2339,6.836,2340,6.257,2341,7.168,2342,4.988,2343,6.257,2344,4.988,2345,6.257,2346,4.988,2347,4.988,2348,6.257,2349,6.257,2350,6.257,2351,4.988,2352,4.988,2353,4.988,2354,4.988,2355,4.988,2356,4.988,2357,4.988]],["title/index.html",[19,0.172,2358,3.237,2359,3.237]],["body/index.html",[0,0.278,4,0.188,38,0.013,39,0.66,165,0.013,181,0.013,200,3.298,226,5.118,250,4.64,256,2.921,293,1.324,441,1.081,525,5.459,683,3.532,687,4.64,1046,3.532,1167,6.366,1691,4.64,1692,5.025,1694,4.64,1738,4.167,1786,4.64,2013,4.64,2015,3.532,2172,4.64,2185,4.64,2309,4.167,2360,5.357,2361,6.539,2362,5.357,2363,7.058,2364,7.058,2365,5.357,2366,6.539,2367,7.537,2368,5.357,2369,5.357,2370,5.357,2371,5.357,2372,4.64,2373,5.357,2374,5.357,2375,5.357,2376,7.058,2377,5.357,2378,5.357,2379,5.357,2380,5.357,2381,5.357,2382,6.539,2383,6.539,2384,7.35,2385,5.357,2386,6.539,2387,6.539,2388,5.357,2389,5.357,2390,5.357,2391,5.357,2392,6.539,2393,5.357,2394,5.357,2395,5.357,2396,7.058,2397,4.167]],["title/modules.html",[184,2.473]],["body/modules.html",[38,0.014,62,4.721,91,2.729,165,0.014,181,0.014,183,4.34,184,2.84,194,4.019,195,4.019,196,4.019,197,4.019,2398,7.669,2399,7.803,2400,6.096,2401,5.28]],["title/overview.html",[2397,4.129]],["body/overview.html",[1,1.693,2,1.13,38,0.016,101,1.439,116,0.962,119,1.002,123,1.493,125,1.497,127,1.497,130,1.41,132,1.468,135,1.468,137,1.468,139,1.41,142,1.41,143,1.41,145,1.41,148,1.41,150,1.468,152,1.497,156,1.41,158,1.468,162,1.41,164,1.41,165,0.011,166,1.354,170,1.468,173,1.468,181,0.011,182,2.153,183,5.671,184,2.048,185,2.541,186,2.898,187,2.898,188,2.541,189,2.706,190,3.807,191,3.807,192,3.807,193,3.807,194,4.246,195,5.364,196,5.338,197,5.025,198,3.804,199,2.153,200,2.706,266,2.898,370,2.396,418,3.129,423,2.541,425,2.898,499,2.048,702,4.209,703,3.419,774,2.268,1111,3.807,1112,3.807,1113,3.807,1114,4.246,1286,2.396,1353,3.807,1354,3.807,1355,3.807,1926,2.706,2022,3.807,2023,3.807,2024,3.807,2397,3.419,2402,4.395,2403,3.807]],["title/properties.html",[20,0.34,2309,2.518]],["body/properties.html",[20,0.456,38,0.015,165,0.014,181,0.014,2015,4.13,2016,4.873,2404,5.425,2405,5.425,2406,6.264,2407,6.264]],["title/routes.html",[266,3.5]],["body/routes.html",[38,0.014,165,0.014,181,0.014,266,4.2]],["title/miscellaneous/typealiases.html",[2330,1.993,2408,4.672]],["body/miscellaneous/typealiases.html",[19,0.268,21,0.7,33,2.913,38,0.016,40,0.438,53,0.822,54,0.856,109,1.556,154,1.222,165,0.012,181,0.012,232,2.601,311,4.152,321,1.871,331,4.152,368,3.102,369,3.588,371,3.323,394,3.876,408,1.954,411,3.323,412,3.323,413,3.323,415,2.748,592,4.559,878,2.913,892,4.483,902,3.588,972,4.483,986,2.748,1145,3.102,1146,3.102,1226,3.92,1227,4.483,1235,4.898,1237,3.323,1366,3.92,1367,4.898,1369,5.454,1386,3.323,1396,3.323,1443,2.913,1487,4.898,1505,3.323,1507,3.92,1532,4.483,1535,4.483,1544,5.454,1573,4.483,1577,5.454,1590,4.365,1626,3.92,1627,3.92,1911,3.588,1920,4.152,1921,3.323,1929,4.898,1930,3.102,1934,3.323,2111,4.898,2120,5.961,2137,5.454,2138,5.454,2139,5.454,2285,3.92,2286,4.898,2330,3.102,2409,5.04,2410,7.554,2411,6.297,2412,5.04,2413,5.04,2414,4.365,2415,5.454,2416,4.365,2417,6.297,2418,5.04,2419,4.365,2420,4.365,2421,5.04,2422,5.04,2423,5.04]],["title/miscellaneous/variables.html",[2330,1.993,2424,4.046]],["body/miscellaneous/variables.html",[0,0.113,19,0.227,21,0.628,38,0.016,40,0.442,43,1.923,53,1.28,54,1.069,55,0.651,74,1.884,101,1.396,106,1.474,114,0.972,154,0.907,165,0.008,174,0.678,181,0.008,184,1.986,201,2.222,210,3.691,215,2.034,217,3.315,220,2.474,238,0.987,239,3.315,240,3.315,241,1.157,265,1.758,267,3.035,285,1.061,297,1.807,326,2.264,331,1.884,352,4.397,365,2.376,371,1.884,374,1.269,376,2.161,378,1.651,392,1.342,415,1.557,416,2.222,417,3.63,418,2.034,419,2.222,420,2.034,421,3.035,422,1.884,423,3.666,424,2.81,425,1.884,426,2.222,428,1.685,441,0.86,448,0.936,449,1.269,507,1.814,517,1.331,538,1.651,547,2.917,598,1.727,685,1.884,737,2.222,748,2.81,802,3.315,984,3.315,1116,2.034,1118,3.138,1127,1.884,1129,2.81,1130,1.884,1145,1.758,1146,1.758,1237,2.81,1252,2.222,1253,2.474,1261,3.904,1265,3.315,1266,3.315,1267,2.474,1285,3.691,1294,3.691,1299,3.691,1300,2.034,1302,1.884,1303,3.691,1307,3.691,1309,3.691,1318,3.315,1403,3.63,1443,1.651,1481,2.222,1483,4.025,1492,1.884,1529,1.884,1530,2.222,1531,3.315,1533,2.474,1534,2.474,1535,3.035,1559,2.474,1560,2.034,1573,4.025,1623,3.315,1624,3.315,1625,3.315,1643,2.474,1690,2.474,1738,2.222,1916,2.034,1953,3.315,2015,3.727,2016,3.966,2033,2.222,2044,3.315,2059,2.222,2064,2.474,2068,3.691,2142,4.397,2195,3.315,2198,3.315,2200,3.315,2211,3.315,2212,3.315,2213,5.254,2214,4.397,2215,2.474,2216,2.474,2217,2.474,2226,3.691,2227,2.474,2228,3.691,2231,4.416,2236,2.474,2239,3.691,2251,4.416,2278,2.474,2279,4.416,2280,3.691,2281,2.474,2285,2.222,2286,3.315,2291,2.474,2292,3.691,2294,2.474,2296,2.222,2297,3.691,2305,2.474,2306,2.474,2307,2.474,2330,1.758,2332,4.416,2336,2.474,2372,2.474,2401,4.416,2403,2.474,2404,4.416,2405,4.416,2414,2.474,2415,2.474,2416,2.474,2419,2.474,2420,4.416,2424,2.474,2425,4.262,2426,5.099,2427,2.857,2428,2.857,2429,2.857,2430,2.857,2431,2.857,2432,2.857,2433,5.099,2434,2.857,2435,2.857,2436,2.857,2437,2.857,2438,2.857,2439,5.653,2440,5.653,2441,2.857,2442,2.857,2443,2.857,2444,4.262,2445,2.857,2446,2.857,2447,2.857,2448,2.857,2449,2.857,2450,2.857,2451,2.857,2452,2.857,2453,2.857,2454,2.857,2455,2.857,2456,2.857,2457,2.857,2458,2.857,2459,2.857,2460,2.857,2461,5.099,2462,4.262,2463,4.262,2464,4.262,2465,4.262,2466,4.262,2467,4.262,2468,4.262,2469,4.262,2470,4.262,2471,4.262,2472,4.262,2473,2.857,2474,2.857,2475,2.857,2476,2.857,2477,2.857,2478,2.857,2479,2.857,2480,2.857,2481,2.857,2482,2.857,2483,2.857,2484,2.857,2485,2.857,2486,4.262,2487,4.262,2488,2.857,2489,2.857,2490,2.857,2491,2.857,2492,2.857,2493,2.857,2494,2.857,2495,2.857,2496,2.857,2497,5.099,2498,5.099,2499,2.857,2500,2.857,2501,2.857,2502,2.857,2503,2.857,2504,2.857,2505,4.262]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.13.0",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":2119,"title":{},"body":{"components/TabBarComponent.html":{}}}],["0.2rem",{"_index":889,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["0.3em",{"_index":1051,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["0.5",{"_index":422,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"miscellaneous/variables.html":{}}}],["0.5rem",{"_index":361,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{}}}],["0.6rem",{"_index":1501,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.7em",{"_index":344,"title":{},"body":{"components/ButtonComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["0.7rem",{"_index":1502,"title":{},"body":{"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/SlideToggleComponent.html":{}}}],["0.8em",{"_index":1052,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["0.8rem",{"_index":1817,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["0.9em",{"_index":1063,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["0.9rem",{"_index":1506,"title":{},"body":{"components/NavbarComponent.html":{},"components/SettingsComponent.html":{}}}],["0/1",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2290,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2304,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2276,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2299,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2273,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2274,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["00b100",{"_index":573,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["0px",{"_index":1065,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/SlideToggleComponent.html":{}}}],["1",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"classes/Database.html":{},"interfaces/MatchingCard.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1)[0",{"_index":1475,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["1.1.1",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["1.11.9",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["1.25em",{"_index":1571,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["1.2em",{"_index":523,"title":{},"body":{"components/CardComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["1.2rem",{"_index":519,"title":{},"body":{"components/CardComponent.html":{}}}],["1.5",{"_index":2216,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["1.5rem",{"_index":532,"title":{},"body":{"components/CardComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{}}}],["1.7.1",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1926,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{}}}],["100",{"_index":498,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["10px",{"_index":513,"title":{},"body":{"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["123",{"_index":2237,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["14",{"_index":426,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"miscellaneous/variables.html":{}}}],["140px",{"_index":2260,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["141414",{"_index":2240,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["15",{"_index":1969,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["15.1.0",{"_index":2365,"title":{},"body":{"index.html":{}}}],["150px",{"_index":2019,"title":{},"body":{"components/SettingsComponent.html":{}}}],["15px",{"_index":2257,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["16.2.3",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["16.2.4",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":1056,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["170px",{"_index":2258,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["18",{"_index":2302,"title":{},"body":{"coverage.html":{}}}],["181818",{"_index":693,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["1c1c1c",{"_index":741,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{}}}],["1em",{"_index":345,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1fr",{"_index":1906,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["1px",{"_index":354,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SettingsComponent.html":{}}}],["1rem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["2",{"_index":423,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.1",{"_index":2404,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":2217,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["2/4",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":963,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["20px",{"_index":739,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{}}}],["22262d",{"_index":2090,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["24",{"_index":2402,"title":{},"body":{"overview.html":{}}}],["25",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":347,"title":{},"body":{"components/ButtonComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["28",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["289dd7",{"_index":1879,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["289dd77b",{"_index":1883,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["2d3132",{"_index":516,"title":{},"body":{"components/CardComponent.html":{}}}],["2ebd00",{"_index":1825,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["2px",{"_index":515,"title":{},"body":{"components/CardComponent.html":{}}}],["2rem",{"_index":1345,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["3",{"_index":1300,"title":{},"body":{"classes/Database.html":{},"classes/SessionCard.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["3.2.4",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":2303,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["30px",{"_index":2084,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["30vw",{"_index":1708,"title":{},"body":{"components/SessionComponent.html":{}}}],["323232",{"_index":2253,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["34",{"_index":2215,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["343434",{"_index":1047,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["35px",{"_index":1707,"title":{},"body":{"components/SessionComponent.html":{}}}],["36d336",{"_index":1709,"title":{},"body":{"components/SessionComponent.html":{}}}],["3ab19d",{"_index":572,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["3px",{"_index":1907,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["4",{"_index":424,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"miscellaneous/variables.html":{}}}],["40px",{"_index":2254,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["437835",{"_index":1909,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["4a4a4a",{"_index":2118,"title":{},"body":{"components/TabBarComponent.html":{}}}],["4px",{"_index":2242,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["5",{"_index":1286,"title":{},"body":{"classes/Database.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"overview.html":{}}}],["50",{"_index":1970,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["500",{"_index":524,"title":{},"body":{"components/CardComponent.html":{},"components/CollectionCardsComponent.html":{},"directives/LongPressDirective.html":{},"components/SettingsComponent.html":{}}}],["5000",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50px",{"_index":1504,"title":{},"body":{"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["559d00",{"_index":1875,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["559d007b",{"_index":1881,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["55px",{"_index":566,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/SlideToggleComponent.html":{}}}],["565656",{"_index":2261,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["5c5c5c",{"_index":2091,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["5px",{"_index":565,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["6",{"_index":418,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.4.2",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":351,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["60px",{"_index":1054,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["60vw",{"_index":881,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["646464",{"_index":362,"title":{},"body":{"components/ButtonComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["6c6c6c",{"_index":890,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["7",{"_index":425,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":886,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["7f7f7f",{"_index":527,"title":{},"body":{"components/CardComponent.html":{}}}],["7px",{"_index":1058,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["8",{"_index":2403,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["80",{"_index":883,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["81d100",{"_index":770,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["8px",{"_index":2088,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["9524ff",{"_index":1877,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["9524ff7b",{"_index":1882,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["979797",{"_index":745,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["9d9d9d",{"_index":363,"title":{},"body":{"components/ButtonComponent.html":{}}}],["_",{"_index":736,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["absolute",{"_index":1823,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["accent",{"_index":2071,"title":{},"body":{"components/SidenavComponent.html":{}}}],["accentuate",{"_index":2184,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["accentuated",{"_index":2183,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["accessor",{"_index":1227,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/SlideToggleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":720,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"classes/SessionCard.html":{}}}],["action",{"_index":878,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/SessionComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":529,"title":{},"body":{"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{}}}],["actiontab",{"_index":972,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["actiontabbar",{"_index":2139,"title":{},"body":{"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["activatedroute",{"_index":931,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["active",{"_index":570,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["actual_component",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["add",{"_index":683,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{},"index.html":{}}}],["addcards",{"_index":452,"title":{},"body":{"classes/CardCollection.html":{}}}],["addcards(cards",{"_index":465,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["adding",{"_index":2234,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["addsvgicon",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["addsvgicon(name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["adjusted",{"_index":2175,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["afafaf",{"_index":1818,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["afterclosed",{"_index":867,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{}}}],["afterviewinit",{"_index":908,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["aliases",{"_index":2409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":357,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["allcards",{"_index":1789,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["allcards.concat",{"_index":1791,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["allcards.length",{"_index":1794,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["allcollectionstats",{"_index":1834,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["allmatched",{"_index":1459,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["allow",{"_index":1426,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["already",{"_index":677,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["and((card",{"_index":1199,"title":{},"body":{"injectables/CollectionService.html":{}}}],["angular",{"_index":2363,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":333,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["angular/cdk/overlay",{"_index":2206,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["angular/common",{"_index":334,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":624,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"modules/CollectionPageModule.html":{},"classes/ControlValueAccessorComponent.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{},"components/SlideToggleComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1119,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SidenavComponent.html":{}}}],["angular/material/card",{"_index":1121,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["angular/material/checkbox",{"_index":1123,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["angular/material/core",{"_index":2207,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["angular/material/dialog",{"_index":626,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/SessionComponent.html":{}}}],["angular/material/divider",{"_index":1126,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["angular/material/form",{"_index":1128,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{}}}],["angular/material/icon",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["angular/material/input",{"_index":1131,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{}}}],["angular/material/paginator",{"_index":977,"title":{},"body":{"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{}}}],["angular/material/progress",{"_index":1358,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["angular/material/select",{"_index":2027,"title":{},"body":{"modules/SettingsModule.html":{}}}],["angular/material/sidenav",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/slide",{"_index":1134,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/SettingsModule.html":{}}}],["angular/material/snack",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{}}}],["angular/material/sort",{"_index":978,"title":{},"body":{"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{}}}],["angular/material/table",{"_index":979,"title":{},"body":{"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{}}}],["angular/material/tooltip",{"_index":2065,"title":{},"body":{"components/SidenavComponent.html":{}}}],["angular/platform",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/NavigationService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"interfaces/PendingChangesComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animals",{"_index":1282,"title":{},"body":{"classes/Database.html":{}}}],["another",{"_index":684,"title":{},"body":{"components/CardEditorComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["app",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{}}}],["app.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["app_name",{"_index":1508,"title":{},"body":{"injectables/NavigationService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["applicense",{"_index":1946,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["appmodule",{"_index":183,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":194,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apptheme",{"_index":1929,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/typealiases.html":{}}}],["appversion",{"_index":1947,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{}}}],["areequal",{"_index":802,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["areequal(cardmeaning",{"_index":828,"title":{},"body":{"injectables/CardService.html":{}}}],["areequal(search.characters",{"_index":831,"title":{},"body":{"injectables/CardService.html":{}}}],["areequal(search.pinyin",{"_index":829,"title":{},"body":{"injectables/CardService.html":{}}}],["aresubstrings",{"_index":2297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arr",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":420,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array(expectedremaining",{"_index":1806,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["array(sessioncard.numberofrepetitions).fill(sessioncard.id",{"_index":1792,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["array.from",{"_index":733,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["array.isarray(columndata",{"_index":1031,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["artifacts",{"_index":2378,"title":{},"body":{"index.html":{}}}],["associated",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":588,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"components/NavbarComponent.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{}}}],["author",{"_index":2406,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":1060,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["automatically",{"_index":687,"title":{},"body":{"components/CardEditorComponent.html":{},"index.html":{}}}],["available",{"_index":2401,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":2233,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["await",{"_index":662,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"components/SessionLauncherComponent.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{}}}],["azerty",{"_index":2280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":339,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["backspace",{"_index":2157,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["backup",{"_index":1330,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{}}}],["backup.json",{"_index":1333,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["bar",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{},"components/TabBarComponent.html":{}}}],["bar'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["bar.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{}}}],["bar.component.html",{"_index":718,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/TabBarComponent.html":{}}}],["bar.component.scss",{"_index":717,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/TabBarComponent.html":{}}}],["bar.component.ts",{"_index":716,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/TabBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":723,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["bar.component.ts:15",{"_index":725,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/TabBarComponent.html":{}}}],["bar.component.ts:16",{"_index":2110,"title":{},"body":{"components/TabBarComponent.html":{}}}],["bar.component.ts:17",{"_index":727,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["bar.component.ts:21",{"_index":724,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["bar.service",{"_index":987,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{}}}],["bar.service.ts",{"_index":2120,"title":{},"body":{"injectables/TabBarService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bar.service.ts:21",{"_index":2134,"title":{},"body":{"injectables/TabBarService.html":{}}}],["bar.service.ts:27",{"_index":2136,"title":{},"body":{"injectables/TabBarService.html":{}}}],["bar.service.ts:32",{"_index":2126,"title":{},"body":{"injectables/TabBarService.html":{}}}],["bar.service.ts:36",{"_index":2130,"title":{},"body":{"injectables/TabBarService.html":{}}}],["bar.service.ts:40",{"_index":2128,"title":{},"body":{"injectables/TabBarService.html":{}}}],["bar/card",{"_index":715,"title":{},"body":{"components/CardProgressBarComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["bar/tab",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["base_tone_overlay_offset_x",{"_index":2198,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_tone_overlay_offset_y",{"_index":2200,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":1600,"title":{},"body":{"classes/SessionCard.html":{},"components/VirtualKeyboardComponent.html":{}}}],["beam",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["behaviorsubject",{"_index":1381,"title":{},"body":{"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/TabBarService.html":{}}}],["behaviorsubject(\"learn",{"_index":1383,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["behaviorsubject(\"main",{"_index":1522,"title":{},"body":{"injectables/NavigationService.html":{}}}],["behaviorsubject(true",{"_index":1524,"title":{},"body":{"injectables/NavigationService.html":{}}}],["between",{"_index":2070,"title":{},"body":{"components/SidenavComponent.html":{}}}],["bg",{"_index":341,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardViewerComponent.html":{},"components/NavbarComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["black",{"_index":747,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/TabBarComponent.html":{}}}],["block",{"_index":558,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["bold",{"_index":697,"title":{},"body":{"components/CardEditorComponent.html":{},"components/InlineConfirmDialogComponent.html":{}}}],["boolean",{"_index":326,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardModel.html":{},"classes/CoercionComponent.html":{},"injectables/LearningSessionService.html":{},"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/variables.html":{}}}],["booleaninput",{"_index":308,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["booleans",{"_index":320,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["border",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["both",{"_index":1757,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["bottom",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["box",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["boxreviewdelay",{"_index":421,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["boxreviewdelay[this.leitnerbox",{"_index":434,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["browse",{"_index":2399,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/NavigationService.html":{},"injectables/TabBarService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1167,"title":{},"body":{"injectables/CollectionService.html":{},"index.html":{}}}],["buildsessioncards",{"_index":1717,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["buildsteppages",{"_index":1884,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["buildsteppages(cards",{"_index":1465,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["button",{"_index":295,"title":{},"body":{"components/ButtonComponent.html":{},"components/CollectionListComponent.html":{},"directives/LongPressDirective.html":{},"components/SessionLauncherComponent.html":{}}}],["button'},{'name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["button.component.html",{"_index":299,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":298,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.types",{"_index":337,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/button.component",{"_index":1343,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["button/button.types",{"_index":1218,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{}}}],["buttoncomponent",{"_index":123,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttontype",{"_index":311,"title":{},"body":{"components/ButtonComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c5c5c5",{"_index":1821,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["c7e596",{"_index":772,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["calc($sliderheight",{"_index":2087,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["calc(100vh",{"_index":1061,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["callback",{"_index":1235,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/SlideToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["callout",{"_index":2246,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["calltoaction",{"_index":306,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cancel",{"_index":611,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/SessionComponent.html":{}}}],["cancelled",{"_index":1336,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["canceltext",{"_index":1220,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{}}}],["candeactivate",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/PendingChangesComponent.html":{},"components/SessionComponent.html":{}}}],["candeactivatefn",{"_index":1533,"title":{},"body":{"interfaces/PendingChangesComponent.html":{},"miscellaneous/variables.html":{}}}],["capabilities",{"_index":2394,"title":{},"body":{"index.html":{}}}],["card",{"_index":128,"title":{"classes/Card.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["card'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["card(card",{"_index":485,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"injectables/CardService.html":{},"injectables/LearningSessionService.html":{}}}],["card(card).isknown",{"_index":1200,"title":{},"body":{"injectables/CollectionService.html":{}}}],["card(card).needsreview",{"_index":1201,"title":{},"body":{"injectables/CollectionService.html":{}}}],["card(cardmodel",{"_index":833,"title":{},"body":{"injectables/CardService.html":{}}}],["card(this",{"_index":442,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["card.characters",{"_index":832,"title":{},"body":{"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SessionComponent.html":{}}}],["card.collectionid",{"_index":807,"title":{},"body":{"injectables/CardService.html":{},"injectables/DatabaseService.html":{}}}],["card.component.html",{"_index":503,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":502,"title":{},"body":{"components/CardComponent.html":{}}}],["card.id",{"_index":811,"title":{},"body":{"injectables/CardService.html":{}}}],["card.lastsession",{"_index":658,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["card.leitnerbox",{"_index":657,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["card.meanings.map((meaning",{"_index":1021,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["card.meanings.some((cardmeaning",{"_index":827,"title":{},"body":{"injectables/CardService.html":{}}}],["card.model",{"_index":475,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["card.model.ts",{"_index":1573,"title":{},"body":{"classes/SessionCard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["card.model.ts:105",{"_index":1607,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:17",{"_index":1586,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:18",{"_index":1588,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:19",{"_index":1589,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:20",{"_index":1587,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:21",{"_index":1594,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:22",{"_index":1591,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:24",{"_index":1612,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:28",{"_index":1614,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:32",{"_index":1616,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:36",{"_index":1618,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:40",{"_index":1620,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:42",{"_index":1585,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:50",{"_index":1596,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:68",{"_index":1597,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.model.ts:87",{"_index":1610,"title":{},"body":{"classes/SessionCard.html":{}}}],["card.pinyin",{"_index":830,"title":{},"body":{"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SessionComponent.html":{}}}],["cardcollection",{"_index":444,"title":{"classes/CardCollection.html":{}},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["cardcollection(collection",{"_index":1203,"title":{},"body":{"injectables/CollectionService.html":{}}}],["cardcollection.addcards(cards",{"_index":1205,"title":{},"body":{"injectables/CollectionService.html":{}}}],["cardcollection.cardpercentage(stats.known",{"_index":497,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["cardcollection.cardpercentage(stats.tolearn",{"_index":493,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["cardcollection.cardpercentage(stats.toreview",{"_index":495,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["cardcollection.computepercentstats(numberstats",{"_index":1863,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["cardcollection.computepercentstats(stats",{"_index":488,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["cardcollectionmodel",{"_index":447,"title":{"interfaces/CardCollectionModel.html":{}},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"coverage.html":{}}}],["cardcollections",{"_index":1253,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["cardcomponent",{"_index":125,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardcount",{"_index":755,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["cardcount(value",{"_index":764,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["cardcountplural",{"_index":912,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["carddifficultycomponent",{"_index":127,"title":{"components/CardDifficultyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["carddifficultylevel",{"_index":394,"title":{},"body":{"classes/Card.html":{},"components/CardDifficultyComponent.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"miscellaneous/typealiases.html":{}}}],["cardduplicate",{"_index":580,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["cardduplicate.characters",{"_index":681,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["cardduplicate.meanings",{"_index":679,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["cardduplicate.pinyin",{"_index":682,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["cardeditorcomponent",{"_index":130,"title":{"components/CardEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardform",{"_index":630,"title":{"interfaces/CardForm.html":{}},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"coverage.html":{}}}],["cardid",{"_index":823,"title":{},"body":{"injectables/CardService.html":{}}}],["cardmeanings",{"_index":706,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["cardmeaningspipe",{"_index":702,"title":{"pipes/CardMeaningsPipe.html":{}},"body":{"pipes/CardMeaningsPipe.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["cardmodel",{"_index":372,"title":{"interfaces/CardModel.html":{}},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"coverage.html":{}}}],["cardpercentage",{"_index":454,"title":{},"body":{"classes/CardCollection.html":{}}}],["cardpercentage(value",{"_index":467,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["cardprogressbarcomponent",{"_index":132,"title":{"components/CardProgressBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardprogressindicatorcomponent",{"_index":135,"title":{"components/CardProgressIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardrevealed",{"_index":1711,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["cardreviewtype",{"_index":1920,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/typealiases.html":{}}}],["cards",{"_index":448,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"interfaces/MatchingCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/variables.html":{}}}],["cards'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["cards.component",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{}}}],["cards.component.html",{"_index":911,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.scss",{"_index":910,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts",{"_index":907,"title":{},"body":{"components/CollectionCardsComponent.html":{},"coverage.html":{}}}],["cards.component.ts:101",{"_index":941,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:105",{"_index":944,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:114",{"_index":946,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:123",{"_index":948,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:131",{"_index":937,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:136",{"_index":939,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:146",{"_index":938,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:170",{"_index":947,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:32",{"_index":971,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:33",{"_index":967,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:35",{"_index":962,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:41",{"_index":952,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:42",{"_index":954,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:43",{"_index":957,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:44",{"_index":955,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:45",{"_index":968,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:46",{"_index":950,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:47",{"_index":964,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:48",{"_index":949,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:54",{"_index":951,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:55",{"_index":976,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:66",{"_index":935,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:77",{"_index":942,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.component.ts:96",{"_index":940,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cards.filter((card",{"_index":1329,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cards.foreach((sessioncard",{"_index":1698,"title":{},"body":{"components/SessionComponent.html":{}}}],["cards.map((card",{"_index":484,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"injectables/LearningSessionService.html":{}}}],["cards.reverse",{"_index":1397,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["cards.slice(0",{"_index":1399,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["cards/collection",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["cardselectiontype",{"_index":1912,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["cardservice",{"_index":594,"title":{"injectables/CardService.html":{}},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/SessionComponent.html":{},"coverage.html":{}}}],["cardstolearn",{"_index":1867,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["cardstoreview",{"_index":1871,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["cardviewercomponent",{"_index":137,"title":{"components/CardViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["carrm",{"_index":2407,"title":{},"body":{"properties.html":{}}}],["case",{"_index":1643,"title":{},"body":{"classes/SessionCard.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":814,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{}}}],["cb2020",{"_index":571,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["cell",{"_index":1062,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["center",{"_index":359,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["centered",{"_index":1813,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["certain",{"_index":2344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["change",{"_index":1694,"title":{},"body":{"components/SessionComponent.html":{},"index.html":{}}}],["changed",{"_index":1687,"title":{},"body":{"components/SessionComponent.html":{}}}],["changedifficulty",{"_index":1579,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["changedifficulty(difficulty",{"_index":1595,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["changes.guard",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SessionComponent.html":{}}}],["changes.guard.ts",{"_index":1531,"title":{},"body":{"interfaces/PendingChangesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changing",{"_index":686,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["char",{"_index":1045,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["character",{"_index":1064,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["character.tolowercase",{"_index":2219,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["characterinput",{"_index":1712,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["characters",{"_index":373,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["check",{"_index":1738,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkforupdates",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkresponse",{"_index":1718,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["checks",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chf",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["chflongpress",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["child",{"_index":742,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["chinese",{"_index":609,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/NavigationService.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["chineseflashcards",{"_index":2360,"title":{},"body":{"index.html":{}}}],["chinesematch",{"_index":1765,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["choice",{"_index":2391,"title":{},"body":{"index.html":{}}}],["circle",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/CardProgressIndicatorComponent.html":{},"modules/LearnPageModule.html":{},"components/SlideToggleComponent.html":{},"dependencies.html":{}}}],["circletitle",{"_index":754,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["class",{"_index":69,"title":{"classes/Card.html":{},"classes/CardCollection.html":{},"classes/CoercionComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"classes/Settings.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["classes",{"_index":370,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"classes/CoercionComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"classes/Settings.html":{},"overview.html":{}}}],["clean",{"_index":1974,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["clear",{"_index":961,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cleardatabase",{"_index":1311,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["clearsearchbar",{"_index":921,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["cli",{"_index":2364,"title":{},"body":{"index.html":{}}}],["clone",{"_index":380,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["clone.meanings",{"_index":443,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["close",{"_index":853,"title":{},"body":{"components/CardViewerComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["cloud",{"_index":1324,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_collectionpagemodule",{"_index":1111,"title":{},"body":{"modules/CollectionPageModule.html":{},"overview.html":{}}}],["cluster_collectionpagemodule_declarations",{"_index":1113,"title":{},"body":{"modules/CollectionPageModule.html":{},"overview.html":{}}}],["cluster_collectionpagemodule_imports",{"_index":1112,"title":{},"body":{"modules/CollectionPageModule.html":{},"overview.html":{}}}],["cluster_learnpagemodule",{"_index":1353,"title":{},"body":{"modules/LearnPageModule.html":{},"overview.html":{}}}],["cluster_learnpagemodule_declarations",{"_index":1355,"title":{},"body":{"modules/LearnPageModule.html":{},"overview.html":{}}}],["cluster_learnpagemodule_imports",{"_index":1354,"title":{},"body":{"modules/LearnPageModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2022,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2024,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2023,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["code",{"_index":2374,"title":{},"body":{"index.html":{}}}],["coerce",{"_index":323,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coerceall",{"_index":303,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coerceall(fields",{"_index":314,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coercebooleanproperty",{"_index":896,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["coercebooleanproperty(fieldvalue",{"_index":905,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["coerced",{"_index":300,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coercefield",{"_index":304,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coercefield(field",{"_index":324,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coerces",{"_index":317,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["coercioncomponent",{"_index":292,"title":{"classes/CoercionComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{},"coverage.html":{}}}],["coercioncomponent:12",{"_index":316,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["coercioncomponent:23",{"_index":325,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["coercioncomponent:5",{"_index":332,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["collection",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["collection.cards",{"_index":1016,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["collection.cards.length",{"_index":1109,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["collection.description",{"_index":482,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["collection.id",{"_index":478,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{}}}],["collection.label",{"_index":480,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["collection.model",{"_index":981,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{}}}],["collection.model.ts",{"_index":446,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"coverage.html":{}}}],["collection.model.ts:11",{"_index":461,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:12",{"_index":462,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:13",{"_index":460,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:14",{"_index":459,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:15",{"_index":464,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:16",{"_index":458,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:25",{"_index":466,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:29",{"_index":474,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:34",{"_index":471,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.model.ts:43",{"_index":469,"title":{},"body":{"classes/CardCollection.html":{}}}],["collection.service",{"_index":1384,"title":{},"body":{"injectables/LearningSessionService.html":{},"injectables/StatisticsService.html":{}}}],["collection.setstatistics(await",{"_index":2106,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["collection.statistics?.known",{"_index":1861,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["collection.statistics?.tolearn",{"_index":1857,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["collection.statistics?.toreview",{"_index":1859,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["collection?.label",{"_index":1041,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["collectioncardscomponent",{"_index":139,"title":{"components/CollectionCardsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectioneditorcomponent",{"_index":142,"title":{"components/CollectionEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectionform",{"_index":1076,"title":{"interfaces/CollectionForm.html":{}},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"coverage.html":{}}}],["collectionid",{"_index":374,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/StatisticsService.html":{},"miscellaneous/variables.html":{}}}],["collectionid+leitnerbox",{"_index":1267,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["collectionlistcomponent",{"_index":143,"title":{"components/CollectionListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectionpagemodule",{"_index":195,"title":{"modules/CollectionPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules.html":{},"overview.html":{}}}],["collections",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{}}}],["collections.map((collection",{"_index":1188,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{}}}],["collections.map(async",{"_index":2105,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["collections/:id",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["collectionsbackup",{"_index":1328,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["collectionservice",{"_index":932,"title":{"injectables/CollectionService.html":{}},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"injectables/LearningSessionService.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["collectionstats",{"_index":463,"title":{"interfaces/CollectionStats.html":{}},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"interfaces/CollectionStats.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["color",{"_index":340,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["column",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["columndata",{"_index":1028,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["columndata.tolocalelowercase",{"_index":1033,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["columndata[0].tolocalelowercase",{"_index":1032,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["columns",{"_index":913,"title":{},"body":{"components/CollectionCardsComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["comes",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":2392,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":297,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["compares",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comparison",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":744,"title":{},"body":{"components/CardProgressBarComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component.candeactivate",{"_index":1534,"title":{},"body":{"interfaces/PendingChangesComponent.html":{},"miscellaneous/variables.html":{}}}],["component.ts",{"_index":892,"title":{},"body":{"classes/CoercionComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["component.ts:11",{"_index":1247,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:12",{"_index":894,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["component.ts:15",{"_index":1240,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:19",{"_index":1242,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:23",{"_index":895,"title":{},"body":{"classes/CoercionComponent.html":{},"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:27",{"_index":1244,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:5",{"_index":893,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["component.ts:6",{"_index":1238,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component.ts:7",{"_index":1236,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["component_template",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{}}}],["components/navbar/navbar.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tab",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["compute",{"_index":2165,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["computeoffsetx",{"_index":2154,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["computeoffsetx(positionincolumn",{"_index":2163,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["computepercentstats",{"_index":455,"title":{},"body":{"classes/CardCollection.html":{}}}],["computepercentstats(stats",{"_index":470,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["computes",{"_index":1598,"title":{},"body":{"classes/SessionCard.html":{}}}],["config",{"_index":1212,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["config.message",{"_index":1224,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["config.title",{"_index":1223,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirm",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["confirmdialogcomponent",{"_index":145,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdialogconfig",{"_index":1214,"title":{"interfaces/ConfirmDialogConfig.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"coverage.html":{}}}],["confirmed",{"_index":1337,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{}}}],["confirmtext",{"_index":1219,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{}}}],["confirmtype",{"_index":1221,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{}}}],["console.error(\"unable",{"_index":1191,"title":{},"body":{"injectables/CollectionService.html":{}}}],["console.info(\"populating",{"_index":1278,"title":{},"body":{"classes/Database.html":{}}}],["const",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"injectables/StatisticsService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{}}}],["constructor(card",{"_index":1584,"title":{},"body":{"classes/SessionCard.html":{}}}],["constructor(cardservice",{"_index":1656,"title":{},"body":{"components/SessionComponent.html":{}}}],["constructor(collection",{"_index":457,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["constructor(collectionservice",{"_index":1091,"title":{},"body":{"components/CollectionListComponent.html":{},"injectables/LearningSessionService.html":{},"injectables/StatisticsService.html":{}}}],["constructor(config",{"_index":1213,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(data",{"_index":388,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardModel.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["constructor(databaseservice",{"_index":783,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/SettingsService.html":{}}}],["constructor(elementref",{"_index":1409,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["constructor(iconregistry",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(navigation",{"_index":1489,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(navigationservice",{"_index":1455,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(private",{"_index":728,"title":{},"body":{"components/CardProgressBarComponent.html":{},"injectables/NavigationService.html":{}}}],["constructor(route",{"_index":930,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["constructor(settings",{"_index":722,"title":{},"body":{"components/CardProgressBarComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["constructor(settingsservice",{"_index":1723,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["constructor(tabbarservice",{"_index":2109,"title":{},"body":{"components/TabBarComponent.html":{}}}],["constructor(titleservice",{"_index":1512,"title":{},"body":{"injectables/NavigationService.html":{}}}],["contained",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["container",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["content",{"_index":531,"title":{},"body":{"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["content.includes(normalizedfilter",{"_index":1025,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["control",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"dependencies.html":{}}}],["controlvalueaccessor",{"_index":1228,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["controlvalueaccessorcomponent",{"_index":1225,"title":{"classes/ControlValueAccessorComponent.html":{}},"body":{"classes/ControlValueAccessorComponent.html":{},"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["controlvalueaccessorcomponent:11",{"_index":2079,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:15",{"_index":2075,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:19",{"_index":2076,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:23",{"_index":2077,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:27",{"_index":2078,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:6",{"_index":2081,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["controlvalueaccessorcomponent:7",{"_index":2080,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["core",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["core/coercion",{"_index":336,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{}}}],["core/control",{"_index":2082,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["core/db/database.model",{"_index":799,"title":{},"body":{"injectables/CardService.html":{}}}],["core/db/database.service",{"_index":800,"title":{},"body":{"injectables/CardService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/guards/pending",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SessionComponent.html":{}}}],["core/model/card",{"_index":980,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["core/model/card.model",{"_index":553,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["core/model/settings.model",{"_index":1846,"title":{},"body":{"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/model/statistics.model",{"_index":1847,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["core/pipes/card",{"_index":1137,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["core/pipes/join.pipe",{"_index":1139,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["core/pwa",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/card.service",{"_index":627,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/SessionComponent.html":{}}}],["core/services/collection.service",{"_index":982,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["core/services/learning",{"_index":1667,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["core/services/navigation.service",{"_index":983,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/services/settings.service",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["core/services/statistics.service",{"_index":1848,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["core/types",{"_index":801,"title":{},"body":{"injectables/CardService.html":{}}}],["core/utils/form.utils",{"_index":629,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["core/utils/general.utils",{"_index":803,"title":{},"body":{"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["correct",{"_index":2055,"title":{},"body":{"injectables/SettingsService.html":{}}}],["count",{"_index":1049,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"injectables/StatisticsService.html":{}}}],["coverage",{"_index":2262,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":618,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["createcard",{"_index":777,"title":{},"body":{"injectables/CardService.html":{}}}],["createcard(card",{"_index":786,"title":{},"body":{"injectables/CardService.html":{}}}],["createcollection",{"_index":1151,"title":{},"body":{"injectables/CollectionService.html":{}}}],["createcollection(collection",{"_index":1158,"title":{},"body":{"injectables/CollectionService.html":{}}}],["createlearningsession",{"_index":1370,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["createlearningsession(collection",{"_index":1375,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["createreviewsession",{"_index":1371,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["createreviewsession(collection",{"_index":1377,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["creationmode",{"_index":581,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["cry",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["cta",{"_index":364,"title":{},"body":{"components/ButtonComponent.html":{}}}],["current",{"_index":746,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["currentcard",{"_index":1713,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["currentcard.card.characters",{"_index":1809,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["currentcard.card.pinyin",{"_index":1810,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["currentrepetitions",{"_index":1574,"title":{},"body":{"classes/SessionCard.html":{}}}],["currentsession",{"_index":1368,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["currentsteppercent",{"_index":721,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["cursor",{"_index":563,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["d",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dark",{"_index":1930,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"miscellaneous/typealiases.html":{}}}],["darker",{"_index":2092,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["darkmode",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["darkmodeactive",{"_index":2034,"title":{},"body":{"injectables/SettingsService.html":{}}}],["darktheme",{"_index":1961,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["data",{"_index":390,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{}}}],["data.card",{"_index":632,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{}}}],["data.card.characters",{"_index":636,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["data.card.meanings.join",{"_index":634,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["data.card.pinyin",{"_index":635,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["data.collection",{"_index":643,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["data.collection.id",{"_index":1077,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["data[sortheaderid",{"_index":1029,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["database",{"_index":776,"title":{"classes/Database.html":{}},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["database.model",{"_index":1320,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["databaseservice",{"_index":784,"title":{"injectables/DatabaseService.html":{}},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["databaseservice.database",{"_index":806,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{}}}],["datasource",{"_index":914,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["datasource.data.length",{"_index":1042,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["day",{"_index":433,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["day\").toisostring",{"_index":1288,"title":{},"body":{"classes/Database.html":{}}}],["dayjs",{"_index":407,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"dependencies.html":{}}}],["dayjs().isafter(nextsession",{"_index":439,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["dayjs().isbefore(this.nextreview",{"_index":435,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["dayjs().issame(nextsession",{"_index":438,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["dayjs().subtract(10",{"_index":1291,"title":{},"body":{"classes/Database.html":{}}}],["dayjs().subtract(4",{"_index":1287,"title":{},"body":{"classes/Database.html":{}}}],["dayjs().toisostring",{"_index":1301,"title":{},"body":{"classes/Database.html":{},"classes/SessionCard.html":{}}}],["dayjs(this.lastsession).add(boxreviewdelay[this.leitnerbox",{"_index":432,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["db/database.model",{"_index":1180,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{}}}],["db/database.service",{"_index":1181,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{}}}],["dbupgrades",{"_index":2415,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbversion",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debouncetime",{"_index":985,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["declarations",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["decorators",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaulterrormessages",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["delay",{"_index":416,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":855,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/SettingsComponent.html":{}}}],["deleteandrebuild",{"_index":1254,"title":{},"body":{"classes/Database.html":{}}}],["deletecard",{"_index":778,"title":{},"body":{"injectables/CardService.html":{},"components/CardViewerComponent.html":{}}}],["deletecard(card",{"_index":788,"title":{},"body":{"injectables/CardService.html":{}}}],["deletecollection",{"_index":1068,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{}}}],["deletecollection(collection",{"_index":1160,"title":{},"body":{"injectables/CollectionService.html":{}}}],["deleted",{"_index":2003,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["deletedatabase",{"_index":1951,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["delimiter",{"_index":1349,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["demo",{"_index":1279,"title":{},"body":{"classes/Database.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":321,"title":{},"body":{"components/ButtonComponent.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["dev",{"_index":2369,"title":{},"body":{"index.html":{}}}],["development",{"_index":2013,"title":{},"body":{"components/SettingsComponent.html":{},"index.html":{}}}],["dexie",{"_index":1168,"title":{},"body":{"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"dependencies.html":{}}}],["diacritics",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":700,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{}}}],["dialog'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["dialog.component",{"_index":1144,"title":{},"body":{"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"modules/LearnPageModule.html":{},"components/SessionComponent.html":{}}}],["dialog.component.html",{"_index":1211,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1210,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1209,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":1339,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1338,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1340,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1341,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1342,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1215,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1216,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1217,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":1208,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"modules/LearnPageModule.html":{},"components/SessionComponent.html":{},"coverage.html":{}}}],["dialog/inline",{"_index":1143,"title":{},"body":{"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":582,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["difficulty",{"_index":375,"title":{},"body":{"classes/Card.html":{},"components/CardDifficultyComponent.html":{},"interfaces/CardModel.html":{},"components/CardViewerComponent.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["difficulty'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["difficulty.component",{"_index":1149,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["difficulty.component.html",{"_index":540,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["difficulty.component.scss",{"_index":539,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["difficulty.component.ts",{"_index":537,"title":{},"body":{"components/CardDifficultyComponent.html":{},"coverage.html":{}}}],["difficulty.component.ts:19",{"_index":544,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["difficulty.component.ts:21",{"_index":546,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["difficulty.component.ts:23",{"_index":551,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["difficulty/card",{"_index":536,"title":{},"body":{"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"coverage.html":{}}}],["difficultychange",{"_index":543,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["direction",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["directive",{"_index":119,"title":{"directives/LongPressDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2377,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2381,"title":{},"body":{"index.html":{}}}],["disable",{"_index":2243,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["disabled",{"_index":307,"title":{},"body":{"components/ButtonComponent.html":{}}}],["display",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["dist",{"_index":2380,"title":{},"body":{"index.html":{}}}],["div",{"_index":695,"title":{},"body":{"components/CardEditorComponent.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{}}}],["div:empty",{"_index":1910,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["div[card",{"_index":884,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["div[mat",{"_index":699,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["divider",{"_index":885,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["document.body.appendchild(downloadlink",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.removechild(downloadlink",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.createelement(\"a",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":1295,"title":{},"body":{"classes/Database.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["domsanitizer",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1816,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["down",{"_index":1627,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["download",{"_index":2012,"title":{},"body":{"components/SettingsComponent.html":{}}}],["downloadfile",{"_index":1318,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["downloadfile(\"chinese",{"_index":1331,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["downloadlink",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadlink.click",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadlink.setattribute",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadlink.setattribute(\"download",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drawer",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["duplicate",{"_index":691,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["duplicates",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["duration",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":819,"title":{},"body":{"injectables/CardService.html":{},"interfaces/MatchingCard.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["dynamic",{"_index":2316,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":2389,"title":{},"body":{"index.html":{}}}],["e70000",{"_index":1826,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["e98100",{"_index":698,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["each",{"_index":417,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["easy",{"_index":411,"title":{},"body":{"classes/Card.html":{},"components/CardDifficultyComponent.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{},"miscellaneous/typealiases.html":{}}}],["easy_reps",{"_index":1623,"title":{},"body":{"classes/SessionCard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":640,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/PinyinFormFieldComponent.html":{}}}],["editcard",{"_index":844,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["editor",{"_index":577,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["editor'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["editor.component",{"_index":862,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{}}}],["editor.component.html",{"_index":579,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["editor.component.scss",{"_index":578,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["editor.component.ts",{"_index":576,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"coverage.html":{}}}],["editor.component.ts:105",{"_index":599,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:113",{"_index":600,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":1072,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":616,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":620,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":603,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":601,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1074,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":610,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":1073,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":615,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":1075,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:36",{"_index":619,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":602,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":617,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":595,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":604,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":1071,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:64",{"_index":596,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor.component.ts:70",{"_index":1070,"title":{},"body":{"components/CollectionEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":597,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["editor/card",{"_index":575,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["editor/collection",{"_index":989,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["element",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1410,"title":{},"body":{"directives/LongPressDirective.html":{},"components/VirtualKeyboardComponent.html":{}}}],["elements",{"_index":1463,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"miscellaneous/functions.html":{}}}],["emit",{"_index":1470,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["empty:empty",{"_index":534,"title":{},"body":{"components/CardComponent.html":{}}}],["enable",{"_index":2008,"title":{},"body":{"components/SettingsComponent.html":{}}}],["enabled",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["enablereviewmatching",{"_index":1913,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["encodeuri(\"data:application/json;charset=utf",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":525,"title":{},"body":{"components/CardComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"index.html":{}}}],["endsession",{"_index":1580,"title":{},"body":{"classes/SessionCard.html":{}}}],["environment",{"_index":1261,"title":{},"body":{"classes/Database.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.license",{"_index":1958,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["environment.production",{"_index":1272,"title":{},"body":{"classes/Database.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["environment.version",{"_index":1959,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{}}}],["err",{"_index":815,"title":{},"body":{"injectables/CardService.html":{}}}],["error",{"_index":369,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"miscellaneous/typealiases.html":{}}}],["error(`card",{"_index":835,"title":{},"body":{"injectables/CardService.html":{}}}],["error(`unable",{"_index":821,"title":{},"body":{"injectables/CardService.html":{}}}],["evenly",{"_index":561,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardViewerComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{}}}],["event",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["event.button",{"_index":1425,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["event.type",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":545,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["events",{"_index":1406,"title":{},"body":{"directives/LongPressDirective.html":{},"components/SessionMatchingStepComponent.html":{}}}],["execute",{"_index":2386,"title":{},"body":{"index.html":{}}}],["exist",{"_index":836,"title":{},"body":{"injectables/CardService.html":{}}}],["exists",{"_index":678,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["expectedremaining",{"_index":1799,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["export",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["exportasfile",{"_index":1312,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["exports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["exporttojson",{"_index":1952,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["ext",{"_index":2020,"title":{},"body":{"components/SettingsComponent.html":{}}}],["extends",{"_index":291,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/Database.html":{},"components/SlideToggleComponent.html":{}}}],["f",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fa",{"_index":568,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["faadd",{"_index":974,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["faarrowright",{"_index":1593,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["faarrowtrenddown",{"_index":1621,"title":{},"body":{"classes/SessionCard.html":{}}}],["faarrowtrendup",{"_index":1622,"title":{},"body":{"classes/SessionCard.html":{}}}],["faarrowupfrombracket",{"_index":2192,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["fabook",{"_index":2132,"title":{},"body":{"injectables/TabBarService.html":{}}}],["face",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["facheck",{"_index":614,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/VirtualKeyboardComponent.html":{}}}],["facheckcircle",{"_index":1741,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["fachecktoslot",{"_index":1739,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["fachevronleft",{"_index":959,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["fachevronright",{"_index":1100,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["facircleplay",{"_index":2131,"title":{},"body":{"injectables/TabBarService.html":{}}}],["facirclestop",{"_index":1669,"title":{},"body":{"components/SessionComponent.html":{}}}],["facirclexmark",{"_index":1743,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["faclose",{"_index":612,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["fadeleteleft",{"_index":2193,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["faedit",{"_index":854,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["fafacelaugh",{"_index":550,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["fafacesadtear",{"_index":548,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["fafacesmile",{"_index":549,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["faflagcheckered",{"_index":1670,"title":{},"body":{"components/SessionComponent.html":{}}}],["fagear",{"_index":2133,"title":{},"body":{"injectables/TabBarService.html":{}}}],["failed",{"_index":1742,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["fakeyboard",{"_index":1555,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["false",{"_index":507,"title":{},"body":{"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["famagnifyingglass",{"_index":960,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["family",{"_index":355,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SettingsComponent.html":{}}}],["farotateleft",{"_index":857,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["fatrash",{"_index":856,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["fetch",{"_index":1170,"title":{},"body":{"injectables/CollectionService.html":{}}}],["ff9100",{"_index":1828,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["fg",{"_index":342,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavbarComponent.html":{}}}],["field",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["field.component",{"_index":1147,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["field.component.html",{"_index":1540,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.scss",{"_index":1539,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts",{"_index":1535,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["field.component.ts:38",{"_index":1558,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:39",{"_index":1554,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:40",{"_index":1556,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:42",{"_index":1557,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:46",{"_index":1551,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:50",{"_index":1547,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:57",{"_index":1549,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:62",{"_index":1553,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:66",{"_index":1545,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:70",{"_index":1546,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field.component.ts:74",{"_index":1548,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["field/pinyin",{"_index":1146,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":319,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"classes/CoercionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["fields.foreach((fieldname",{"_index":899,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["fieldvalue",{"_index":901,"title":{},"body":{"classes/CoercionComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filename",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":2373,"title":{},"body":{"index.html":{}}}],["filledcollectionpromises",{"_index":1187,"title":{},"body":{"injectables/CollectionService.html":{}}}],["filler",{"_index":1048,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["filling",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["filter",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"directives/LongPressDirective.html":{},"miscellaneous/functions.html":{}}}],["filter((event",{"_index":1424,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["filter((value",{"_index":1439,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["filters",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["find",{"_index":1044,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["findcard",{"_index":779,"title":{},"body":{"injectables/CardService.html":{}}}],["findcard(search",{"_index":790,"title":{},"body":{"injectables/CardService.html":{}}}],["first",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/CardProgressBarComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/Database.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["firstcollection",{"_index":1280,"title":{},"body":{"classes/Database.html":{}}}],["fit",{"_index":767,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"components/NavbarComponent.html":{}}}],["five",{"_index":1308,"title":{},"body":{"classes/Database.html":{}}}],["fixed",{"_index":2238,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["flashcards",{"_index":1332,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/NavigationService.html":{}}}],["flat",{"_index":1590,"title":{},"body":{"classes/SessionCard.html":{},"miscellaneous/typealiases.html":{}}}],["flex",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["flexibleconnectedpositionstrategyorigin",{"_index":2203,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["floating",{"_index":1822,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["fn",{"_index":1241,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["font",{"_index":349,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{}}}],["fontawesome",{"_index":555,"title":{},"body":{"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":538,"title":{},"body":{"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":622,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formcontrol(\"newest",{"_index":1966,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formcontrol(10",{"_index":1964,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formcontrol(5",{"_index":1965,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formcontrol(false",{"_index":1962,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formcontrol(null",{"_index":607,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["formcontrol(true",{"_index":1963,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formgroup",{"_index":605,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["forms",{"_index":1975,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["formsmodule",{"_index":1116,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["formvalues",{"_index":672,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["formvalues.chinese",{"_index":667,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["formvalues.pinyin",{"_index":669,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["fortawesome/angular",{"_index":554,"title":{},"body":{"components/CardDifficultyComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":556,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["forwardref",{"_index":1538,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["four",{"_index":1306,"title":{},"body":{"classes/Database.html":{}}}],["fromevent",{"_index":1416,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["fromevent(elementref.nativeelement",{"_index":1422,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["full",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":1532,"title":{},"body":{"interfaces/PendingChangesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2331,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2395,"title":{},"body":{"index.html":{}}}],["g",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":360,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["generate",{"_index":2376,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2362,"title":{},"body":{"index.html":{}}}],["getcard",{"_index":780,"title":{},"body":{"injectables/CardService.html":{}}}],["getcard(id",{"_index":793,"title":{},"body":{"injectables/CardService.html":{}}}],["getcharacters",{"_index":1615,"title":{},"body":{"classes/SessionCard.html":{}}}],["getcollection",{"_index":1152,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getcollection(id",{"_index":1162,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getcollection(this.collectionid",{"_index":1038,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["getcollectionreviewstats",{"_index":2095,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcollectionreviewstats(collectionid",{"_index":2098,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcollections",{"_index":1106,"title":{},"body":{"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{}}}],["getcollectionsreviewstats",{"_index":2096,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcollectionsreviewstats(collections",{"_index":2100,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["getcurrentsteppercent",{"_index":726,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["getdefaultrepetitions",{"_index":1581,"title":{},"body":{"classes/SessionCard.html":{}}}],["getid",{"_index":1611,"title":{},"body":{"classes/SessionCard.html":{}}}],["getiscompleted",{"_index":1619,"title":{},"body":{"classes/SessionCard.html":{}}}],["getknowncardrequest",{"_index":1153,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getknowncardrequest(collectionid",{"_index":1165,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getnextreview",{"_index":1617,"title":{},"body":{"classes/SessionCard.html":{}}}],["getnumberofrepetitions",{"_index":1582,"title":{},"body":{"classes/SessionCard.html":{}}}],["getpinyin",{"_index":1613,"title":{},"body":{"classes/SessionCard.html":{}}}],["getreviewcardrequest",{"_index":1154,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getreviewcardrequest(collection",{"_index":1393,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["getreviewcardrequest(collectionid",{"_index":1171,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/StatisticsService.html":{}}}],["gets",{"_index":1608,"title":{},"body":{"classes/SessionCard.html":{}}}],["getsettings",{"_index":996,"title":{},"body":{"components/CollectionCardsComponent.html":{},"injectables/LearningSessionService.html":{},"components/SessionFillingStepComponent.html":{},"injectables/SettingsService.html":{}}}],["getting",{"_index":2358,"title":{"index.html":{}},"body":{}}],["gettones",{"_index":2211,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettones(letter",{"_index":2230,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["getunknowncardrequest",{"_index":1155,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getunknowncardrequest(collection",{"_index":1387,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["getunknowncardrequest(collectionid",{"_index":1174,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/StatisticsService.html":{}}}],["getwordspersession",{"_index":1372,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["go",{"_index":2172,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"index.html":{}}}],["goat",{"_index":1289,"title":{},"body":{"classes/Database.html":{}}}],["goback",{"_index":958,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["goto",{"_index":1099,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["graph",{"_index":2400,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":567,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["grid",{"_index":1905,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["group",{"_index":2018,"title":{},"body":{"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["gōng",{"_index":1293,"title":{},"body":{"classes/Database.html":{}}}],["gǒu",{"_index":1296,"title":{},"body":{"classes/Database.html":{}}}],["h",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hard",{"_index":413,"title":{},"body":{"classes/Card.html":{},"components/CardDifficultyComponent.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{},"miscellaneous/typealiases.html":{}}}],["hard_reps",{"_index":1625,"title":{},"body":{"classes/SessionCard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hastones",{"_index":2212,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hastones(letter",{"_index":2222,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["header",{"_index":521,"title":{},"body":{"components/CardComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["headerheight",{"_index":1055,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["help",{"_index":2396,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1820,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["hide",{"_index":533,"title":{},"body":{"components/CardComponent.html":{}}}],["hint",{"_index":2021,"title":{},"body":{"components/SettingsComponent.html":{}}}],["horse",{"_index":1284,"title":{},"body":{"classes/Database.html":{}}}],["host",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["href",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["htmlelement",{"_index":2178,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["http://localhost:4200",{"_index":2371,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nplural",{"_index":1043,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["icon",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{}}}],["icondefinition",{"_index":1592,"title":{},"body":{"classes/SessionCard.html":{},"injectables/TabBarService.html":{}}}],["iconregistry",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":541,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["id",{"_index":376,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"classes/SessionCard.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["ignoring",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":1503,"title":{},"body":{"components/NavbarComponent.html":{}}}],["immediately",{"_index":2054,"title":{},"body":{"injectables/SettingsService.html":{}}}],["implements",{"_index":293,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"pipes/JoinPipe.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"index.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["important",{"_index":1570,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["importedmodules",{"_index":1483,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":331,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":751,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["indicator.component",{"_index":1360,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["indicator.component.html",{"_index":753,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":752,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":750,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"coverage.html":{}}}],["indicator.component.ts:12",{"_index":758,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.ts:13",{"_index":759,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.ts:14",{"_index":757,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.ts:18",{"_index":760,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator.component.ts:19",{"_index":761,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["indicator/card",{"_index":749,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"modules/LearnPageModule.html":{},"coverage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["inherited",{"_index":315,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/SlideToggleComponent.html":{}}}],["initializedatasource",{"_index":922,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["inject",{"_index":621,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["inject(mat_dialog_data",{"_index":631,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["injectable",{"_index":773,"title":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{}},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":774,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{},"overview.html":{}}}],["inline",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["inlineconfirmdialogcomponent",{"_index":148,"title":{"components/InlineConfirmDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inner",{"_index":771,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["input",{"_index":335,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["inputs",{"_index":305,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["instanceof",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["interface",{"_index":414,"title":{"interfaces/CardCollectionModel.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"interfaces/CollectionForm.html":{},"interfaces/CollectionStats.html":{},"interfaces/ConfirmDialogConfig.html":{},"interfaces/MatchingCard.html":{},"interfaces/PendingChangesComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"interfaces/MatchingCard.html":{},"interfaces/PendingChangesComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":499,"title":{},"body":{"interfaces/CardCollectionModel.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"interfaces/CollectionForm.html":{},"interfaces/CollectionStats.html":{},"interfaces/ConfirmDialogConfig.html":{},"interfaces/MatchingCard.html":{},"interfaces/PendingChangesComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"overview.html":{}}}],["invalidsession",{"_index":1648,"title":{},"body":{"components/SessionComponent.html":{}}}],["iscompleted",{"_index":1583,"title":{},"body":{"classes/SessionCard.html":{}}}],["isdarkmode",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsService.html":{}}}],["isdarkmodeactive",{"_index":1918,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["isdeleteconfirm",{"_index":841,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["isdevmode",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["iseditactive",{"_index":842,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["isfillingstep",{"_index":1649,"title":{},"body":{"components/SessionComponent.html":{}}}],["isknown",{"_index":381,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["islearningsession",{"_index":1373,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["ismatchingstep",{"_index":1650,"title":{},"body":{"components/SessionComponent.html":{}}}],["ismistake",{"_index":1714,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["ispressing",{"_index":1436,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["isproductionenv",{"_index":1948,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["isresetconfirm",{"_index":843,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["issessiondone",{"_index":1651,"title":{},"body":{"components/SessionComponent.html":{}}}],["isunknown",{"_index":382,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["item",{"_index":2345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["items",{"_index":358,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{}}}],["j",{"_index":1294,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":680,"title":{},"body":{"components/CardEditorComponent.html":{},"pipes/JoinPipe.html":{}}}],["joinpipe",{"_index":1114,"title":{"pipes/JoinPipe.html":{}},"body":{"modules/CollectionPageModule.html":{},"pipes/JoinPipe.html":{},"coverage.html":{},"overview.html":{}}}],["json.stringify(backup",{"_index":1334,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["justify",{"_index":530,"title":{},"body":{"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["k",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":2388,"title":{},"body":{"index.html":{}}}],["keep",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keepeditoropen",{"_index":583,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["key",{"_index":737,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component",{"_index":1561,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["keyboard.component.html",{"_index":2146,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.scss",{"_index":2145,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts",{"_index":2142,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboard.component.ts:102",{"_index":2164,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:36",{"_index":2162,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:37",{"_index":2160,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:38",{"_index":2161,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:40",{"_index":2201,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:41",{"_index":2199,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:43",{"_index":2196,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:44",{"_index":2205,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:45",{"_index":2202,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:46",{"_index":2204,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:47",{"_index":2197,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:48",{"_index":2194,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:60",{"_index":2188,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard.component.ts:75",{"_index":2179,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyboard/keyboard",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboard/long",{"_index":1404,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["keyboard/tones.ts",{"_index":2281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboard/virtual",{"_index":1560,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboardicon",{"_index":1541,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["keygap",{"_index":2241,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["keyof",{"_index":1030,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["keys",{"_index":2170,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["khtml",{"_index":2248,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["known",{"_index":496,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{}}}],["knowncolor",{"_index":1878,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["l",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":449,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"classes/Database.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":887,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["last",{"_index":743,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["lastsession",{"_index":377,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"classes/Database.html":{}}}],["laugh",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["launcher",{"_index":1831,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["launcher.component",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LearnPageModule.html":{}}}],["launcher.component.html",{"_index":1833,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1832,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1830,"title":{},"body":{"components/SessionLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:19",{"_index":1845,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1844,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:21",{"_index":1842,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:24",{"_index":1836,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:36",{"_index":1839,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:69",{"_index":1838,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher.component.ts:78",{"_index":1841,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["launcher/session",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LearnPageModule.html":{},"components/SessionLauncherComponent.html":{},"coverage.html":{}}}],["layout",{"_index":2147,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["layout.model",{"_index":2208,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["layout.model.ts",{"_index":2279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["learn",{"_index":1386,"title":{},"body":{"injectables/LearningSessionService.html":{},"classes/SessionCard.html":{},"components/SessionLauncherComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["learn(collection",{"_index":1837,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["learncolor",{"_index":1874,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["learning",{"_index":876,"title":{},"body":{"components/CardViewerComponent.html":{},"components/SettingsComponent.html":{}}}],["learningsessionservice",{"_index":1365,"title":{"injectables/LearningSessionService.html":{}},"body":{"injectables/LearningSessionService.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"coverage.html":{}}}],["learningsessionservice.currentsession.getvalue",{"_index":1673,"title":{},"body":{"components/SessionComponent.html":{}}}],["learningsessionservice.islearningsession",{"_index":1679,"title":{},"body":{"components/SessionComponent.html":{}}}],["learnnewpage",{"_index":1472,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["learnpagemodule",{"_index":196,"title":{"modules/LearnPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LearnPageModule.html":{},"modules.html":{},"overview.html":{}}}],["learnpinyin",{"_index":1715,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["left",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardProgressBarComponent.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["leftcolumncards",{"_index":1451,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["leftmost",{"_index":2168,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["legend",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"overview.html":{}}}],["leitner",{"_index":1599,"title":{},"body":{"classes/SessionCard.html":{}}}],["leitnerbox",{"_index":378,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["leitnerboxes",{"_index":1914,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["length",{"_index":734,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["letter",{"_index":352,"title":{},"body":{"components/ButtonComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["lettercase",{"_index":2226,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":562,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["levels",{"_index":559,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["license",{"_index":2016,"title":{},"body":{"components/SettingsComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["light",{"_index":1934,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/typealiases.html":{}}}],["limit(await",{"_index":1388,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["line",{"_index":1344,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["list",{"_index":1086,"title":{},"body":{"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["list'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["list.component",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{}}}],["list.component.html",{"_index":1088,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.scss",{"_index":1087,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts",{"_index":1085,"title":{},"body":{"components/CollectionListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":1101,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:20",{"_index":1098,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:21",{"_index":1097,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:25",{"_index":1092,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:34",{"_index":1094,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:41",{"_index":1096,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:51",{"_index":1093,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list/collection",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["literal",{"_index":592,"title":{},"body":{"components/CardEditorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"components/SessionLauncherComponent.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1192,"title":{},"body":{"injectables/CollectionService.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["loadcollectioncards",{"_index":923,"title":{},"body":{"components/CollectionCardsComponent.html":{},"injectables/CollectionService.html":{}}}],["loadcollectioncards(collection",{"_index":1176,"title":{},"body":{"injectables/CollectionService.html":{}}}],["loadcollections",{"_index":1089,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["localstorage",{"_index":2053,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.getitem(theme_storage_key",{"_index":2041,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.setitem(theme_storage_key",{"_index":2057,"title":{},"body":{"injectables/SettingsService.html":{}}}],["long",{"_index":2209,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["longpress",{"_index":1408,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["longpressdirective",{"_index":178,"title":{"directives/LongPressDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["lose",{"_index":1689,"title":{},"body":{"components/SessionComponent.html":{}}}],["lower",{"_index":2228,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["lowercase",{"_index":2236,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":1285,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["m.trim",{"_index":650,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["made",{"_index":1690,"title":{},"body":{"components/SessionComponent.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":1505,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/SessionComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map",{"_index":1417,"title":{},"body":{"directives/LongPressDirective.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["margin",{"_index":569,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["mark",{"_index":1894,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["mat",{"_index":689,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["mat_dialog_data",{"_index":625,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["matbuttonmodule",{"_index":1118,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1120,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["match",{"_index":1457,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["matchcard.card.characters",{"_index":1903,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["matchcard.card.pinyin",{"_index":1904,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["matcheckboxmodule",{"_index":1122,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["matched",{"_index":1445,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["matching",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcard",{"_index":1442,"title":{"interfaces/MatchingCard.html":{}},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"coverage.html":{}}}],["matchingcompleted",{"_index":1654,"title":{},"body":{"components/SessionComponent.html":{}}}],["matchingpages",{"_index":1450,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["matchselectedcards",{"_index":1885,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["matdialog",{"_index":846,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{}}}],["matdialogmodule",{"_index":1124,"title":{},"body":{"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["matdialogref",{"_index":593,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{}}}],["matdividermodule",{"_index":1125,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["matdrawer",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["matformfieldmodule",{"_index":1127,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":1129,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["maticonregistry",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":1130,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":965,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["matpaginatormodule",{"_index":1132,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["matprogressspinnermodule",{"_index":1357,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["matripplemodule",{"_index":2143,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["matselectmodule",{"_index":2026,"title":{},"body":{"modules/SettingsModule.html":{}}}],["matslidetogglemodule",{"_index":1133,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/SettingsModule.html":{}}}],["matsnackbar",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarmodule",{"_index":2028,"title":{},"body":{"modules/SettingsModule.html":{}}}],["matsort",{"_index":969,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["matsortmodule",{"_index":1135,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["mattabledatasource",{"_index":953,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["mattablemodule",{"_index":1136,"title":{},"body":{"modules/CollectionPageModule.html":{}}}],["mattooltipmodule",{"_index":2064,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":882,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SettingsComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["meaning",{"_index":606,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{}}}],["meaning.split(\";\").map((m",{"_index":649,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["meanings",{"_index":379,"title":{},"body":{"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"classes/Database.html":{}}}],["meanings.length",{"_index":710,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["meanings.map((meaning",{"_index":712,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["meanings.pipe",{"_index":1138,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["meanings.pipe.ts",{"_index":705,"title":{},"body":{"pipes/CardMeaningsPipe.html":{},"coverage.html":{}}}],["meanings.pipe.ts:8",{"_index":708,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["meanings[0",{"_index":711,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["meaning}`).join",{"_index":713,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["medium",{"_index":412,"title":{},"body":{"classes/Card.html":{},"components/CardDifficultyComponent.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{},"miscellaneous/typealiases.html":{}}}],["medium_reps",{"_index":1624,"title":{},"body":{"classes/SessionCard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":2069,"title":{},"body":{"components/SidenavComponent.html":{}}}],["merge",{"_index":1418,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["merge(mousedown",{"_index":1434,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["message",{"_index":1222,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/SessionComponent.html":{}}}],["messages",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"dependencies.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["method",{"_index":328,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["min",{"_index":1814,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["mind",{"_index":1688,"title":{},"body":{"components/SessionComponent.html":{}}}],["miscellaneous",{"_index":2330,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mistake",{"_index":1601,"title":{},"body":{"classes/SessionCard.html":{}}}],["mistakes",{"_index":1575,"title":{},"body":{"classes/SessionCard.html":{}}}],["mit",{"_index":2405,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2009,"title":{},"body":{"components/SettingsComponent.html":{}}}],["model/card",{"_index":1182,"title":{},"body":{"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/StatisticsService.html":{}}}],["model/card.model",{"_index":1183,"title":{},"body":{"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/LearningSessionService.html":{}}}],["model/settings.model",{"_index":1264,"title":{},"body":{"classes/Database.html":{},"injectables/SettingsService.html":{}}}],["model/statistics.model",{"_index":2102,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["modified",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modify",{"_index":2338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":182,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mono",{"_index":1067,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["more",{"_index":1786,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"index.html":{}}}],["mousedown",{"_index":1421,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mousedown\").pipe",{"_index":1423,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseup",{"_index":1427,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["mouseup\").pipe",{"_index":1428,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["move",{"_index":1602,"title":{},"body":{"classes/SessionCard.html":{}}}],["movenextbox",{"_index":383,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["movepreviousbox",{"_index":384,"title":{},"body":{"classes/Card.html":{}}}],["moz",{"_index":2249,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["ms",{"_index":2250,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["multi",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["n",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":322,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["navbar",{"_index":1482,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["navbar.component.html",{"_index":1485,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1484,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":150,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbarheight",{"_index":1053,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["navbartext",{"_index":1486,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/NavigationService.html":{}}}],["navbartype",{"_index":1487,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"miscellaneous/typealiases.html":{}}}],["navbarvisible",{"_index":1488,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/NavigationService.html":{}}}],["navigate",{"_index":2370,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1491,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigation.navbartext.asobservable",{"_index":1498,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigation.navbartype.asobservable",{"_index":1496,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigation.navbarvisible.asobservable",{"_index":1500,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navigationend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationservice",{"_index":934,"title":{"injectables/NavigationService.html":{}},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["navigationservice.navbartext.next",{"_index":1755,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["navigationservice.navbartype.next(\"description",{"_index":1754,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["navigationservice.setnavbartext",{"_index":1456,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["navigationservice.settitle(\"learning",{"_index":1671,"title":{},"body":{"components/SessionComponent.html":{}}}],["need",{"_index":1691,"title":{},"body":{"components/SessionComponent.html":{},"index.html":{}}}],["needsreview",{"_index":385,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["new",{"_index":441,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"injectables/NavigationService.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcardid",{"_index":808,"title":{},"body":{"injectables/CardService.html":{}}}],["newest",{"_index":1921,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/typealiases.html":{}}}],["newvalue",{"_index":1245,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["next",{"_index":1603,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{}}}],["nextcard",{"_index":1719,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["nextreview",{"_index":386,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"classes/SessionCard.html":{}}}],["nextreviewindays",{"_index":387,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["nextsession",{"_index":436,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["ng",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/CardProgressIndicatorComponent.html":{},"modules/LearnPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":1536,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["ngafterviewinit",{"_index":924,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["ngcircleprogressmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/CardProgressIndicatorComponent.html":{},"modules/LearnPageModule.html":{}}}],["ngcircleprogressmodule.forroot",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["ngif",{"_index":1559,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{}}}],["ngonchanges",{"_index":301,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ngondestroy",{"_index":925,"title":{},"body":{"components/CollectionCardsComponent.html":{},"directives/LongPressDirective.html":{}}}],["ngoninit",{"_index":504,"title":{},"body":{"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["ngxformcontrolmessages",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ngxformcontrolmessagesmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{}}}],["ngxformcontrolmessagesmodule.forroot(defaulterrormessages",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["noheader",{"_index":505,"title":{},"body":{"components/CardComponent.html":{}}}],["non",{"_index":1979,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["none",{"_index":348,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["normal",{"_index":1819,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["normalize(\"nfd",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalized",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizedcontent",{"_index":1020,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizedcontent.push(normalizeforcomparison(card.pinyin",{"_index":1023,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizedcontent.some((content",{"_index":1024,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizedfilter",{"_index":1018,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizedstr1",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizedstr1.includes(normalizedstr2",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizedstr2",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizedstr2.includes(normalizedstr1",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizeforcomparison",{"_index":984,"title":{},"body":{"components/CollectionCardsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalizeforcomparison(filter",{"_index":1019,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizeforcomparison(meaning",{"_index":1022,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["normalizeforcomparison(str1",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normalizeforcomparison(str2",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nothing",{"_index":1248,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["now",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":902,"title":{},"body":{"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"directives/LongPressDirective.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":1980,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["number",{"_index":392,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"injectables/StatisticsService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberofrepetitions",{"_index":1576,"title":{},"body":{"classes/SessionCard.html":{}}}],["numbers",{"_index":1298,"title":{},"body":{"classes/Database.html":{},"components/SessionLauncherComponent.html":{}}}],["numberstats",{"_index":1854,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["numberstats.known",{"_index":1860,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["numberstats.tolearn",{"_index":1856,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["numberstats.toreview",{"_index":1858,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["o",{"_index":2251,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":547,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":427,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["object.freeze",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(tones).includes(letter.touppercase",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":1492,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/PendingChangesComponent.html":{},"components/SessionComponent.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":818,"title":{},"body":{"injectables/CardService.html":{}}}],["occurrence",{"_index":2337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["occurrences",{"_index":2341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["of(null",{"_index":1438,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["of(true",{"_index":1684,"title":{},"body":{"components/SessionComponent.html":{}}}],["offscreen",{"_index":2173,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["offset",{"_index":2167,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["ok",{"_index":557,"title":{},"body":{"components/CardDifficultyComponent.html":{}}}],["oldest",{"_index":1396,"title":{},"body":{"injectables/LearningSessionService.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsModel.html":{},"miscellaneous/typealiases.html":{}}}],["onaction",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchanges",{"_index":294,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ondestroy",{"_index":909,"title":{},"body":{"components/CollectionCardsComponent.html":{},"directives/LongPressDirective.html":{}}}],["one",{"_index":685,"title":{},"body":{"components/CardEditorComponent.html":{},"classes/Database.html":{},"components/SessionFillingStepComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":501,"title":{},"body":{"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["open",{"_index":2180,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["open(\"a",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open(cardeditorcomponent",{"_index":866,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["open(cardviewercomponent",{"_index":1009,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["open(collectioneditorcomponent",{"_index":1036,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["open(confirmdialogcomponent",{"_index":1685,"title":{},"body":{"components/SessionComponent.html":{}}}],["opencardeditor",{"_index":926,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["opencardeditor(card",{"_index":943,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["opencardviewer",{"_index":927,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["opencardviewer(card",{"_index":945,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["opencategoryeditor",{"_index":928,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["openeditor",{"_index":1090,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["openeditor(collection",{"_index":1095,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["opentones",{"_index":2155,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["opentones(letter",{"_index":2177,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["optional",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":2014,"title":{},"body":{"components/SettingsComponent.html":{}}}],["orange",{"_index":2255,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["orderby(\"label",{"_index":1185,"title":{},"body":{"injectables/CollectionService.html":{}}}],["original",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["originalcard",{"_index":584,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["out",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":768,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["output",{"_index":552,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["outputs",{"_index":542,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["overflow",{"_index":1059,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["overlay",{"_index":2166,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["overlaymodule",{"_index":2144,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["overview",{"_index":2397,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":2309,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["page",{"_index":1046,"title":{},"body":{"components/CollectionCardsComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["page.map((card",{"_index":1479,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["page.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":1115,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["pageoptions",{"_index":1949,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["pages",{"_index":1462,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["pages.push(tosplit.splice(0",{"_index":1469,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["pages/collection/collection",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/learn/learn",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/learn/session",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/learn/session/session.component",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/settings/settings.component",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/settings/settings.module",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["pagesize",{"_index":915,"title":{},"body":{"components/CollectionCardsComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["paginator",{"_index":916,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["panelclass",{"_index":1105,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["param",{"_index":898,"title":{},"body":{"classes/CoercionComponent.html":{},"injectables/CollectionService.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmDialogComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{}}}],["params[\"id",{"_index":991,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["partial",{"_index":1843,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["passed",{"_index":1824,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["path",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pendingchangescomponent",{"_index":1529,"title":{"interfaces/PendingChangesComponent.html":{}},"body":{"interfaces/PendingChangesComponent.html":{},"components/SessionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pendingchangesguard",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/PendingChangesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2007,"title":{},"body":{"components/SettingsComponent.html":{}}}],["percent",{"_index":756,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["percents",{"_index":1849,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["percentstatistics",{"_index":450,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/SessionLauncherComponent.html":{}}}],["permanent",{"_index":877,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["pinyin",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/Database.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["pinyinformfieldcomponent",{"_index":152,"title":{"components/PinyinFormFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pinyininput",{"_index":1716,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["pinyinmatch",{"_index":1766,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["pipe",{"_index":701,"title":{"pipes/CardMeaningsPipe.html":{},"pipes/JoinPipe.html":{}},"body":{"pipes/CardMeaningsPipe.html":{},"pipes/JoinPipe.html":{},"directives/LongPressDirective.html":{},"components/SessionComponent.html":{},"coverage.html":{}}}],["pipe(debouncetime(250",{"_index":1002,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["pipe(filter((event",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe(map((confirmed",{"_index":1695,"title":{},"body":{"components/SessionComponent.html":{}}}],["pipes",{"_index":703,"title":{},"body":{"pipes/CardMeaningsPipe.html":{},"pipes/JoinPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":709,"title":{},"body":{"pipes/CardMeaningsPipe.html":{},"pipes/JoinPipe.html":{}}}],["plain",{"_index":2252,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["platform",{"_index":2390,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":564,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["populate",{"_index":1255,"title":{},"body":{"classes/Database.html":{}}}],["position",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["positionincolumn",{"_index":2174,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["presented",{"_index":1785,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["preservercase",{"_index":2187,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["press.directive",{"_index":2210,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["press.directive.ts",{"_index":1405,"title":{},"body":{"directives/LongPressDirective.html":{},"coverage.html":{}}}],["press.directive.ts:11",{"_index":1415,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:12",{"_index":1411,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:41",{"_index":1413,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["press.directive.ts:9",{"_index":1412,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["pressduration",{"_index":1407,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["prevent",{"_index":1693,"title":{},"body":{"components/SessionComponent.html":{}}}],["previous",{"_index":1606,"title":{},"body":{"classes/SessionCard.html":{}}}],["primary",{"_index":368,"title":{},"body":{"components/ButtonComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/SessionComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["private",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["production",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["project",{"_index":2361,"title":{},"body":{"index.html":{}}}],["promise",{"_index":598,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"components/SessionLauncherComponent.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.all(filledcollectionpromises",{"_index":1190,"title":{},"body":{"injectables/CollectionService.html":{}}}],["promise.all(promises).then",{"_index":2108,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["promise.resolve",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promises",{"_index":2104,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["propagatechange",{"_index":1229,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["propagatefct",{"_index":1544,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"miscellaneous/typealiases.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"properties.html":{}}}],["protected",{"_index":302,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["provide",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["provided",{"_index":327,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["providedin",{"_index":804,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"modules/SettingsModule.html":{},"components/SlideToggleComponent.html":{},"overview.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["px",{"_index":2176,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["q",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qwerty",{"_index":2195,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":1303,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":346,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["raleway",{"_index":1569,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["randomized",{"_index":1464,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["reactiveformsmodule",{"_index":1117,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":919,"title":{},"body":{"components/CollectionCardsComponent.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{}}}],["ready",{"_index":1173,"title":{},"body":{"injectables/CollectionService.html":{}}}],["red",{"_index":1710,"title":{},"body":{"components/SessionComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["redirectto",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2185,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"index.html":{}}}],["reflect.get(this",{"_index":903,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["refreshedcollection",{"_index":1040,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["register",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["registericons",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["registeronchange",{"_index":1230,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["registeronchange(fn",{"_index":1239,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["registerontouched",{"_index":1231,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["registerwhenstable:30000",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["relative",{"_index":1811,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["reload",{"_index":2372,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":1976,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"miscellaneous/functions.html":{}}}],["removed",{"_index":2340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removeonce",{"_index":1749,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["removeonce(allcards",{"_index":1798,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["removeonce(source",{"_index":2334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removepinyincharacter",{"_index":1542,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["removes",{"_index":2336,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["removetimes",{"_index":1750,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["removetimes(source",{"_index":2342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rep",{"_index":1812,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["repeat",{"_index":1449,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["repeated",{"_index":1471,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["repetitions",{"_index":1609,"title":{},"body":{"classes/SessionCard.html":{}}}],["replace(/\\p{diacritic}/gu",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":1169,"title":{},"body":{"injectables/CollectionService.html":{}}}],["required",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"classes/SessionCard.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"classes/Card.html":{},"components/CardEditorComponent.html":{},"interfaces/CardModel.html":{},"components/CardViewerComponent.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["resetcardprogress",{"_index":1915,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["resetnavbartext",{"_index":1509,"title":{},"body":{"injectables/NavigationService.html":{}}}],["resetprogress",{"_index":845,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["resetrequired",{"_index":585,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["resettabbar",{"_index":2123,"title":{},"body":{"injectables/TabBarService.html":{}}}],["resolve",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restore",{"_index":879,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["result",{"_index":1705,"title":{},"body":{"components/SessionComponent.html":{}}}],["results",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":428,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{},"injectables/CollectionService.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{}}}],["reveal",{"_index":1720,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["reverse",{"_index":2093,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["reversed",{"_index":520,"title":{},"body":{"components/CardComponent.html":{}}}],["reversedcorners",{"_index":506,"title":{},"body":{"components/CardComponent.html":{}}}],["review",{"_index":415,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"injectables/CollectionService.html":{},"injectables/LearningSessionService.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["review(collection",{"_index":1840,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["reviewcolor",{"_index":1876,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["rgba(0",{"_index":1050,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["right",{"_index":518,"title":{},"body":{"components/CardComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionListComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["rightcolumncards",{"_index":1452,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["rightmost",{"_index":2169,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["rooster",{"_index":1292,"title":{},"body":{"classes/Database.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"injectables/NavigationService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{},"injectables/TabBarService.html":{}}}],["root'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["rootletter",{"_index":2235,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["roottabs",{"_index":2121,"title":{},"body":{"injectables/TabBarService.html":{}}}],["roundedradius",{"_index":512,"title":{},"body":{"components/CardComponent.html":{},"components/CardProgressBarComponent.html":{}}}],["rounderborder",{"_index":2085,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["route",{"_index":936,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/SessionComponent.html":{},"injectables/TabBarService.html":{}}}],["router",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["router.events",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navigatebyurl(\"/sessions",{"_index":1676,"title":{},"body":{"components/SessionComponent.html":{}}}],["routermodule",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routertab",{"_index":2111,"title":{},"body":{"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["routertabbar",{"_index":2138,"title":{},"body":{"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["routes",{"_index":266,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TabBarComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1706,"title":{},"body":{"components/SessionComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["run",{"_index":2367,"title":{},"body":{"index.html":{}}}],["running",{"_index":2382,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/SessionComponent.html":{},"injectables/SettingsService.html":{},"injectables/TabBarService.html":{},"dependencies.html":{}}}],["s",{"_index":1307,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["sad",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["same",{"_index":1605,"title":{},"body":{"classes/SessionCard.html":{}}}],["save",{"_index":613,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"injectables/SettingsService.html":{}}}],["savecard",{"_index":589,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["savecollection",{"_index":1069,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["savepromise",{"_index":659,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["scaffolding",{"_index":2375,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1266,"title":{},"body":{"classes/Database.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":2066,"title":{},"body":{"components/SidenavComponent.html":{}}}],["search",{"_index":792,"title":{},"body":{"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{}}}],["search.meanings?.some((meaning",{"_index":826,"title":{},"body":{"injectables/CardService.html":{}}}],["searchactive",{"_index":917,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["secondcollection",{"_index":1297,"title":{},"body":{"classes/Database.html":{}}}],["seconds",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["section",{"_index":888,"title":{},"body":{"components/CardViewerComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["select",{"_index":2182,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["selected",{"_index":1908,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["selectedleftcard",{"_index":1453,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["selectedrightcard",{"_index":1454,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["selection",{"_index":2010,"title":{},"body":{"components/SettingsComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["selectleftcard",{"_index":1886,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["selectleftcard(card",{"_index":1896,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["selectrightcard",{"_index":1887,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["selectrightcard(card",{"_index":1897,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["self",{"_index":1110,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["separate",{"_index":676,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["serve",{"_index":2368,"title":{},"body":{"index.html":{}}}],["server",{"_index":2366,"title":{},"body":{"index.html":{}}}],["serviceworker",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register(\"ngsw",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["session'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["session.component.html",{"_index":1647,"title":{},"body":{"components/SessionComponent.html":{}}}],["session.component.scss",{"_index":1646,"title":{},"body":{"components/SessionComponent.html":{}}}],["session.service",{"_index":1668,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["session.service.ts",{"_index":1367,"title":{},"body":{"injectables/LearningSessionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["session.service.ts:13",{"_index":1382,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session.service.ts:14",{"_index":1374,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session.service.ts:21",{"_index":1376,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session.service.ts:32",{"_index":1378,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session.service.ts:47",{"_index":1380,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session.service.ts:51",{"_index":1379,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["session/session",{"_index":1361,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["session/session.component",{"_index":1364,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["sessioncard",{"_index":1572,"title":{"classes/SessionCard.html":{}},"body":{"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"coverage.html":{}}}],["sessioncard(card",{"_index":1760,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["sessioncard.endsession",{"_index":1699,"title":{},"body":{"components/SessionComponent.html":{}}}],["sessioncards",{"_index":1652,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{}}}],["sessioncompleted",{"_index":1655,"title":{},"body":{"components/SessionComponent.html":{}}}],["sessioncompleted(cards",{"_index":1660,"title":{},"body":{"components/SessionComponent.html":{}}}],["sessioncomponent",{"_index":156,"title":{"components/SessionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessioncount",{"_index":1801,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["sessioncount).fill(this.currentcard.id",{"_index":1807,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["sessionfillingstepcomponent",{"_index":158,"title":{"components/SessionFillingStepComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionlaunchercomponent",{"_index":162,"title":{"components/SessionLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionmatchingstepcomponent",{"_index":164,"title":{"components/SessionMatchingStepComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"modules/LearnPageModule.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionprogress",{"_index":1577,"title":{},"body":{"classes/SessionCard.html":{},"miscellaneous/typealiases.html":{}}}],["sessionresulticon",{"_index":1578,"title":{},"body":{"classes/SessionCard.html":{}}}],["sessionresults",{"_index":1653,"title":{},"body":{"components/SessionComponent.html":{}}}],["sessions",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SettingsComponent.html":{},"injectables/TabBarService.html":{}}}],["sessions/active",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sessiontype",{"_index":1369,"title":{},"body":{"injectables/LearningSessionService.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":763,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionMatchingStepComponent.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["setactions",{"_index":2124,"title":{},"body":{"injectables/TabBarService.html":{}}}],["setactions(tabs",{"_index":2127,"title":{},"body":{"injectables/TabBarService.html":{}}}],["setcardcount(value",{"_index":762,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["setdisabledstate",{"_index":1232,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["setnavbartext",{"_index":1510,"title":{},"body":{"injectables/NavigationService.html":{}}}],["setnavbartext(text",{"_index":1516,"title":{},"body":{"injectables/NavigationService.html":{}}}],["setroutes",{"_index":2125,"title":{},"body":{"injectables/TabBarService.html":{}}}],["setroutes(tabs",{"_index":2129,"title":{},"body":{"injectables/TabBarService.html":{}}}],["sets",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setstatistics",{"_index":456,"title":{},"body":{"classes/CardCollection.html":{}}}],["setstatistics(stats",{"_index":473,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["setting",{"_index":2017,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingcollection",{"_index":2047,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingcollection.length",{"_index":2048,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings",{"_index":285,"title":{"classes/Settings.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CardProgressBarComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"injectables/LearningSessionService.html":{},"components/SessionLauncherComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"injectables/TabBarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["settings(settingcollection[0",{"_index":2051,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings(settings",{"_index":2050,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.cardselectiontype",{"_index":1395,"title":{},"body":{"injectables/LearningSessionService.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.component",{"_index":2032,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":1945,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["settings.component.scss",{"_index":1944,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["settings.enablereviewmatching",{"_index":1680,"title":{},"body":{"components/SessionComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.id",{"_index":1935,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{}}}],["settings.learnpinyin",{"_index":1753,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.leitnerboxes",{"_index":735,"title":{},"body":{"components/CardProgressBarComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.pagesize",{"_index":999,"title":{},"body":{"components/CollectionCardsComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.resetcardprogress",{"_index":646,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.service",{"_index":1385,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["settings.theme",{"_index":1939,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{}}}],["settings.wordspersession",{"_index":1402,"title":{},"body":{"injectables/LearningSessionService.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["settings.wordspersession).map((card",{"_index":1400,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["settingscomponent",{"_index":166,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsform",{"_index":1981,"title":{"interfaces/SettingsForm.html":{}},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["settingsmodel",{"_index":1263,"title":{"interfaces/SettingsModel.html":{}},"body":{"classes/Database.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":197,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsservice",{"_index":34,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"injectables/LearningSessionService.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["settingsservice.getsettings().then((settings",{"_index":1677,"title":{},"body":{"components/SessionComponent.html":{}}}],["settingsservice.isdarkmode().subscribe((darkmode",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle",{"_index":1511,"title":{},"body":{"injectables/NavigationService.html":{}}}],["settitle(title",{"_index":1518,"title":{},"body":{"injectables/NavigationService.html":{}}}],["shared/components/card",{"_index":1148,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["sharpradius",{"_index":514,"title":{},"body":{"components/CardComponent.html":{}}}],["shouldn't",{"_index":2171,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["shuffle",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shufflearray",{"_index":1446,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shufflearray(arr",{"_index":2346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shufflearray(cards",{"_index":1467,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["shufflearray(page.map((card",{"_index":1477,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["shuffled",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shuffles",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sidenav",{"_index":2060,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["sidenav.component.html",{"_index":2062,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":2061,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":168,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{}}}],["size",{"_index":522,"title":{},"body":{"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{}}}],["sizing",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/SessionComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SidenavComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["slide",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["slider",{"_index":2089,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidercirclesize",{"_index":2086,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["sliderheight",{"_index":2083,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":170,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":528,"title":{},"body":{"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{}}}],["smile",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["snackbar",{"_index":1953,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"miscellaneous/variables.html":{}}}],["sob",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["solid",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{}}}],["solution",{"_index":1827,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["soon",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":918,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["sortby(\"leitnerbox",{"_index":1394,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["sorted",{"_index":1035,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["sortheaderid",{"_index":1027,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"modules/LearnPageModule.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["space",{"_index":560,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardViewerComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SidenavComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["spacing",{"_index":353,"title":{},"body":{"components/ButtonComponent.html":{}}}],["span",{"_index":696,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["span:empty",{"_index":1815,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["specified",{"_index":318,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{}}}],["spinner",{"_index":1359,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["split",{"_index":1461,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["src/.../app.module.ts",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../button.types.ts",{"_index":2412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":2414,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../control",{"_index":2413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../database",{"_index":2416,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../database.model.ts",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.utils.ts",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.utils.ts",{"_index":2333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../general.utils.ts",{"_index":2332,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../keyboard",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../learning",{"_index":2421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../navbar.component.ts",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../navigation.service.ts",{"_index":2418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pending",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pinyin",{"_index":2419,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pwa",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session",{"_index":2420,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../settings.model.ts",{"_index":2411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.service.ts",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.component.ts",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tab",{"_index":2410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tones.ts",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":2417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../virtual",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/button/button.component",{"_index":1140,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{}}}],["src/app/components/button/button.component.ts",{"_index":290,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/button/button.component.ts:15",{"_index":312,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/button/button.component.ts:16",{"_index":309,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/button/button.component.ts:17",{"_index":310,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/button/button.component.ts:19",{"_index":313,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/components/button/button.types.ts",{"_index":2422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/components/card/card.component",{"_index":1141,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{}}}],["src/app/components/card/card.component.ts",{"_index":500,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/components/card/card.component.ts:14",{"_index":508,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/components/card/card.component.ts:15",{"_index":509,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/components/card/card.component.ts:17",{"_index":510,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/components/dialog/confirm",{"_index":1207,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"modules/LearnPageModule.html":{},"components/SessionComponent.html":{},"coverage.html":{}}}],["src/app/components/dialog/inline",{"_index":1142,"title":{},"body":{"modules/CollectionPageModule.html":{},"components/InlineConfirmDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1481,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1494,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":1493,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:20",{"_index":1490,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/pinyin",{"_index":1145,"title":{},"body":{"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"components/PinyinFormFieldComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/sidenav/sidenav.component.ts",{"_index":2059,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/sidenav/sidenav.component.ts:25",{"_index":2063,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/slide",{"_index":2029,"title":{},"body":{"modules/SettingsModule.html":{},"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["src/app/components/tab",{"_index":986,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/virtual",{"_index":1403,"title":{},"body":{"directives/LongPressDirective.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/coercion",{"_index":891,"title":{},"body":{"classes/CoercionComponent.html":{},"coverage.html":{}}}],["src/app/core/control",{"_index":1226,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/db/database",{"_index":2285,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/db/database.model.ts",{"_index":1252,"title":{},"body":{"classes/Database.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/db/database.model.ts:16",{"_index":1258,"title":{},"body":{"classes/Database.html":{}}}],["src/app/core/db/database.model.ts:17",{"_index":1257,"title":{},"body":{"classes/Database.html":{}}}],["src/app/core/db/database.model.ts:18",{"_index":1256,"title":{},"body":{"classes/Database.html":{}}}],["src/app/core/db/database.model.ts:31",{"_index":1259,"title":{},"body":{"classes/Database.html":{}}}],["src/app/core/db/database.model.ts:37",{"_index":1260,"title":{},"body":{"classes/Database.html":{}}}],["src/app/core/db/database.service.ts",{"_index":1310,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/app/core/db/database.service.ts:15",{"_index":1317,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/core/db/database.service.ts:19",{"_index":1316,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/core/db/database.service.ts:33",{"_index":1315,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/core/db/database.service.ts:9",{"_index":1314,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/core/guards/pending",{"_index":1530,"title":{},"body":{"interfaces/PendingChangesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/model/card",{"_index":445,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"coverage.html":{}}}],["src/app/core/model/card.model.ts",{"_index":371,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/model/card.model.ts:23",{"_index":395,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:24",{"_index":398,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:25",{"_index":399,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:26",{"_index":391,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:27",{"_index":393,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:28",{"_index":397,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:29",{"_index":396,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:30",{"_index":389,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:38",{"_index":402,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:42",{"_index":406,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:48",{"_index":409,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:52",{"_index":401,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:56",{"_index":405,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:63",{"_index":403,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:69",{"_index":404,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:75",{"_index":410,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/card.model.ts:81",{"_index":400,"title":{},"body":{"classes/Card.html":{}}}],["src/app/core/model/settings.model.ts",{"_index":1911,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/model/settings.model.ts:17",{"_index":1923,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:18",{"_index":1922,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:19",{"_index":1924,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:20",{"_index":1927,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:21",{"_index":1932,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:22",{"_index":1931,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:23",{"_index":1925,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:24",{"_index":1928,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:25",{"_index":1919,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/settings.model.ts:41",{"_index":1933,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/core/model/statistics.model.ts",{"_index":1206,"title":{},"body":{"interfaces/CollectionStats.html":{},"coverage.html":{}}}],["src/app/core/pipes/card",{"_index":704,"title":{},"body":{"pipes/CardMeaningsPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/join.pipe.ts",{"_index":1347,"title":{},"body":{"pipes/JoinPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/join.pipe.ts:8",{"_index":1350,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["src/app/core/pwa",{"_index":2291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/card.service.ts",{"_index":775,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/app/core/services/card.service.ts:12",{"_index":785,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:18",{"_index":787,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:24",{"_index":796,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:37",{"_index":798,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:41",{"_index":789,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:48",{"_index":791,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/card.service.ts:66",{"_index":794,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/core/services/collection.service.ts",{"_index":1150,"title":{},"body":{"injectables/CollectionService.html":{},"coverage.html":{}}}],["src/app/core/services/collection.service.ts:12",{"_index":1157,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:18",{"_index":1164,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:34",{"_index":1163,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:39",{"_index":1159,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:43",{"_index":1179,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:47",{"_index":1161,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:57",{"_index":1175,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:68",{"_index":1166,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:80",{"_index":1172,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/collection.service.ts:92",{"_index":1177,"title":{},"body":{"injectables/CollectionService.html":{}}}],["src/app/core/services/learning",{"_index":1366,"title":{},"body":{"injectables/LearningSessionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/navigation.service.ts",{"_index":1507,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/navigation.service.ts:11",{"_index":1520,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:12",{"_index":1523,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:13",{"_index":1521,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:14",{"_index":1513,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:18",{"_index":1519,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:22",{"_index":1515,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/navigation.service.ts:26",{"_index":1517,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/core/services/settings.service.ts",{"_index":2033,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/settings.service.ts:11",{"_index":2043,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/settings.service.ts:12",{"_index":2042,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/settings.service.ts:14",{"_index":2036,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/settings.service.ts:20",{"_index":2038,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/settings.service.ts:24",{"_index":2037,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/settings.service.ts:36",{"_index":2040,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/core/services/statistics.service.ts",{"_index":2094,"title":{},"body":{"injectables/StatisticsService.html":{},"coverage.html":{}}}],["src/app/core/services/statistics.service.ts:10",{"_index":2097,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/core/services/statistics.service.ts:19",{"_index":2099,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/core/services/statistics.service.ts:33",{"_index":2101,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["src/app/core/types.ts",{"_index":2423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/utils/file.utils.ts",{"_index":2294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/form.utils.ts",{"_index":2295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/utils/general.utils.ts",{"_index":2296,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/collection/card",{"_index":574,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"coverage.html":{}}}],["src/app/pages/collection/collection",{"_index":906,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["src/app/pages/learn/learn",{"_index":1356,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["src/app/pages/learn/session",{"_index":1829,"title":{},"body":{"components/SessionLauncherComponent.html":{},"coverage.html":{}}}],["src/app/pages/learn/session/session",{"_index":1443,"title":{},"body":{"interfaces/MatchingCard.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/learn/session/session.component.ts",{"_index":1645,"title":{},"body":{"components/SessionComponent.html":{},"coverage.html":{}}}],["src/app/pages/learn/session/session.component.ts:22",{"_index":1665,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:23",{"_index":1663,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:24",{"_index":1662,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:25",{"_index":1664,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:26",{"_index":1666,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:28",{"_index":1657,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:59",{"_index":1658,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:77",{"_index":1659,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/learn/session/session.component.ts:82",{"_index":1661,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/pages/settings/settings.component.ts",{"_index":1943,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.component.ts:28",{"_index":1972,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:29",{"_index":1967,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:39",{"_index":1971,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:40",{"_index":1973,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:41",{"_index":1968,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:42",{"_index":1960,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:43",{"_index":1954,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:52",{"_index":1957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:82",{"_index":1955,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:88",{"_index":1956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2025,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/pages/shared/components/card",{"_index":535,"title":{},"body":{"components/CardDifficultyComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":1262,"title":{},"body":{"classes/Database.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":2306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["stage",{"_index":880,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["standalone",{"_index":296,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressIndicatorComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["standard",{"_index":2191,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["start",{"_index":2056,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/TabBarService.html":{}}}],["started",{"_index":2359,"title":{"index.html":{}},"body":{}}],["statements",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":453,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"injectables/NavigationService.html":{}}}],["statistic",{"_index":1880,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["statistics",{"_index":451,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/SessionLauncherComponent.html":{}}}],["statistics.model",{"_index":476,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["statisticsservice",{"_index":1835,"title":{"injectables/StatisticsService.html":{}},"body":{"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{},"coverage.html":{}}}],["stats",{"_index":472,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["stats.known",{"_index":490,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["stats.tolearn",{"_index":489,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["stats.toreview",{"_index":491,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["stay",{"_index":1604,"title":{},"body":{"classes/SessionCard.html":{}}}],["step",{"_index":738,"title":{},"body":{"components/CardProgressBarComponent.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["step'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["step.component",{"_index":1363,"title":{},"body":{"modules/LearnPageModule.html":{}}}],["step.component.html",{"_index":1447,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["step.component.scss",{"_index":1448,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts",{"_index":1444,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"coverage.html":{}}}],["step.component.ts:108",{"_index":1734,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:116",{"_index":1727,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:132",{"_index":1733,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:17",{"_index":1888,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:18",{"_index":1889,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:19",{"_index":1890,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:21",{"_index":1900,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:22",{"_index":1899,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:23",{"_index":1901,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:24",{"_index":1902,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:25",{"_index":1725,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:26",{"_index":1726,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:28",{"_index":1744,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:34",{"_index":1895,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:35",{"_index":1748,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:36",{"_index":1747,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:37",{"_index":1737,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:38",{"_index":1736,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:39",{"_index":1746,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:40",{"_index":1745,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:41",{"_index":1735,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:42",{"_index":1724,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:47",{"_index":1898,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:54",{"_index":1731,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:55",{"_index":1893,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:64",{"_index":1728,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:68",{"_index":1729,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:77",{"_index":1891,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:89",{"_index":1732,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step.component.ts:91",{"_index":1892,"title":{},"body":{"components/SessionMatchingStepComponent.html":{}}}],["step.component.ts:95",{"_index":1730,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["step/session",{"_index":1362,"title":{},"body":{"modules/LearnPageModule.html":{},"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{},"coverage.html":{}}}],["steps",{"_index":719,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["sticky",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["stop",{"_index":1686,"title":{},"body":{"components/SessionComponent.html":{}}}],["stored",{"_index":2379,"title":{},"body":{"index.html":{}}}],["stores(schema",{"_index":1270,"title":{},"body":{"classes/Database.html":{}}}],["str1",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str1.tolowercase().trim",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str2",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str2.tolowercase().trim",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stroke",{"_index":769,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["style",{"_index":2067,"title":{},"body":{"components/SidenavComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["subject",{"_index":956,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["submittext",{"_index":2158,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["subscribe",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"directives/LongPressDirective.html":{},"miscellaneous/variables.html":{}}}],["subscribe(async",{"_index":868,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["subscription",{"_index":1414,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["subtitle",{"_index":526,"title":{},"body":{"components/CardComponent.html":{},"components/CardProgressIndicatorComponent.html":{}}}],["success",{"_index":1740,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["successfully",{"_index":2004,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["super(\"chinese",{"_index":1268,"title":{},"body":{"classes/Database.html":{}}}],["support",{"_index":2398,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":1642,"title":{},"body":{"classes/SessionCard.html":{}}}],["switchmap",{"_index":1419,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["switchmap((ispressing",{"_index":1435,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["swupdate",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["swupdate.checkforupdate",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swupdate.versionupdates.subscribe((event",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1323,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["syncwithcloud",{"_index":1313,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["sān",{"_index":1305,"title":{},"body":{"classes/Database.html":{}}}],["t",{"_index":1237,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/SlideToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tab.label",{"_index":2117,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabbar.tabs",{"_index":2115,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabbar.type",{"_index":2113,"title":{},"body":{"components/TabBarComponent.html":{}}}],["tabbaractions",{"_index":920,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["tabbarcomponent",{"_index":173,"title":{"components/TabBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabbarservice",{"_index":933,"title":{"injectables/TabBarService.html":{}},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"coverage.html":{}}}],["tabbarservice.setactions",{"_index":1682,"title":{},"body":{"components/SessionComponent.html":{}}}],["tabbarservice.tabs.asobservable().subscribe((tabbar",{"_index":2112,"title":{},"body":{"components/TabBarComponent.html":{}}}],["table",{"_index":1057,"title":{},"body":{"components/CollectionCardsComponent.html":{},"classes/Database.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2122,"title":{},"body":{"injectables/TabBarService.html":{}}}],["tabtype",{"_index":2137,"title":{},"body":{"injectables/TabBarService.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["test",{"_index":2385,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2393,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2384,"title":{},"body":{"index.html":{}}}],["text",{"_index":365,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["texts",{"_index":586,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["texts.save",{"_index":688,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["texts.title",{"_index":675,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionEditorComponent.html":{}}}],["theme",{"_index":1916,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["theme_storage_key",{"_index":2044,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["then((collections",{"_index":1107,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["then((refreshedcollection",{"_index":1039,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["then((settings",{"_index":997,"title":{},"body":{"components/CollectionCardsComponent.html":{},"injectables/LearningSessionService.html":{},"components/SessionFillingStepComponent.html":{}}}],["this.actions",{"_index":2114,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.addsvgicon(\"face",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.allcollectionstats",{"_index":1862,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.allcollectionstats.numbers",{"_index":1865,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.allcollectionstats.percents",{"_index":1866,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.buildsessioncards",{"_index":1762,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.card",{"_index":863,"title":{},"body":{"components/CardViewerComponent.html":{},"classes/SessionCard.html":{}}}],["this.card.characters",{"_index":1630,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.clone",{"_index":872,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.card.difficulty",{"_index":1636,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.id",{"_index":1628,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.lastsession",{"_index":1641,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.leitnerbox",{"_index":729,"title":{},"body":{"components/CardProgressBarComponent.html":{},"classes/SessionCard.html":{}}}],["this.card.movenextbox",{"_index":1638,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.movepreviousbox",{"_index":1640,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.nextreviewindays",{"_index":1631,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.card.pinyin",{"_index":1629,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.cardcollections.add",{"_index":1281,"title":{},"body":{"classes/Database.html":{}}}],["this.cardduplicate",{"_index":673,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.cardrevealed",{"_index":1775,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.cards",{"_index":483,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["this.cards.bulkadd",{"_index":1283,"title":{},"body":{"classes/Database.html":{}}}],["this.cards.foreach((card",{"_index":1759,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.cardselectiontype",{"_index":1942,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.cardservice.createcard(card",{"_index":660,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.cardservice.deletecard(this.card",{"_index":870,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.cardservice.findcard",{"_index":674,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.cardservice.getcard(this.card.id",{"_index":869,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.cardservice.updatecard(card",{"_index":661,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.cardservice.updatecard(updatedcard",{"_index":874,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.cardservice.updatecards(toupdate",{"_index":1701,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.characterinput",{"_index":1780,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.characterinput?.trim",{"_index":1770,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.circletitle",{"_index":765,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["this.coerceall([\"calltoaction",{"_index":338,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.coerceall([\"noheader",{"_index":511,"title":{},"body":{"components/CardComponent.html":{}}}],["this.coerced[field",{"_index":904,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["this.coercefield(fieldname",{"_index":900,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["this.collection",{"_index":1013,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.collectionid",{"_index":642,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.collections",{"_index":1108,"title":{},"body":{"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["this.collections.foreach((collection",{"_index":1855,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.collections.unshift",{"_index":1864,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.collectionservice",{"_index":1037,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"injectables/LearningSessionService.html":{},"injectables/StatisticsService.html":{}}}],["this.collectionservice.createcollection(collection",{"_index":1081,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.collectionservice.deletecollection(this.collectionid",{"_index":1083,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.collectionservice.getcollection(this.collectionid).then((collection",{"_index":1012,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.collectionservice.getcollections().then(async",{"_index":1852,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.collectionservice.getknowncardrequest(collectionid).count",{"_index":2103,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["this.collectionservice.updatecollection(collection",{"_index":1080,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.completed.emit",{"_index":1480,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.completed.emit([...this.sessioncards.values",{"_index":1783,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.computeoffsetx(positionincolumn",{"_index":2224,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.creationmode",{"_index":637,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.currentcard",{"_index":1767,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.characters",{"_index":1768,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.characters.trim",{"_index":1769,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.currentrepetitions",{"_index":1777,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.id",{"_index":1804,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.mistakes",{"_index":1784,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.numberofrepetitions",{"_index":1800,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.pinyin",{"_index":1771,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard.pinyin.trim",{"_index":1772,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard?.changedifficulty(difficulty",{"_index":1764,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentcard?.id",{"_index":1803,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.currentrepetitions",{"_index":1632,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.darkmodeactive$.asobservable",{"_index":2045,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.darkmodeactive$.next(settings.isdarkmodeactive",{"_index":2052,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.database",{"_index":805,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"injectables/SettingsService.html":{},"injectables/StatisticsService.html":{}}}],["this.database.cardcollections",{"_index":1184,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.cardcollections.add(collection",{"_index":1195,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.cardcollections.delete(collection",{"_index":1197,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.cardcollections.get(id",{"_index":1193,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.cardcollections.put(collection",{"_index":1196,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.cardcollections.toarray",{"_index":1325,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.database.cards",{"_index":825,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{}}}],["this.database.cards.add(card",{"_index":809,"title":{},"body":{"injectables/CardService.html":{}}}],["this.database.cards.bulkput(cards",{"_index":822,"title":{},"body":{"injectables/CardService.html":{}}}],["this.database.cards.delete(cardid",{"_index":824,"title":{},"body":{"injectables/CardService.html":{}}}],["this.database.cards.get(id",{"_index":834,"title":{},"body":{"injectables/CardService.html":{}}}],["this.database.cards.put(card",{"_index":812,"title":{},"body":{"injectables/CardService.html":{}}}],["this.database.cards.toarray",{"_index":1326,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.database.cards.where(request",{"_index":1198,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.database.deleteandrebuild",{"_index":1335,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.database.open",{"_index":1321,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.database.settings.add(new",{"_index":2049,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.database.settings.put(settings",{"_index":2058,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.database.settings.toarray().then(async",{"_index":2046,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.database.settings.tocollection().first",{"_index":1327,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.databaseservice",{"_index":2001,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.databaseservice.exportasfile",{"_index":2005,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.datasource.data",{"_index":1015,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.datasource.filter",{"_index":1003,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1017,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.datasource.paginator",{"_index":1006,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.datasource.sort",{"_index":1004,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":1026,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.delete",{"_index":1275,"title":{},"body":{"classes/Database.html":{}}}],["this.description",{"_index":481,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["this.dialog",{"_index":865,"title":{},"body":{"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"components/SessionComponent.html":{}}}],["this.dialogref.close",{"_index":665,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.difficulty",{"_index":440,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(\"../assets/icons",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawer?.close",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.enablereviewmatching",{"_index":1936,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.events",{"_index":1433,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.events$.unsubscribe",{"_index":1441,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.fieldvalue",{"_index":1567,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.fieldvalue.length",{"_index":1565,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.fieldvalue.substring(0",{"_index":1564,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.fieldvalue?.length",{"_index":1563,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.filter",{"_index":1001,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.filter$.next(null",{"_index":1011,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.form.markallastouched",{"_index":1082,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.form.patchvalue",{"_index":633,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.patchvalue(data.collection",{"_index":1078,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.form.reset",{"_index":664,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.form.value",{"_index":648,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.form.value.cardselectiontype",{"_index":1999,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.darktheme",{"_index":1992,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.enablereviewmatching",{"_index":1993,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.learnpinyin",{"_index":1994,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.leitnerboxes",{"_index":1997,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.pagesize",{"_index":1996,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.resetcardprogress",{"_index":1998,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.value.wordspersession",{"_index":1995,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.valuechanges.subscribe",{"_index":1991,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.form.valuechanges.subscribe((formvalues",{"_index":666,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.form.valuechanges.subscribe(async",{"_index":671,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.getcard(card.id",{"_index":813,"title":{},"body":{"injectables/CardService.html":{}}}],["this.getcard(newcardid",{"_index":810,"title":{},"body":{"injectables/CardService.html":{}}}],["this.getcollectionreviewstats(collection.id",{"_index":2107,"title":{},"body":{"injectables/StatisticsService.html":{}}}],["this.getdefaultrepetitions",{"_index":1644,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.getnumberofrepetitions",{"_index":1635,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.getwordspersession",{"_index":1389,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["this.iconregistry.addsvgicon",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.id",{"_index":477,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.initializedatasource",{"_index":1000,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.invalidsession",{"_index":1675,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.isdarkmode",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.iseditactive",{"_index":864,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.isfillingstep",{"_index":1681,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.ismatchingstep",{"_index":1678,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.ismistake",{"_index":1774,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.isresetconfirm",{"_index":875,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["this.issessiondone",{"_index":1683,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.isunknown",{"_index":431,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["this.keepeditoropen",{"_index":663,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.label",{"_index":479,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["this.lastsession",{"_index":430,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["this.learningsessionservice.createlearningsession",{"_index":1868,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.learningsessionservice.createreviewsession",{"_index":1872,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.learningsessionservice.currentsession.next(cardstolearn",{"_index":1869,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.learningsessionservice.currentsession.next(cardstoreview",{"_index":1873,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.learnnewpage",{"_index":1460,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.learnpinyin",{"_index":1752,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.leftcolumncards",{"_index":1476,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.leitnerbox",{"_index":429,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["this.leitnerboxes",{"_index":1940,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.loadcollectioncards",{"_index":992,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.loadcollectioncards(cardcollection",{"_index":1194,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.loadcollectioncards(collection",{"_index":1189,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.loadcollections",{"_index":1102,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["this.longpress.emit",{"_index":1440,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["this.matchingpages.length",{"_index":1473,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.matchingpages.splice(0",{"_index":1474,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.mistakes",{"_index":1634,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.navbartext",{"_index":1497,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.navbartext.next(text",{"_index":1528,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.navbartype",{"_index":1495,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.navbartype.next(type",{"_index":1527,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.navbarvisible",{"_index":1499,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.navigationservice.navbarvisible.next(false",{"_index":993,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.navigationservice.navbarvisible.next(true",{"_index":1008,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.navigationservice.resetnavbartext",{"_index":1103,"title":{},"body":{"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["this.navigationservice.setnavbartext(\"session",{"_index":1704,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.navigationservice.settitle(\"manage",{"_index":1014,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{}}}],["this.navigationservice.settitle(\"settings",{"_index":1982,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.navigationservice.settitle(\"start",{"_index":1850,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.nextcard",{"_index":1763,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.nextreview",{"_index":437,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{}}}],["this.numberofrepetitions",{"_index":1633,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.on(\"populate",{"_index":1273,"title":{},"body":{"classes/Database.html":{}}}],["this.open",{"_index":1277,"title":{},"body":{"classes/Database.html":{}}}],["this.opencardeditor",{"_index":975,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.opencategoryeditor",{"_index":973,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.originalcard",{"_index":638,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.originalcard?.characters",{"_index":668,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.originalcard?.id",{"_index":653,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.originalcard?.lastsession",{"_index":655,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.originalcard?.leitnerbox",{"_index":654,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.originalcard?.pinyin",{"_index":670,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.pagesize",{"_index":998,"title":{},"body":{"components/CollectionCardsComponent.html":{},"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.paginator",{"_index":1007,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.percentstatistics",{"_index":487,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["this.pinyininput",{"_index":1781,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.pinyininput?.trim",{"_index":1773,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.populate",{"_index":1274,"title":{},"body":{"classes/Database.html":{}}}],["this.propagatechange",{"_index":1250,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["this.propagatechange(newvalue",{"_index":1568,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.propagatechange(this.value",{"_index":1251,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["this.registericons",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.resetcardprogress",{"_index":1941,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.resetrequired",{"_index":656,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.rightcolumncards",{"_index":1478,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["this.roottabs",{"_index":2135,"title":{},"body":{"injectables/TabBarService.html":{}}}],["this.route.params.subscribe((params",{"_index":990,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.router.navigatebyurl(\"/collections",{"_index":1084,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.router.navigatebyurl(\"/sessions",{"_index":1703,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.router.navigatebyurl(\"/sessions/active",{"_index":1870,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.routes",{"_index":2116,"title":{},"body":{"components/TabBarComponent.html":{}}}],["this.searchactive",{"_index":1010,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.session",{"_index":1793,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.concat",{"_index":1805,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.filter",{"_index":1802,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.filter((card",{"_index":1808,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.push(...shufflearray(uniquecards",{"_index":1797,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.push(this.currentcard.id",{"_index":1788,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.session.shift",{"_index":1779,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.sessioncards",{"_index":1672,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.sessioncards.foreach((sessioncard",{"_index":1790,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.sessioncards.get(nextcard",{"_index":1782,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.sessioncards.length",{"_index":1674,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.sessioncards.set(sessioncard.id",{"_index":1761,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.sessionprogress",{"_index":1637,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.sessionresulticon",{"_index":1639,"title":{},"body":{"classes/SessionCard.html":{}}}],["this.sessionresults",{"_index":1696,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.sessiontype.getvalue",{"_index":1401,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["this.sessiontype.next(\"learn",{"_index":1391,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["this.sessiontype.next(\"review",{"_index":1398,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["this.setnavbartext(navigationservice.app_name",{"_index":1526,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.setroutes(this.roottabs",{"_index":2140,"title":{},"body":{"injectables/TabBarService.html":{}}}],["this.settings",{"_index":1851,"title":{},"body":{"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.cardselectiontype",{"_index":1990,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.enablereviewmatching",{"_index":1984,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.getsettings().then((settings",{"_index":731,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["this.settings.learnpinyin",{"_index":1985,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.leitnerboxes",{"_index":1986,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.pagesize",{"_index":1987,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.resetcardprogress",{"_index":1989,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.theme",{"_index":1983,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settings.wordspersession",{"_index":1988,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settingsservice",{"_index":995,"title":{},"body":{"components/CollectionCardsComponent.html":{},"injectables/LearningSessionService.html":{}}}],["this.settingsservice.getsettings",{"_index":1392,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["this.settingsservice.getsettings().then((settings",{"_index":644,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/SessionLauncherComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.settingsservice.updatesettings(this.settings",{"_index":2000,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.snackbar.open(\"database",{"_index":2002,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["this.sort",{"_index":1005,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.statistics",{"_index":486,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["this.statisticsservice.getcollectionsreviewstats",{"_index":1853,"title":{},"body":{"components/SessionLauncherComponent.html":{}}}],["this.steps",{"_index":732,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["this.steps.length",{"_index":730,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["this.subtitle",{"_index":766,"title":{},"body":{"components/CardProgressIndicatorComponent.html":{}}}],["this.tabbarservice.resettabbar",{"_index":1104,"title":{},"body":{"components/CollectionListComponent.html":{},"components/SessionLauncherComponent.html":{}}}],["this.tabbarservice.setactions",{"_index":1702,"title":{},"body":{"components/SessionComponent.html":{}}}],["this.tabbarservice.setactions(this.tabbaractions",{"_index":994,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["this.tabs.next",{"_index":2141,"title":{},"body":{"injectables/TabBarService.html":{}}}],["this.texts",{"_index":639,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["this.theme",{"_index":1938,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.titleservice.settitle(navigationservice.app_name",{"_index":1525,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.tonekeys",{"_index":2229,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.toneoverlayoffsetx",{"_index":2223,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.toneoverlayopen",{"_index":2221,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.toneoverlayorigin",{"_index":2225,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.trackchanges",{"_index":647,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.trackduplicates",{"_index":645,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["this.typed.emit(this.uppercaseenabled",{"_index":2218,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.updatesessioncards",{"_index":1778,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["this.updatevalue((this.fieldvalue",{"_index":1562,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.updatevalue(newvalue",{"_index":1566,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["this.uppercaseenabled",{"_index":2220,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["this.value",{"_index":1249,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{}}}],["this.version(environment.dbversion",{"_index":1269,"title":{},"body":{"classes/Database.html":{}}}],["this.version(environment.dbversion).stores(schema",{"_index":1276,"title":{},"body":{"classes/Database.html":{}}}],["this.wordspersession",{"_index":1937,"title":{},"body":{"classes/Settings.html":{},"interfaces/SettingsModel.html":{}}}],["this.wronganswer",{"_index":1776,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["three",{"_index":1304,"title":{},"body":{"classes/Database.html":{}}}],["throw",{"_index":820,"title":{},"body":{"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{}}}],["time",{"_index":1787,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["timer",{"_index":1420,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["timer(this.pressduration",{"_index":1437,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["times",{"_index":2343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["title",{"_index":356,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/SessionComponent.html":{},"components/SettingsComponent.html":{}}}],["titleservice",{"_index":1514,"title":{},"body":{"injectables/NavigationService.html":{}}}],["toarray",{"_index":1390,"title":{},"body":{"injectables/LearningSessionService.html":{}}}],["toarray((cards",{"_index":1204,"title":{},"body":{"injectables/CollectionService.html":{}}}],["toarray((collections",{"_index":1186,"title":{},"body":{"injectables/CollectionService.html":{}}}],["tocollection",{"_index":1202,"title":{},"body":{"injectables/CollectionService.html":{}}}],["todo",{"_index":1322,"title":{},"body":{"injectables/DatabaseService.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["toggle",{"_index":690,"title":{},"body":{"components/CardEditorComponent.html":{},"modules/CollectionPageModule.html":{},"modules/SettingsModule.html":{},"components/SlideToggleComponent.html":{}}}],["toggle'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["toggle.component",{"_index":2031,"title":{},"body":{"modules/SettingsModule.html":{}}}],["toggle.component.html",{"_index":2074,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["toggle.component.scss",{"_index":2073,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["toggle.component.ts",{"_index":2072,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["toggle/slide",{"_index":2030,"title":{},"body":{"modules/SettingsModule.html":{},"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["togglesearch",{"_index":929,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["tolearn",{"_index":492,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"interfaces/CollectionStats.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{}}}],["tolowercase",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":2181,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["tone_key_width_px",{"_index":2214,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tonekeys",{"_index":2148,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["tonekeysize",{"_index":2259,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["toneletter.tolowercase",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toneoverlayoffsetx",{"_index":2149,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["toneoverlayoffsety",{"_index":2150,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["toneoverlayopen",{"_index":2151,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["toneoverlayorigin",{"_index":2152,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["tones",{"_index":2213,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tones.map((toneletter",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tones[letter.touppercase",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooptional",{"_index":628,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tooptional(chinese",{"_index":652,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["tooptional(description",{"_index":1079,"title":{},"body":{"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["tooptional(pinyin",{"_index":651,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["tooptional(value",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["top",{"_index":517,"title":{},"body":{"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["toremove",{"_index":2335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toreview",{"_index":494,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"interfaces/CollectionStats.html":{},"components/SessionLauncherComponent.html":{},"injectables/StatisticsService.html":{}}}],["tosplit",{"_index":1466,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["tosplit.length",{"_index":1468,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{}}}],["totalcards",{"_index":468,"title":{},"body":{"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{}}}],["touch",{"_index":2245,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["touchend",{"_index":1431,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["touchend\").pipe",{"_index":1432,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["touchstart",{"_index":1429,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["touchstart\").pipe",{"_index":1430,"title":{},"body":{"directives/LongPressDirective.html":{}}}],["toupdate",{"_index":1697,"title":{},"body":{"components/SessionComponent.html":{}}}],["toupdate.push(sessioncard.card",{"_index":1700,"title":{},"body":{"components/SessionComponent.html":{}}}],["track",{"_index":740,"title":{},"body":{"components/CardProgressBarComponent.html":{}}}],["trackchanges",{"_index":590,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["trackduplicates",{"_index":591,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{}}}],["transcription",{"_index":1758,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["transform",{"_index":366,"title":{},"body":{"components/ButtonComponent.html":{},"pipes/CardMeaningsPipe.html":{},"pipes/JoinPipe.html":{}}}],["transform(meanings",{"_index":707,"title":{},"body":{"pipes/CardMeaningsPipe.html":{}}}],["transform(values",{"_index":1348,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["translate",{"_index":1756,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["translation",{"_index":1458,"title":{},"body":{"interfaces/MatchingCard.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionMatchingStepComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["true",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":329,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"classes/CoercionComponent.html":{},"injectables/CollectionService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["tslib",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1302,"title":{},"body":{"classes/Database.html":{},"interfaces/MatchingCard.html":{},"components/SessionMatchingStepComponent.html":{},"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"pipes/CardMeaningsPipe.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"injectables/CardService.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"interfaces/CollectionStats.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogConfig.html":{},"classes/ControlValueAccessorComponent.html":{},"classes/Database.html":{},"components/InlineConfirmDialogComponent.html":{},"pipes/JoinPipe.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"interfaces/PendingChangesComponent.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/StatisticsService.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2408,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2159,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["typeof",{"_index":817,"title":{},"body":{"injectables/CardService.html":{},"components/CollectionCardsComponent.html":{}}}],["types",{"_index":897,"title":{},"body":{"classes/CoercionComponent.html":{}}}],["typings",{"_index":1978,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["u",{"_index":2231,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["ubuntu",{"_index":1066,"title":{},"body":{"components/CollectionCardsComponent.html":{},"components/PinyinFormFieldComponent.html":{}}}],["undefined",{"_index":408,"title":{},"body":{"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"injectables/CardService.html":{},"classes/CoercionComponent.html":{},"injectables/CollectionService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["unhandled",{"_index":1034,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["uniquecards",{"_index":1795,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["uniquevalues",{"_index":1751,"title":{},"body":{"components/SessionFillingStepComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uniquevalues(allcards",{"_index":1796,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["uniquevalues(arr",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":2383,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":816,"title":{},"body":{"injectables/CardService.html":{},"injectables/CollectionService.html":{},"pipes/JoinPipe.html":{}}}],["unnecessary",{"_index":1977,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["up",{"_index":1626,"title":{},"body":{"classes/SessionCard.html":{},"components/SessionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":641,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"injectables/CardService.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["updatecard",{"_index":781,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecard(card",{"_index":795,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecards",{"_index":782,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecards(cards",{"_index":797,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecollection",{"_index":1156,"title":{},"body":{"injectables/CollectionService.html":{}}}],["updatecollection(collection",{"_index":1178,"title":{},"body":{"injectables/CollectionService.html":{}}}],["updated",{"_index":2011,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updatedcard",{"_index":871,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["updatedcard.reset",{"_index":873,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["updates",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["updates.ts",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatesessioncards",{"_index":1721,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["updatesettings",{"_index":2035,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettings(settings",{"_index":2039,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatevalue",{"_index":1233,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["updatevalue(newvalue",{"_index":1243,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["upgrade(upgrades[environment.dbversion",{"_index":1271,"title":{},"body":{"classes/Database.html":{}}}],["upgrades",{"_index":1265,"title":{},"body":{"classes/Database.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upgrades.ts",{"_index":2286,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upper",{"_index":2227,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["uppercase",{"_index":367,"title":{},"body":{"components/ButtonComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["uppercaseenabled",{"_index":2153,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["use",{"_index":1692,"title":{},"body":{"components/SessionComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"index.html":{}}}],["used",{"_index":2190,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["useexisting",{"_index":1537,"title":{},"body":{"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["usefactory",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":2247,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["using",{"_index":419,"title":{},"body":{"classes/Card.html":{},"interfaces/CardModel.html":{},"miscellaneous/variables.html":{}}}],["utils/file.utils",{"_index":1319,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["v",{"_index":2068,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":2256,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["validators",{"_index":623,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["validators.required",{"_index":608,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/CollectionEditorComponent.html":{},"interfaces/CollectionForm.html":{}}}],["value",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"classes/ControlValueAccessorComponent.html":{},"injectables/DatabaseService.html":{},"components/InlineConfirmDialogComponent.html":{},"injectables/LearningSessionService.html":{},"directives/LongPressDirective.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1351,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["values.join(delimiter",{"_index":1352,"title":{},"body":{"pipes/JoinPipe.html":{}}}],["var",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["variable",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2424,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variations",{"_index":2232,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["varrmcault/ngx",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"dependencies.html":{}}}],["version",{"_index":2015,"title":{},"body":{"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version_ready",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verticalposition",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2387,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["viewchild(matdrawer",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matpaginator",{"_index":966,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["viewchild(matsort",{"_index":970,"title":{},"body":{"components/CollectionCardsComponent.html":{}}}],["viewer",{"_index":838,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["viewer.component",{"_index":988,"title":{},"body":{"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{}}}],["viewer.component.html",{"_index":840,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.scss",{"_index":839,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts",{"_index":837,"title":{},"body":{"components/CardViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:19",{"_index":858,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":851,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:26",{"_index":859,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:27",{"_index":861,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:28",{"_index":860,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:30",{"_index":847,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:34",{"_index":852,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:42",{"_index":849,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":848,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer.component.ts:63",{"_index":850,"title":{},"body":{"components/CardViewerComponent.html":{}}}],["viewer/card",{"_index":714,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"modules/CollectionPageModule.html":{},"coverage.html":{}}}],["virtual",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["virtualkeyboardcomponent",{"_index":174,"title":{"components/VirtualKeyboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/SlideToggleComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["virtualkeyboardopen",{"_index":587,"title":{},"body":{"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"components/PinyinFormFieldComponent.html":{}}}],["void",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/Card.html":{},"classes/CardCollection.html":{},"interfaces/CardCollectionModel.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"interfaces/CardForm.html":{},"interfaces/CardModel.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"classes/ControlValueAccessorComponent.html":{},"injectables/DatabaseService.html":{},"directives/LongPressDirective.html":{},"interfaces/MatchingCard.html":{},"injectables/NavigationService.html":{},"components/PinyinFormFieldComponent.html":{},"classes/SessionCard.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SessionLauncherComponent.html":{},"components/SessionMatchingStepComponent.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"injectables/SettingsService.html":{},"components/SlideToggleComponent.html":{},"injectables/TabBarService.html":{},"components/VirtualKeyboardComponent.html":{}}}],["w",{"_index":1309,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":692,"title":{},"body":{"components/CardEditorComponent.html":{}}}],["webkit",{"_index":2244,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["weight",{"_index":350,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{}}}],["whichever",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":343,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardViewerComponent.html":{},"components/TabBarComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["width",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CardDifficultyComponent.html":{},"components/CardEditorComponent.html":{},"components/CardProgressBarComponent.html":{},"components/CardProgressIndicatorComponent.html":{},"components/CardViewerComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionEditorComponent.html":{},"components/NavbarComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionFillingStepComponent.html":{},"components/SettingsComponent.html":{},"components/SlideToggleComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["window.location.reload",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":2339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["words",{"_index":2006,"title":{},"body":{"components/SettingsComponent.html":{}}}],["wordsoptions",{"_index":1950,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{}}}],["wordspersession",{"_index":1917,"title":{},"body":{"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/SettingsForm.html":{},"interfaces/SettingsModel.html":{}}}],["worker",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["wrap",{"_index":1346,"title":{},"body":{"components/InlineConfirmDialogComponent.html":{},"components/SettingsComponent.html":{},"components/VirtualKeyboardComponent.html":{}}}],["wrapper",{"_index":694,"title":{},"body":{"components/CardEditorComponent.html":{},"components/CollectionCardsComponent.html":{}}}],["write",{"_index":2189,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["writecharacter",{"_index":2156,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["writecharacter(character",{"_index":2186,"title":{},"body":{"components/VirtualKeyboardComponent.html":{}}}],["writepinyincharacter",{"_index":1543,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["writepinyincharacter(character",{"_index":1550,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["writevalue",{"_index":1234,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/PinyinFormFieldComponent.html":{},"components/SlideToggleComponent.html":{}}}],["writevalue(newvalue",{"_index":1552,"title":{},"body":{"components/PinyinFormFieldComponent.html":{}}}],["writevalue(value",{"_index":1246,"title":{},"body":{"classes/ControlValueAccessorComponent.html":{},"components/SlideToggleComponent.html":{}}}],["wronganswer",{"_index":1722,"title":{},"body":{"components/SessionFillingStepComponent.html":{}}}],["x",{"_index":748,"title":{},"body":{"components/CardProgressBarComponent.html":{},"components/CollectionCardsComponent.html":{},"components/InlineConfirmDialogComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1299,"title":{},"body":{"classes/Database.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":330,"title":{},"body":{"components/ButtonComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CoercionComponent.html":{},"components/CollectionCardsComponent.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"injectables/LearningSessionService.html":{},"components/PinyinFormFieldComponent.html":{},"components/SessionComponent.html":{},"components/SessionLauncherComponent.html":{},"classes/Settings.html":{},"components/SlideToggleComponent.html":{}}}],["yáng",{"_index":1290,"title":{},"body":{"classes/Database.html":{}}}],["z",{"_index":2239,"title":{},"body":{"components/VirtualKeyboardComponent.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectionPageModule.html":{},"modules/LearnPageModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                drawer\n                            \n                            \n                                    Public\n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addSvgIcon\n                            \n                            \n                                    Private\n                                registerIcons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addSvgIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSvgIcon(name: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIcons\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIcons()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        drawer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDrawer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatDrawer)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from \"@angular/core\";\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { MatDrawer } from \"@angular/material/sidenav\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\nimport { SettingsService } from \"./core/services/settings.service\";\n\n@Component({\n  selector: \"chf-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  @ViewChild(MatDrawer) drawer?: MatDrawer;\n\n  public isDarkMode = true;\n\n  constructor(\n    private iconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    router: Router,\n    settingsService: SettingsService\n  ) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.drawer?.close();\n      });\n\n    settingsService.isDarkMode().subscribe((darkMode) => (this.isDarkMode = darkMode));\n\n    this.registerIcons();\n  }\n\n  private registerIcons(): void {\n    this.addSvgIcon(\"face-sob\", \"face-sad-cry-solid\");\n    this.addSvgIcon(\"face-laugh\", \"face-laugh-beam-solid\");\n    this.addSvgIcon(\"face-smile\", \"face-smile-solid\");\n  }\n\n  private addSvgIcon(name: string, icon: string): void {\n    this.iconRegistry.addSvgIcon(\n      name,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../assets/icons/\" + icon + \".svg\")\n    );\n  }\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.app-container {\n  flex: 1;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\nchf-tab-bar {\n  position: sticky;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCollectionPageModule\n\nCollectionPageModule\n\nAppModule -->\n\nCollectionPageModule->AppModule\n\n\n\n\n\nLearnPageModule\n\nLearnPageModule\n\nAppModule -->\n\nLearnPageModule->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nTabBarComponent\n\nTabBarComponent\n\nAppModule -->\n\nTabBarComponent->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CollectionPageModule\n                        \n                        \n                            LearnPageModule\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            TabBarComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_INITIALIZER, isDevMode, NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ServiceWorkerModule, SwUpdate } from \"@angular/service-worker\";\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { checkForUpdates } from \"@core/pwa-updates\";\nimport {\n  NgxFormControlMessages,\n  NgxFormControlMessagesModule,\n} from \"@varrmcault/ngx-form-control-messages\";\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { TabBarComponent } from \"./components/tab-bar/tab-bar.component\";\nimport { CollectionPageModule } from \"./pages/collection/collection-page.module\";\nimport { LearnPageModule } from \"./pages/learn/learn-page.module\";\nimport { SettingsModule } from \"./pages/settings/settings.module\";\n\nconst defaultErrorMessages: NgxFormControlMessages = {\n  required: \"Field required\",\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CollectionPageModule,\n    HttpClientModule,\n    LearnPageModule,\n    NavbarComponent,\n    NgCircleProgressModule.forRoot(),\n    NgxFormControlMessagesModule.forRoot(defaultErrorMessages),\n    ServiceWorkerModule.register(\"ngsw-worker.js\", {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: \"registerWhenStable:30000\",\n    }),\n    SettingsModule,\n    TabBarComponent,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: checkForUpdates,\n      multi: true,\n      deps: [SwUpdate, MatSnackBar],\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { PendingChangesGuard } from \"@core/guards/pending-changes.guard\";\nimport { CollectionCardsComponent } from \"./pages/collection/collection-cards/collection-cards.component\";\nimport { CollectionListComponent } from \"./pages/collection/collection-list/collection-list.component\";\nimport { SessionLauncherComponent } from \"./pages/learn/session-launcher/session-launcher.component\";\nimport { SessionComponent } from \"./pages/learn/session/session.component\";\nimport { SettingsComponent } from \"./pages/settings/settings.component\";\n\nconst routes: Routes = [\n  {\n    path: \"sessions\",\n    component: SessionLauncherComponent,\n  },\n  {\n    path: \"sessions/active\",\n    component: SessionComponent,\n    canDeactivate: [PendingChangesGuard],\n  },\n  {\n    path: \"collections\",\n    component: CollectionListComponent,\n  },\n  {\n    path: \"collections/:id\",\n    component: CollectionCardsComponent,\n  },\n  {\n    path: \"settings\",\n    component: SettingsComponent,\n  },\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/sessions\" },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/button/button.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                CoercionComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-button\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coerced\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                coerceAll\n                            \n                            \n                                    Protected\n                                coerceField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callToAction\n                            \n                            \n                                disabled\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callToAction\n                    \n                \n                \n                    \n                        Type :     BooleanInput\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/button/button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :     BooleanInput\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/button/button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         ButtonType\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/button/button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/button/button.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceAll(fields: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         CoercionComponent\n\n                \n            \n            \n                \n                        Defined in         CoercionComponent:12\n\n                \n            \n\n\n            \n                \n                    Coerces all the specified fields to booleans.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Names of the fields to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceField\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceField(field: string, value?: BooleanInput)\n                \n            \n\n\n            \n                \n                    Inherited from         CoercionComponent\n\n                \n            \n            \n                \n                        Defined in         CoercionComponent:23\n\n                \n            \n\n\n            \n                \n                    Coerces a field to a boolean. If the value is not provided, the\nmethod will try to coerce the field from its name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the field to coerce\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            BooleanInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        (optional) Value to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coerced\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Indexable\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         CoercionComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         CoercionComponent:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BooleanInput } from \"@angular/cdk/coercion\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, OnChanges } from \"@angular/core\";\nimport { CoercionComponent } from \"@core/coercion-component\";\nimport { ButtonType } from \"./button.types\";\n\n@Component({\n  selector: \"chf-button\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./button.component.html\",\n  styleUrls: [\"./button.component.scss\"],\n})\nexport class ButtonComponent extends CoercionComponent implements OnChanges {\n  @Input() type: ButtonType = \"default\";\n  @Input() callToAction?: BooleanInput;\n  @Input() disabled?: BooleanInput;\n\n  ngOnChanges(): void {\n    this.coerceAll([\"callToAction\", \"disabled\"]);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                button {\n  background-color: var(--chf-button-bg, var(--button-color));\n  color: var(--chf-button-fg, white);\n  padding: 0.7em 1em;\n  border-radius: 25px;\n  border: none;\n  font-weight: 600;\n  letter-spacing: 1px;\n  font-family: var(--font-title);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  &.disabled {\n    background-color: #646464;\n    color: #9d9d9d;\n  }\n}\n\n.cta {\n  text-transform: uppercase;\n}\n\n.default {\n  --button-color: var(--default-color);\n}\n\n.primary {\n  --button-color: var(--primary-color);\n}\n\n.error {\n  --button-color: var(--error-color);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/card.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CardModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                characters\n                            \n                            \n                                collectionId\n                            \n                            \n                                    Optional\n                                difficulty\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                lastSession\n                            \n                            \n                                leitnerBox\n                            \n                            \n                                meanings\n                            \n                            \n                                    Optional\n                                pinyin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                isKnown\n                            \n                            \n                                isUnknown\n                            \n                            \n                                moveNextBox\n                            \n                            \n                                movePreviousBox\n                            \n                            \n                                needsReview\n                            \n                            \n                                nextReview\n                            \n                            \n                                nextReviewInDays\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: CardModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/card.model.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CardModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        characters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        difficulty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardDifficultyLevel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastSession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leitnerBox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meanings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pinyin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card.model.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Card\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isKnown\n                        \n                    \n                \n            \n            \n                \nisKnown()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUnknown\n                        \n                    \n                \n            \n            \n                \nisUnknown()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveNextBox\n                        \n                    \n                \n            \n            \n                \nmoveNextBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movePreviousBox\n                        \n                    \n                \n            \n            \n                \nmovePreviousBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        needsReview\n                        \n                    \n                \n            \n            \n                \nneedsReview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextReview\n                        \n                    \n                \n            \n            \n                \nnextReview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Dayjs | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextReviewInDays\n                        \n                    \n                \n            \n            \n                \nnextReviewInDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dayjs from \"dayjs\";\nimport { Dayjs } from \"dayjs\";\n\nexport type CardDifficultyLevel = \"easy\" | \"medium\" | \"hard\";\n\nexport interface CardModel {\n  id?: number;\n  meanings: string[];\n  pinyin?: string;\n  characters?: string;\n  collectionId: number;\n  leitnerBox: number;\n  lastSession?: string;\n  difficulty?: CardDifficultyLevel;\n}\n\n/**\n * Review delay for each box from 0 to 6 (using the index of the array)\n */\nconst boxReviewDelay = [0, 0.5, 1, 2, 4, 7, 14];\n\nexport class Card implements CardModel {\n  id?: number;\n  meanings: string[] = [];\n  pinyin?: string;\n  characters?: string;\n  collectionId = 0;\n  leitnerBox = 0;\n  lastSession?: string;\n  difficulty?: CardDifficultyLevel;\n\n  constructor(data?: CardModel) {\n    if (data) {\n      Object.assign(this, data);\n    }\n  }\n\n  isUnknown(): boolean {\n    return this.leitnerBox === 0 || !this.lastSession;\n  }\n\n  nextReview(): Dayjs | undefined {\n    return this.isUnknown()\n      ? undefined\n      : dayjs(this.lastSession).add(boxReviewDelay[this.leitnerBox], \"day\");\n  }\n\n  nextReviewInDays(): number {\n    return boxReviewDelay[this.leitnerBox];\n  }\n\n  isKnown(): boolean {\n    return !this.isUnknown() && dayjs().isBefore(this.nextReview());\n  }\n\n  needsReview(): boolean {\n    const nextSession = this.nextReview();\n    return (\n      (!this.isUnknown() && dayjs().isSame(nextSession)) || dayjs().isAfter(nextSession)\n    );\n  }\n\n  moveNextBox(): void {\n    if (this.leitnerBox  0) {\n      this.leitnerBox--;\n    }\n  }\n\n  reset(): void {\n    this.leitnerBox = 0;\n    this.lastSession = undefined;\n    this.difficulty = undefined;\n  }\n\n  clone(): Card {\n    const clone = new Card(this);\n    clone.meanings = [...clone.meanings];\n    return clone;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardCollection.html":{"url":"classes/CardCollection.html","title":"class - CardCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/card-collection.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CardCollectionModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                    Optional\n                                percentStatistics\n                            \n                            \n                                    Optional\n                                statistics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCards\n                            \n                            \n                                    Private\n                                    Static\n                                cardPercentage\n                            \n                            \n                                    Static\n                                computePercentStats\n                            \n                            \n                                setStatistics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collection: CardCollectionModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/card-collection.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collection\n                                                  \n                                                        \n                                                                        CardCollectionModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        percentStatistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CollectionStats\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        statistics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CollectionStats\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/card-collection.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCards\n                        \n                    \n                \n            \n            \n                \naddCards(cards: CardModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card-collection.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                CardModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        cardPercentage\n                        \n                    \n                \n            \n            \n                \n                    \n                    cardPercentage(value: number, totalCards: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card-collection.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    totalCards\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        computePercentStats\n                        \n                    \n                \n            \n            \n                \n                    \n                    computePercentStats(stats: CollectionStats)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card-collection.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stats\n                                    \n                                                CollectionStats\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CollectionStats\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatistics\n                        \n                    \n                \n            \n            \n                \nsetStatistics(stats: CollectionStats)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/card-collection.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stats\n                                    \n                                                CollectionStats\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Card, CardModel } from \"./card.model\";\nimport { CollectionStats } from \"./statistics.model\";\n\nexport interface CardCollectionModel {\n  id?: number;\n  label: string;\n  description?: string;\n}\n\nexport class CardCollection implements CardCollectionModel {\n  id: number;\n  label: string;\n  description?: string | undefined;\n  cards: Card[];\n  statistics?: CollectionStats;\n  percentStatistics?: CollectionStats;\n\n  constructor(collection: CardCollectionModel) {\n    this.id = collection.id ?? 0;\n    this.label = collection.label;\n    this.description = collection.description;\n    this.cards = [];\n  }\n\n  addCards(cards: CardModel[]): void {\n    this.cards = cards.map((card) => new Card(card));\n  }\n\n  setStatistics(stats: CollectionStats): void {\n    this.statistics = stats;\n    this.percentStatistics = CardCollection.computePercentStats(stats);\n  }\n\n  static computePercentStats(stats: CollectionStats): CollectionStats {\n    const totalCards = stats.toLearn + stats.known + stats.toReview;\n    return {\n      toLearn: CardCollection.cardPercentage(stats.toLearn, totalCards),\n      toReview: CardCollection.cardPercentage(stats.toReview, totalCards),\n      known: CardCollection.cardPercentage(stats.known, totalCards),\n    };\n  }\n\n  private static cardPercentage(value: number, totalCards: number): number {\n    return (value * 100) / totalCards;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardCollectionModel.html":{"url":"interfaces/CardCollectionModel.html","title":"interface - CardCollectionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardCollectionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/card-collection.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Card, CardModel } from \"./card.model\";\nimport { CollectionStats } from \"./statistics.model\";\n\nexport interface CardCollectionModel {\n  id?: number;\n  label: string;\n  description?: string;\n}\n\nexport class CardCollection implements CardCollectionModel {\n  id: number;\n  label: string;\n  description?: string | undefined;\n  cards: Card[];\n  statistics?: CollectionStats;\n  percentStatistics?: CollectionStats;\n\n  constructor(collection: CardCollectionModel) {\n    this.id = collection.id ?? 0;\n    this.label = collection.label;\n    this.description = collection.description;\n    this.cards = [];\n  }\n\n  addCards(cards: CardModel[]): void {\n    this.cards = cards.map((card) => new Card(card));\n  }\n\n  setStatistics(stats: CollectionStats): void {\n    this.statistics = stats;\n    this.percentStatistics = CardCollection.computePercentStats(stats);\n  }\n\n  static computePercentStats(stats: CollectionStats): CollectionStats {\n    const totalCards = stats.toLearn + stats.known + stats.toReview;\n    return {\n      toLearn: CardCollection.cardPercentage(stats.toLearn, totalCards),\n      toReview: CardCollection.cardPercentage(stats.toReview, totalCards),\n      known: CardCollection.cardPercentage(stats.known, totalCards),\n    };\n  }\n\n  private static cardPercentage(value: number, totalCards: number): number {\n    return (value * 100) / totalCards;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/card/card.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                CoercionComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coerced\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                coerceAll\n                            \n                            \n                                    Protected\n                                coerceField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noHeader\n                            \n                            \n                                reversedCorners\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noHeader\n                    \n                \n                \n                    \n                        Type :     BooleanInput\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reversedCorners\n                    \n                \n                \n                    \n                        Type :     BooleanInput\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/card/card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/card/card.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceAll(fields: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         CoercionComponent\n\n                \n            \n            \n                \n                        Defined in         CoercionComponent:12\n\n                \n            \n\n\n            \n                \n                    Coerces all the specified fields to booleans.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Names of the fields to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceField\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceField(field: string, value?: BooleanInput)\n                \n            \n\n\n            \n                \n                    Inherited from         CoercionComponent\n\n                \n            \n            \n                \n                        Defined in         CoercionComponent:23\n\n                \n            \n\n\n            \n                \n                    Coerces a field to a boolean. If the value is not provided, the\nmethod will try to coerce the field from its name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the field to coerce\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            BooleanInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        (optional) Value to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coerced\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Indexable\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                Inherited from         CoercionComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         CoercionComponent:5\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BooleanInput } from \"@angular/cdk/coercion\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { CoercionComponent } from \"@core/coercion-component\";\n\n@Component({\n  selector: \"chf-card\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.scss\"],\n})\nexport class CardComponent extends CoercionComponent implements OnInit {\n  @Input() noHeader: BooleanInput = false;\n  @Input() reversedCorners: BooleanInput = false;\n\n  ngOnInit(): void {\n    this.coerceAll([\"noHeader\", \"reversedCorners\"]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                $roundedRadius: 10px;\n$sharpRadius: 2px;\n\n.container {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--card-bg-color, #2d3132);\n  border-top-left-radius: var(--card-top-left-radius, $roundedRadius);\n  border-top-right-radius: var(--card-top-right-radius, $sharpRadius);\n  border-bottom-right-radius: var(--card-bottom-right-radius, $roundedRadius);\n  border-bottom-left-radius: var(--card-bottom-left-radius, $sharpRadius);\n  padding: 1rem 1.2rem;\n  gap: 0.5rem;\n\n  &.reversed {\n    border-top-left-radius: var(--card-top-left-radius, $sharpRadius);\n    border-top-right-radius: var(--card-top-right-radius, $roundedRadius);\n    border-bottom-right-radius: var(--card-bottom-right-radius, $sharpRadius);\n    border-bottom-left-radius: var(--card-bottom-left-radius, $roundedRadius);\n  }\n}\n\n.header {\n  display: flex;\n\n  .title {\n    font-size: 1.2em;\n    font-weight: 500;\n  }\n\n  .header-end {\n    flex: 1;\n  }\n}\n\n.subtitle {\n  color: #7f7f7f;\n  font-size: small;\n}\n\n.actions {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1.5rem;\n}\n\n.hide-empty:empty {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDifficultyComponent.html":{"url":"components/CardDifficultyComponent.html","title":"component - CardDifficultyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDifficultyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/shared/components/card-difficulty/card-difficulty.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card-difficulty\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FontAwesomeModule\n                \n            \n\n            \n                styleUrls\n                ./card-difficulty.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-difficulty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icons\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                difficulty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                difficultyChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        difficulty\n                    \n                \n                \n                    \n                        Type :         CardDifficultyLevel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/shared/components/card-difficulty/card-difficulty.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        difficultyChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/shared/components/card-difficulty/card-difficulty.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    hard: faFaceSadTear,\n    medium: faFaceSmile,\n    easy: faFaceLaugh,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shared/components/card-difficulty/card-difficulty.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { CardDifficultyLevel } from \"@core/model/card.model\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport {\n  faFaceLaugh,\n  faFaceSadTear,\n  faFaceSmile,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: \"chf-card-difficulty\",\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: \"./card-difficulty.component.html\",\n  styleUrls: [\"./card-difficulty.component.scss\"],\n})\nexport class CardDifficultyComponent {\n  @Input() difficulty?: CardDifficultyLevel;\n\n  @Output() difficultyChange = new EventEmitter();\n\n  public icons = {\n    hard: faFaceSadTear,\n    medium: faFaceSmile,\n    easy: faFaceLaugh,\n  };\n}\n\n    \n\n    \n        \n  \n    \n    Hard\n  \n  \n    \n    OK\n  \n  \n    \n    Easy\n  \n\n\n    \n\n    \n                \n                    ./card-difficulty.component.scss\n                \n                :host {\n  display: block;\n}\n\n.difficulty-levels {\n  display: flex;\n  font-size: small;\n  justify-content: space-evenly;\n\n  .level {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    cursor: pointer;\n    padding: 5px 10px;\n    width: 55px;\n    color: gray;\n\n    fa-icon {\n      color: gray;\n      margin-bottom: 0.5rem;\n    }\n\n    &.active {\n      border-color: var(--card-level-color);\n      color: white;\n\n      fa-icon {\n        color: var(--card-level-color, gray);\n      }\n    }\n  }\n\n  .hard {\n    --card-level-color: #cb2020;\n  }\n\n  .medium {\n    --card-level-color: #3ab19d;\n  }\n\n  .easy {\n    --card-level-color: #00b100;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Hard            OK            Easy  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDifficultyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEditorComponent.html":{"url":"components/CardEditorComponent.html","title":"component - CardEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/card-editor/card-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card-editor\n            \n\n\n\n            \n                styleUrls\n                ./card-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                cardDuplicate\n                            \n                            \n                                    Private\n                                collectionId\n                            \n                            \n                                    Public\n                                creationMode\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                keepEditorOpen\n                            \n                            \n                                    Private\n                                    Optional\n                                originalCard\n                            \n                            \n                                    Private\n                                resetRequired\n                            \n                            \n                                    Public\n                                texts\n                            \n                            \n                                    Public\n                                virtualKeyboardOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                saveCard\n                            \n                            \n                                    Private\n                                trackChanges\n                            \n                            \n                                    Private\n                                trackDuplicates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef, cardService: CardService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-editor/card-editor.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        saveCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-editor/card-editor.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-editor/card-editor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        trackDuplicates\n                        \n                    \n                \n            \n            \n                \n                    \n                    trackDuplicates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-editor/card-editor.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cardDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        creationMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    meaning: new FormControl(null, Validators.required),\n    pinyin: new FormControl(null),\n    chinese: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cancel: faClose,\n    save: faCheck,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        keepEditorOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        originalCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetRequired\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        texts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: \"New card\",\n    save: \"Create card\",\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        virtualKeyboardOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-editor/card-editor.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Card } from \"@core/model/card.model\";\nimport { CardService } from \"@core/services/card.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { toOptional } from \"@core/utils/form.utils\";\nimport { faCheck, faClose } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CardForm {\n  meaning: FormControl;\n  pinyin: FormControl;\n  chinese: FormControl;\n}\n\n@Component({\n  selector: \"chf-card-editor\",\n  templateUrl: \"./card-editor.component.html\",\n  styleUrls: [\"./card-editor.component.scss\"],\n})\nexport class CardEditorComponent implements OnInit {\n  public keepEditorOpen = false;\n  public virtualKeyboardOpen = false;\n  public creationMode = true;\n  public cardDuplicate?: Card;\n\n  public form = new FormGroup({\n    meaning: new FormControl(null, Validators.required),\n    pinyin: new FormControl(null),\n    chinese: new FormControl(null),\n  });\n  public icons = {\n    cancel: faClose,\n    save: faCheck,\n  };\n  public texts = {\n    title: \"New card\",\n    save: \"Create card\",\n  };\n\n  private collectionId: number;\n  private originalCard?: Card;\n  private resetRequired = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: { card?: Card; collection: number },\n    public dialogRef: MatDialogRef,\n    private cardService: CardService,\n    private settingsService: SettingsService\n  ) {\n    if (data.card) {\n      this.form.patchValue({\n        meaning: data.card.meanings.join(\" ; \"),\n        pinyin: data.card.pinyin,\n        chinese: data.card.characters,\n      });\n      this.creationMode = false;\n      this.originalCard = data.card;\n      this.texts = { title: \"Edit card\", save: \"Update card\" };\n    }\n    this.collectionId = data.collection;\n  }\n\n  ngOnInit(): void {\n    this.settingsService.getSettings().then((settings) => {\n      if (this.creationMode) {\n        this.trackDuplicates();\n      } else if (settings.resetCardProgress) {\n        this.trackChanges();\n      }\n    });\n  }\n\n  public async saveCard(): Promise {\n    const { meaning, chinese, pinyin } = this.form.value;\n    if (meaning && (chinese || pinyin)) {\n      const card: Card = new Card({\n        meanings: meaning.split(\";\").map((m) => m.trim()),\n        pinyin: toOptional(pinyin),\n        characters: toOptional(chinese),\n        collectionId: this.collectionId,\n        id: this.originalCard?.id,\n        leitnerBox: this.originalCard?.leitnerBox ?? 0,\n        lastSession: this.originalCard?.lastSession,\n      });\n\n      if (this.resetRequired) {\n        card.leitnerBox = 0;\n        card.lastSession = undefined;\n      }\n\n      const savePromise = this.creationMode\n        ? this.cardService.createCard(card, this.collectionId)\n        : this.cardService.updateCard(card);\n\n      await savePromise;\n      if (this.keepEditorOpen) {\n        this.form.reset();\n      } else {\n        this.dialogRef.close();\n      }\n    }\n  }\n\n  private trackChanges(): void {\n    this.form.valueChanges.subscribe((formValues) => {\n      this.resetRequired =\n        formValues.chinese !== this.originalCard?.characters ||\n        formValues.pinyin !== this.originalCard?.pinyin;\n    });\n  }\n\n  private trackDuplicates(): void {\n    this.form.valueChanges.subscribe(async (formValues) => {\n      this.cardDuplicate = undefined;\n      const { meaning } = formValues;\n      if (meaning) {\n        this.cardDuplicate = await this.cardService.findCard({\n          meanings: meaning.split(\";\").map((m) => m.trim()),\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ texts.title }}\n  \n    \n    Cancel\n  \n\n\n\n  \n    \n      Meanings\n      \n      Separate meanings with « ; » \n    \n\n    \n      Chinese characters\n      \n    \n\n    \n  \n\n  \n    A card with this meaning already exists:\n    \n      \n        Meanings\n        {{ cardDuplicate.meanings | join : \" ; \" }}\n      \n      \n        Characters {{ cardDuplicate.characters }}\n      \n      \n        Pinyin {{ cardDuplicate.pinyin }}\n      \n    \n  \n\n  \n    Add another card after this one\n  \n\n  \n    Changing the characters or pinyin fields will automatically reset the progress.\n  \n\n\n\n  \n    \n    {{ texts.save }}\n  \n\n\n    \n\n    \n                \n                    ./card-editor.component.scss\n                \n                mat-form-field,\nchf-pinyin-form-field {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\nmat-slide-toggle {\n  margin-bottom: 1rem;\n}\n\n.duplicate-warning {\n  background-color: #181818;\n  font-size: small;\n  border-radius: 5px;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n\n  .duplicate-card-wrapper {\n    margin-top: 1rem;\n    display: flex;\n    flex-direction: column;\n\n    div {\n      display: flex;\n      gap: 1rem;\n    }\n\n    span {\n      font-weight: bold;\n    }\n  }\n}\n\n.reset-warning {\n  font-size: small;\n  color: #e98100;\n}\n\ndiv[mat-dialog-actions] {\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ texts.title }}          Cancel              Meanings            Separate meanings with « ; »               Chinese characters                      A card with this meaning already exists:                  Meanings        {{ cardDuplicate.meanings | join : \" ; \" }}                    Characters {{ cardDuplicate.characters }}                    Pinyin {{ cardDuplicate.pinyin }}                  Add another card after this one        Changing the characters or pinyin fields will automatically reset the progress.            {{ texts.save }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardForm.html":{"url":"interfaces/CardForm.html","title":"interface - CardForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/collection/card-editor/card-editor.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chinese\n                                        \n                                \n                                \n                                        \n                                            meaning\n                                        \n                                \n                                \n                                        \n                                            pinyin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chinese\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chinese:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meaning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meaning:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinyin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinyin:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Card } from \"@core/model/card.model\";\nimport { CardService } from \"@core/services/card.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { toOptional } from \"@core/utils/form.utils\";\nimport { faCheck, faClose } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CardForm {\n  meaning: FormControl;\n  pinyin: FormControl;\n  chinese: FormControl;\n}\n\n@Component({\n  selector: \"chf-card-editor\",\n  templateUrl: \"./card-editor.component.html\",\n  styleUrls: [\"./card-editor.component.scss\"],\n})\nexport class CardEditorComponent implements OnInit {\n  public keepEditorOpen = false;\n  public virtualKeyboardOpen = false;\n  public creationMode = true;\n  public cardDuplicate?: Card;\n\n  public form = new FormGroup({\n    meaning: new FormControl(null, Validators.required),\n    pinyin: new FormControl(null),\n    chinese: new FormControl(null),\n  });\n  public icons = {\n    cancel: faClose,\n    save: faCheck,\n  };\n  public texts = {\n    title: \"New card\",\n    save: \"Create card\",\n  };\n\n  private collectionId: number;\n  private originalCard?: Card;\n  private resetRequired = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: { card?: Card; collection: number },\n    public dialogRef: MatDialogRef,\n    private cardService: CardService,\n    private settingsService: SettingsService\n  ) {\n    if (data.card) {\n      this.form.patchValue({\n        meaning: data.card.meanings.join(\" ; \"),\n        pinyin: data.card.pinyin,\n        chinese: data.card.characters,\n      });\n      this.creationMode = false;\n      this.originalCard = data.card;\n      this.texts = { title: \"Edit card\", save: \"Update card\" };\n    }\n    this.collectionId = data.collection;\n  }\n\n  ngOnInit(): void {\n    this.settingsService.getSettings().then((settings) => {\n      if (this.creationMode) {\n        this.trackDuplicates();\n      } else if (settings.resetCardProgress) {\n        this.trackChanges();\n      }\n    });\n  }\n\n  public async saveCard(): Promise {\n    const { meaning, chinese, pinyin } = this.form.value;\n    if (meaning && (chinese || pinyin)) {\n      const card: Card = new Card({\n        meanings: meaning.split(\";\").map((m) => m.trim()),\n        pinyin: toOptional(pinyin),\n        characters: toOptional(chinese),\n        collectionId: this.collectionId,\n        id: this.originalCard?.id,\n        leitnerBox: this.originalCard?.leitnerBox ?? 0,\n        lastSession: this.originalCard?.lastSession,\n      });\n\n      if (this.resetRequired) {\n        card.leitnerBox = 0;\n        card.lastSession = undefined;\n      }\n\n      const savePromise = this.creationMode\n        ? this.cardService.createCard(card, this.collectionId)\n        : this.cardService.updateCard(card);\n\n      await savePromise;\n      if (this.keepEditorOpen) {\n        this.form.reset();\n      } else {\n        this.dialogRef.close();\n      }\n    }\n  }\n\n  private trackChanges(): void {\n    this.form.valueChanges.subscribe((formValues) => {\n      this.resetRequired =\n        formValues.chinese !== this.originalCard?.characters ||\n        formValues.pinyin !== this.originalCard?.pinyin;\n    });\n  }\n\n  private trackDuplicates(): void {\n    this.form.valueChanges.subscribe(async (formValues) => {\n      this.cardDuplicate = undefined;\n      const { meaning } = formValues;\n      if (meaning) {\n        this.cardDuplicate = await this.cardService.findCard({\n          meanings: meaning.split(\";\").map((m) => m.trim()),\n        });\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CardMeaningsPipe.html":{"url":"pipes/CardMeaningsPipe.html","title":"pipe - CardMeaningsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CardMeaningsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/card-meanings.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        cardMeanings\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(meanings: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/pipes/card-meanings.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meanings\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"cardMeanings\",\n  standalone: true,\n})\nexport class CardMeaningsPipe implements PipeTransform {\n  transform(meanings: string[]): string {\n    return meanings.length === 1\n      ? meanings[0]\n      : meanings.map((meaning, index) => `${index + 1}. ${meaning}`).join(\"\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardModel.html":{"url":"interfaces/CardModel.html","title":"interface - CardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/card.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            characters\n                                        \n                                \n                                \n                                        \n                                            collectionId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastSession\n                                        \n                                \n                                \n                                        \n                                            leitnerBox\n                                        \n                                \n                                \n                                        \n                                            meanings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pinyin\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        characters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        characters:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collectionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         CardDifficultyLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardDifficultyLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastSession\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastSession:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leitnerBox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leitnerBox:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meanings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meanings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinyin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinyin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dayjs from \"dayjs\";\nimport { Dayjs } from \"dayjs\";\n\nexport type CardDifficultyLevel = \"easy\" | \"medium\" | \"hard\";\n\nexport interface CardModel {\n  id?: number;\n  meanings: string[];\n  pinyin?: string;\n  characters?: string;\n  collectionId: number;\n  leitnerBox: number;\n  lastSession?: string;\n  difficulty?: CardDifficultyLevel;\n}\n\n/**\n * Review delay for each box from 0 to 6 (using the index of the array)\n */\nconst boxReviewDelay = [0, 0.5, 1, 2, 4, 7, 14];\n\nexport class Card implements CardModel {\n  id?: number;\n  meanings: string[] = [];\n  pinyin?: string;\n  characters?: string;\n  collectionId = 0;\n  leitnerBox = 0;\n  lastSession?: string;\n  difficulty?: CardDifficultyLevel;\n\n  constructor(data?: CardModel) {\n    if (data) {\n      Object.assign(this, data);\n    }\n  }\n\n  isUnknown(): boolean {\n    return this.leitnerBox === 0 || !this.lastSession;\n  }\n\n  nextReview(): Dayjs | undefined {\n    return this.isUnknown()\n      ? undefined\n      : dayjs(this.lastSession).add(boxReviewDelay[this.leitnerBox], \"day\");\n  }\n\n  nextReviewInDays(): number {\n    return boxReviewDelay[this.leitnerBox];\n  }\n\n  isKnown(): boolean {\n    return !this.isUnknown() && dayjs().isBefore(this.nextReview());\n  }\n\n  needsReview(): boolean {\n    const nextSession = this.nextReview();\n    return (\n      (!this.isUnknown() && dayjs().isSame(nextSession)) || dayjs().isAfter(nextSession)\n    );\n  }\n\n  moveNextBox(): void {\n    if (this.leitnerBox  0) {\n      this.leitnerBox--;\n    }\n  }\n\n  reset(): void {\n    this.leitnerBox = 0;\n    this.lastSession = undefined;\n    this.difficulty = undefined;\n  }\n\n  clone(): Card {\n    const clone = new Card(this);\n    clone.meanings = [...clone.meanings];\n    return clone;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardProgressBarComponent.html":{"url":"components/CardProgressBarComponent.html","title":"component - CardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card-progress-bar\n            \n\n\n\n            \n                styleUrls\n                ./card-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentStepPercent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentStepPercent\n                    \n                \n\n                \n                    \n                        getcurrentStepPercent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts:17\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from \"@angular/core\";\nimport { Card } from \"@core/model/card.model\";\nimport { SettingsService } from \"@core/services/settings.service\";\n\n@Component({\n  selector: \"chf-card-progress-bar\",\n  templateUrl: \"./card-progress-bar.component.html\",\n  styleUrls: [\"./card-progress-bar.component.scss\"],\n})\nexport class CardProgressBarComponent implements OnInit {\n  @Input() card!: Card;\n\n  constructor(private settings: SettingsService) {}\n\n  public steps: number[] = [];\n\n  get currentStepPercent(): number {\n    return ((this.card.leitnerBox + 1) * 100) / this.steps.length;\n  }\n\n  ngOnInit(): void {\n    this.settings.getSettings().then((settings) => {\n      this.steps = Array.from({ length: settings.leitnerBoxes }, (_, key) => key);\n    });\n  }\n}\n\n    \n\n    \n        \n  = step }\"\n  >\n    \n      {{ currentStepPercent }} %\n    \n  \n\n\n    \n\n    \n                \n                    ./card-progress-bar.component.scss\n                \n                :host {\n  display: block;\n  margin: 0.5rem 0;\n}\n\n$roundedRadius: 20px;\n\n.card-progress-track {\n  height: 1rem;\n  width: 100%;\n  background-color: #1c1c1c;\n  border-radius: $roundedRadius;\n  display: flex;\n}\n\n.step {\n  flex: 1;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:first-child {\n    border-top-left-radius: $roundedRadius;\n    border-bottom-left-radius: $roundedRadius;\n  }\n\n  &:last-child {\n    border-top-right-radius: $roundedRadius;\n    border-bottom-right-radius: $roundedRadius;\n  }\n\n  &.completed {\n    background-color: #979797;\n  }\n}\n\n.current-step {\n  color: black;\n  font-size: x-small;\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  = step }\"  >          {{ currentStepPercent }} %      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardProgressIndicatorComponent.html":{"url":"components/CardProgressIndicatorComponent.html","title":"component - CardProgressIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardProgressIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card-progress-indicator\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgCircleProgressModule\n                \n            \n\n            \n                styleUrls\n                ./card-progress-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-progress-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                circleTitle\n                            \n                            \n                                    Public\n                                subtitle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardCount\n                            \n                            \n                                label\n                            \n                            \n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cardCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardCount\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        percent\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        circleTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subtitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"card\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cardCount\n                    \n                \n\n\n                \n                    \n                        setcardCount(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\n\n@Component({\n  selector: \"chf-card-progress-indicator\",\n  standalone: true,\n  imports: [NgCircleProgressModule],\n  templateUrl: \"./card-progress-indicator.component.html\",\n  styleUrls: [\"./card-progress-indicator.component.scss\"],\n})\nexport class CardProgressIndicatorComponent {\n  @Input() label?: string;\n  @Input() percent = 0;\n  @Input() set cardCount(value: number) {\n    this.circleTitle = `${value}`;\n    this.subtitle = value > 1 ? \"cards\" : \"card\";\n  }\n  public circleTitle = \"0\";\n  public subtitle = \"card\";\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./card-progress-indicator.component.scss\n                \n                :host {\n  display: block;\n  text-align: center;\n  width: fit-content;\n\n  --progress-outer-stroke: var(--chf-progress-outer-stroke, #81d100);\n  --progress-inner-stroke: var(--chf-progress-inner-stroke, #c7e596);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardProgressIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCard\n                            \n                            \n                                    Async\n                                deleteCard\n                            \n                            \n                                    Async\n                                findCard\n                            \n                            \n                                    Async\n                                getCard\n                            \n                            \n                                    Async\n                                updateCard\n                            \n                            \n                                    Async\n                                updateCards\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/card.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCard(card: Card, collection: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCard(card: Card | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCard(search: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCards(cards: Card[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/card.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                Card[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Database\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/card.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Database } from \"@core/db/database.model\";\nimport { DatabaseService } from \"@core/db/database.service\";\nimport { Card } from \"@core/model/card.model\";\nimport { Optional } from \"@core/types\";\nimport { areEqual } from \"@core/utils/general.utils\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardService {\n  private database: Database;\n\n  constructor(databaseService: DatabaseService) {\n    this.database = databaseService.database;\n  }\n\n  async createCard(card: Card, collection: number): Promise {\n    card.collectionId = collection;\n    const newCardId = await this.database.cards.add(card);\n    return this.getCard(newCardId);\n  }\n\n  async updateCard(card: Card): Promise {\n    let error = \"ID is undefined\";\n    if (card.id) {\n      try {\n        await this.database.cards.put(card);\n        return this.getCard(card.id);\n      } catch (err: unknown) {\n        error = typeof err === \"string\" ? err : \"An error occurred during the update\";\n      }\n    }\n    throw new Error(`Unable to update the card with id ${card.id}: ${error}`);\n  }\n\n  async updateCards(cards: Card[]): Promise {\n    return this.database.cards.bulkPut(cards);\n  }\n\n  async deleteCard(card: Card | number): Promise {\n    const cardId = typeof card === \"number\" ? card : card.id;\n    if (cardId) {\n      return this.database.cards.delete(cardId);\n    }\n  }\n\n  async findCard(search: {\n    meanings?: Optional;\n    pinyin?: Optional;\n    characters?: Optional;\n  }): Promise {\n    const cardModel = await this.database.cards\n      .filter(\n        (card) =>\n          search.meanings?.some((meaning) =>\n            card.meanings.some((cardMeaning) => areEqual(cardMeaning, meaning))\n          ) ||\n          areEqual(search.pinyin, card.pinyin) ||\n          areEqual(search.characters, card.characters)\n      )\n      .first();\n    return cardModel ? new Card(cardModel) : undefined;\n  }\n\n  async getCard(id: number): Promise {\n    const card = await this.database.cards.get(id);\n    if (!card) {\n      throw new Error(`Card with id ${id} does not exist`);\n    }\n    return new Card(card);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardViewerComponent.html":{"url":"components/CardViewerComponent.html","title":"component - CardViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/card-viewer/card-viewer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-card-viewer\n            \n\n\n\n            \n                styleUrls\n                ./card-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                card\n                            \n                            \n                                    Private\n                                collectionId\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                isDeleteConfirm\n                            \n                            \n                                    Public\n                                isEditActive\n                            \n                            \n                                    Public\n                                isResetConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                deleteCard\n                            \n                            \n                                    Public\n                                editCard\n                            \n                            \n                                    Public\n                                    Async\n                                resetProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, dialogRef: MatDialogRef, cardService: CardService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    editCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        resetProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetProgress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    close: faClose,\n    edit: faEdit,\n    delete: faTrash,\n    reset: faRotateLeft,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDeleteConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEditActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isResetConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/card-viewer/card-viewer.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { Card } from \"@core/model/card.model\";\nimport { CardService } from \"@core/services/card.service\";\nimport {\n  faClose,\n  faEdit,\n  faRotateLeft,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { CardEditorComponent } from \"../card-editor/card-editor.component\";\n\n@Component({\n  selector: \"chf-card-viewer\",\n  templateUrl: \"./card-viewer.component.html\",\n  styleUrls: [\"./card-viewer.component.scss\"],\n})\nexport class CardViewerComponent {\n  public icons = {\n    close: faClose,\n    edit: faEdit,\n    delete: faTrash,\n    reset: faRotateLeft,\n  };\n  public card: Card;\n  public isDeleteConfirm = false;\n  public isResetConfirm = false;\n  public isEditActive = false;\n\n  private collectionId: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: { card: Card; collection: number },\n    public dialogRef: MatDialogRef,\n    private cardService: CardService,\n    private dialog: MatDialog\n  ) {\n    this.card = data.card;\n    this.collectionId = data.collection;\n  }\n\n  public editCard(): void {\n    this.isEditActive = true;\n    this.dialog\n      .open(CardEditorComponent, {\n        data: {\n          card: this.card,\n          collection: this.collectionId,\n        },\n      })\n      .afterClosed()\n      .subscribe(async () => {\n        this.isEditActive = false;\n        this.card = await this.cardService.getCard(this.card.id ?? 0);\n      });\n  }\n\n  public async deleteCard(): Promise {\n    await this.cardService.deleteCard(this.card);\n    this.dialogRef.close();\n  }\n\n  public async resetProgress(): Promise {\n    let updatedCard = this.card.clone();\n    updatedCard.reset();\n    updatedCard = await this.cardService.updateCard(updatedCard);\n    this.card = updatedCard;\n    this.isResetConfirm = false;\n  }\n}\n\n    \n\n    \n        \n  \n    Card\n    \n      \n      Close\n    \n  \n\n  \n    \n      \n        \n          \n          \n          {{ card.characters }}\n          {{ card.pinyin }}\n        \n      \n      \n        \n          \n          Delete\n        \n        \n          \n          Edit\n        \n      \n    \n\n    \n      Card difficulty\n      \n    \n\n    \n      Learning progress\n      \n        \n        \n          \n          Reset progress\n        \n      \n    \n  \n\n\n\n  \n    Delete the card?\n    \n      This is a permanent action. You will not be able to restore the card.\n    \n  \n\n\n\n  \n    Reset card progress?\n     The card will reset to its first learning stage. \n  \n\n\n    \n\n    \n                \n                    ./card-viewer.component.scss\n                \n                div[mat-dialog-content] {\n  color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\nchf-card {\n  --card-bg-color: #1c1c1c;\n  width: 60vw;\n  max-width: 80%;\n  margin-bottom: 1rem;\n\n  div[card-content] {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: center;\n\n    mat-divider {\n      width: 70%;\n    }\n  }\n}\n\n.characters {\n  font-size: large;\n}\n\n.card-actions {\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 1rem;\n}\n\n.section-title {\n  padding-bottom: 0.2rem;\n  border-bottom: solid 1px #6c6c6c;\n  font-family: var(--font-title);\n  margin-bottom: 0.5rem;\n}\n\n.learning-progress {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n\n  chf-card-progress-bar {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Card                Close                                                        {{ card.characters }}          {{ card.pinyin }}                                                Delete                                    Edit                            Card difficulty                    Learning progress                                          Reset progress                          Delete the card?          This is a permanent action. You will not be able to restore the card.            Reset card progress?     The card will reset to its first learning stage.   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoercionComponent.html":{"url":"classes/CoercionComponent.html","title":"class - CoercionComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoercionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/coercion-component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coerced\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                coerceAll\n                            \n                            \n                                    Protected\n                                coerceField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coerced\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Indexable\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/coercion-component.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceAll(fields: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/coercion-component.ts:12\n                \n            \n\n\n            \n                \n                    Coerces all the specified fields to booleans.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Names of the fields to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        coerceField\n                        \n                    \n                \n            \n            \n                \n                    \n                    coerceField(field: string, value?: BooleanInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/coercion-component.ts:23\n                \n            \n\n\n            \n                \n                    Coerces a field to a boolean. If the value is not provided, the\nmethod will try to coerce the field from its name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the field to coerce\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                            BooleanInput\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        (optional) Value to coerce\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BooleanInput, coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Indexable } from \"./types\";\n\nexport class CoercionComponent {\n  public coerced: Indexable = {};\n\n  /**\n   * Coerces all the specified fields to booleans.\n   *\n   * @param fields Names of the fields to coerce\n   */\n  protected coerceAll(fields: string[]): void {\n    fields.forEach((fieldName) => this.coerceField(fieldName));\n  }\n\n  /**\n   * Coerces a field to a boolean. If the value is not provided, the\n   * method will try to coerce the field from its name.\n   *\n   * @param field Name of the field to coerce\n   * @param value (optional) Value to coerce\n   */\n  protected coerceField(field: string, value?: BooleanInput): void {\n    const fieldValue =\n      value === null || value === undefined ? Reflect.get(this, field) : value;\n    this.coerced[field] = coerceBooleanProperty(fieldValue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectionCardsComponent.html":{"url":"components/CollectionCardsComponent.html","title":"component - CollectionCardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CollectionCardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/collection-cards/collection-cards.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-collection-cards\n            \n\n\n\n            \n                styleUrls\n                ./collection-cards.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collection-cards.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardCountPlural\n                            \n                            \n                                    Public\n                                    Optional\n                                collection\n                            \n                            \n                                    Private\n                                collectionId\n                            \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                filter$\n                            \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    \n                                    Optional\n                                paginator\n                            \n                            \n                                    Public\n                                searchActive\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                            \n                                    Private\n                                    Readonly\n                                tabBarActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearchBar\n                            \n                            \n                                    Private\n                                initializeDataSource\n                            \n                            \n                                    Private\n                                loadCollectionCards\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCardEditor\n                            \n                            \n                                openCardViewer\n                            \n                            \n                                    Private\n                                openCategoryEditor\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, collectionService: CollectionService, tabBarService: TabBarService, dialog: MatDialog, navigationService: NavigationService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tabBarService\n                                                  \n                                                        \n                                                                        TabBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearchBar\n                        \n                    \n                \n            \n            \n                \nclearSearchBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDataSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadCollectionCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCardEditor\n                        \n                    \n                \n            \n            \n                \nopenCardEditor(card?: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCardViewer\n                        \n                    \n                \n            \n            \n                \nopenCardViewer(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        openCategoryEditor\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCategoryEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardCountPlural\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"=0\": \"0 card\",\n    \"=1\": \"1 card\",\n    other: \"# cards\",\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardCollection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"meanings\", \"pinyin\", \"characters\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    goBack: faChevronLeft,\n    search: faMagnifyingGlass,\n    clear: faClose,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tabBarActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionTab[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      label: \"Edit collection\",\n      icon: faEdit,\n      action: () => this.openCategoryEditor(),\n    },\n    {\n      label: \"New card\",\n      icon: faAdd,\n      action: () => this.openCardEditor(),\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-cards/collection-cards.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { CardCollection } from \"@core/model/card-collection.model\";\nimport { Card } from \"@core/model/card.model\";\nimport { CollectionService } from \"@core/services/collection.service\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { normalizeForComparison } from \"@core/utils/general.utils\";\nimport {\n  faAdd,\n  faChevronLeft,\n  faClose,\n  faEdit,\n  faMagnifyingGlass,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Subject, debounceTime } from \"rxjs\";\nimport { ActionTab, TabBarService } from \"src/app/components/tab-bar/tab-bar.service\";\nimport { CardEditorComponent } from \"../card-editor/card-editor.component\";\nimport { CardViewerComponent } from \"../card-viewer/card-viewer.component\";\nimport { CollectionEditorComponent } from \"../collection-editor/collection-editor.component\";\n\n@Component({\n  selector: \"chf-collection-cards\",\n  templateUrl: \"./collection-cards.component.html\",\n  styleUrls: [\"./collection-cards.component.scss\"],\n})\nexport class CollectionCardsComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(MatSort) sort?: MatSort;\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\n\n  public icons = {\n    goBack: faChevronLeft,\n    search: faMagnifyingGlass,\n    clear: faClose,\n  };\n\n  public columns = [\"meanings\", \"pinyin\", \"characters\"];\n  public dataSource = new MatTableDataSource();\n  public filter$ = new Subject();\n  public filter = \"\";\n  public searchActive = false;\n  public collection?: CardCollection;\n  public pageSize = 20;\n  public cardCountPlural = {\n    \"=0\": \"0 card\",\n    \"=1\": \"1 card\",\n    other: \"# cards\",\n  };\n\n  private collectionId = 0;\n  private readonly tabBarActions: ActionTab[] = [\n    {\n      label: \"Edit collection\",\n      icon: faEdit,\n      action: () => this.openCategoryEditor(),\n    },\n    {\n      label: \"New card\",\n      icon: faAdd,\n      action: () => this.openCardEditor(),\n    },\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private tabBarService: TabBarService,\n    private dialog: MatDialog,\n    private navigationService: NavigationService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.collectionId = +params[\"id\"];\n      this.loadCollectionCards();\n      this.navigationService.navbarVisible.next(false);\n      this.tabBarService.setActions(this.tabBarActions);\n    });\n\n    this.settingsService\n      .getSettings()\n      .then((settings) => (this.pageSize = settings.pageSize));\n\n    this.initializeDataSource();\n\n    this.filter$\n      .pipe(debounceTime(250))\n      .subscribe(() => (this.dataSource.filter = this.filter));\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort ?? null;\n    this.dataSource.paginator = this.paginator ?? null;\n  }\n\n  ngOnDestroy(): void {\n    this.navigationService.navbarVisible.next(true);\n  }\n\n  openCardEditor(card?: Card): void {\n    this.dialog\n      .open(CardEditorComponent, {\n        data: { card, collection: this.collectionId },\n      })\n      .afterClosed()\n      .subscribe(() => this.loadCollectionCards());\n  }\n\n  openCardViewer(card: Card): void {\n    this.dialog\n      .open(CardViewerComponent, {\n        data: { card, collection: this.collectionId },\n      })\n      .afterClosed()\n      .subscribe(() => this.loadCollectionCards());\n  }\n\n  toggleSearch(): void {\n    this.searchActive = !this.searchActive;\n    if (!this.searchActive) {\n      this.filter = \"\";\n      this.filter$.next(null);\n    }\n  }\n\n  clearSearchBar(): void {\n    this.filter = \"\";\n    this.filter$.next(null);\n  }\n\n  private loadCollectionCards(): void {\n    this.collectionService.getCollection(this.collectionId).then((collection) => {\n      if (collection) {\n        this.collection = collection;\n        this.navigationService.setTitle(\"Manage collections - \" + collection.label);\n        this.dataSource.data = collection.cards;\n      }\n    });\n  }\n\n  private initializeDataSource(): void {\n    this.dataSource.filterPredicate = (card: Card, filter: string) => {\n      const normalizedFilter = normalizeForComparison(filter);\n      const normalizedContent: string[] = card.meanings.map((meaning) =>\n        normalizeForComparison(meaning)\n      );\n      if (card.pinyin) {\n        normalizedContent.push(normalizeForComparison(card.pinyin));\n      }\n      return normalizedContent.some((content) => content.includes(normalizedFilter));\n    };\n\n    this.dataSource.sortingDataAccessor = (data: Card, sortHeaderId: string): string => {\n      const columnData = data[sortHeaderId as keyof Card];\n      if (Array.isArray(columnData)) {\n        return columnData[0].toLocaleLowerCase();\n      }\n      if (typeof columnData === \"string\") {\n        return columnData.toLocaleLowerCase();\n      }\n      throw \"Unhandled data type: only meanings and pinyin column should be sorted\";\n    };\n  }\n\n  private openCategoryEditor(): void {\n    this.dialog\n      .open(CollectionEditorComponent, {\n        data: { collection: this.collection },\n      })\n      .afterClosed()\n      .subscribe(() =>\n        this.collectionService\n          .getCollection(this.collectionId)\n          .then((refreshedCollection) => (this.collection = refreshedCollection))\n      );\n  }\n}\n\n    \n\n    \n        \n  \n  {{ collection?.label }}\n  \n  \n    {{ dataSource.data.length | i18nPlural : cardCountPlural }}\n  \n\n\n\n  Find a card\n  \n  \n    \n      \n      \n    \n    \n  \n\n\n\n  \n    \n      Meanings\n      \n        \n      \n    \n\n    \n      Pinyin\n      \n        {{ card.pinyin }}\n      \n    \n\n    \n      \n        Char.\n      \n      \n        {{ card.characters }}\n      \n    \n\n    \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./collection-cards.component.scss\n                \n                .page-header {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.7em;\n  border-bottom: solid 1px #343434;\n\n  .collection-name {\n    font-family: var(--font-title);\n    font-size: large;\n    font-weight: 500;\n  }\n\n  .filler {\n    flex: 1;\n  }\n\n  .card-count {\n    background-color: rgba(0, 0, 0, 0.5);\n    font-size: small;\n    padding: 0.3em 0.8em;\n    border-radius: 5px;\n  }\n}\n\n.search-icon-wrapper {\n  display: flex;\n  gap: 1rem;\n  padding: 0 1rem;\n}\n\n$navbarHeight: 60px;\n$headerHeight: 160px;\n.table-wrapper {\n  border-radius: 7px;\n  overflow-x: auto;\n  height: calc(100vh - $headerHeight - $navbarHeight);\n}\n\nmat-table {\n  mat-header-cell {\n    font-weight: 600;\n    font-size: 0.9em;\n  }\n\n  .character-column {\n    max-width: 60px;\n    padding: 0px;\n  }\n\n  .pinyin-column {\n    font-family: \"Ubuntu Mono\";\n  }\n\n  .meaning-column {\n    font-size: 0.9em;\n  }\n}\n\nmat-form-field {\n  width: 100%;\n}\n\nmat-paginator {\n  position: sticky;\n  bottom: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ collection?.label }}        {{ dataSource.data.length | i18nPlural : cardCountPlural }}    Find a card                                          Meanings                                  Pinyin              {{ card.pinyin }}                            Char.                    {{ card.characters }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollectionCardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectionEditorComponent.html":{"url":"components/CollectionEditorComponent.html","title":"component - CollectionEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CollectionEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/collection-editor/collection-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-collection-editor\n            \n\n\n\n            \n                styleUrls\n                ./collection-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collection-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                collectionId\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                isDeleteConfirm\n                            \n                            \n                                    Public\n                                texts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCollection\n                            \n                            \n                                    Async\n                                saveCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, collectionService: CollectionService, router: Router, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCollection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveCollection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        collectionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    label: new FormControl(null, Validators.required),\n    description: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cancel: faClose,\n    save: faCheck,\n    delete: faTrash,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDeleteConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        texts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    title: \"New collection\",\n    save: \"Create collection\",\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-editor/collection-editor.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\nimport { CardCollection, CardCollectionModel } from \"@core/model/card-collection.model\";\nimport { CollectionService } from \"@core/services/collection.service\";\nimport { toOptional } from \"@core/utils/form.utils\";\nimport { faCheck, faClose, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CollectionForm {\n  label: FormControl;\n  description: FormControl;\n}\n\n@Component({\n  selector: \"chf-collection-editor\",\n  templateUrl: \"./collection-editor.component.html\",\n  styleUrls: [\"./collection-editor.component.scss\"],\n})\nexport class CollectionEditorComponent {\n  public form = new FormGroup({\n    label: new FormControl(null, Validators.required),\n    description: new FormControl(null),\n  });\n\n  public isDeleteConfirm = false;\n  public collectionId?: number;\n  public icons = {\n    cancel: faClose,\n    save: faCheck,\n    delete: faTrash,\n  };\n  public texts = {\n    title: \"New collection\",\n    save: \"Create collection\",\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: { collection?: CardCollection },\n    private collectionService: CollectionService,\n    private router: Router,\n    public dialogRef: MatDialogRef\n  ) {\n    if (data.collection) {\n      this.collectionId = data.collection.id;\n      this.texts = { title: \"Edit collection\", save: \"Update collection\" };\n      this.form.patchValue(data.collection);\n    }\n  }\n\n  async saveCollection(): Promise {\n    const { label, description } = this.form.value;\n    if (label) {\n      const collection: CardCollectionModel = {\n        label,\n        description: toOptional(description),\n      };\n      if (this.collectionId) {\n        collection.id = this.collectionId;\n        await this.collectionService.updateCollection(collection);\n      } else {\n        await this.collectionService.createCollection(collection);\n      }\n      this.dialogRef.close();\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n\n  async deleteCollection(): Promise {\n    if (this.collectionId) {\n      await this.collectionService.deleteCollection(this.collectionId);\n    }\n    this.dialogRef.close();\n    this.router.navigateByUrl(\"/collections\");\n  }\n}\n\n    \n\n    \n        \n  \n    {{ texts.title }}\n    \n      \n      Cancel\n    \n  \n\n  \n    \n      \n        Label\n        \n        \n          \n        \n      \n\n      \n        Description (optional)\n        \n      \n    \n  \n\n  \n    \n      \n      {{ texts.save }}\n    \n\n    \n      \n      \n        \n        Delete collection\n      \n    \n  \n\n\n\n  \n    Delete the collection and all its cards?\n    \n      This is a permanent action. You will not be able to restore the collection or its\n      card.\n    \n  \n\n\n    \n\n    \n                \n                    ./collection-editor.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\ndiv[mat-dialog-actions] {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding-bottom: 1rem;\n\n  mat-divider {\n    width: 80%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ texts.title }}                Cancel                          Label                                                      Description (optional)                                      {{ texts.save }}                                    Delete collection                  Delete the collection and all its cards?          This is a permanent action. You will not be able to restore the collection or its      card.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollectionEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionForm.html":{"url":"interfaces/CollectionForm.html","title":"interface - CollectionForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/collection/collection-editor/collection-editor.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\nimport { CardCollection, CardCollectionModel } from \"@core/model/card-collection.model\";\nimport { CollectionService } from \"@core/services/collection.service\";\nimport { toOptional } from \"@core/utils/form.utils\";\nimport { faCheck, faClose, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CollectionForm {\n  label: FormControl;\n  description: FormControl;\n}\n\n@Component({\n  selector: \"chf-collection-editor\",\n  templateUrl: \"./collection-editor.component.html\",\n  styleUrls: [\"./collection-editor.component.scss\"],\n})\nexport class CollectionEditorComponent {\n  public form = new FormGroup({\n    label: new FormControl(null, Validators.required),\n    description: new FormControl(null),\n  });\n\n  public isDeleteConfirm = false;\n  public collectionId?: number;\n  public icons = {\n    cancel: faClose,\n    save: faCheck,\n    delete: faTrash,\n  };\n  public texts = {\n    title: \"New collection\",\n    save: \"Create collection\",\n  };\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: { collection?: CardCollection },\n    private collectionService: CollectionService,\n    private router: Router,\n    public dialogRef: MatDialogRef\n  ) {\n    if (data.collection) {\n      this.collectionId = data.collection.id;\n      this.texts = { title: \"Edit collection\", save: \"Update collection\" };\n      this.form.patchValue(data.collection);\n    }\n  }\n\n  async saveCollection(): Promise {\n    const { label, description } = this.form.value;\n    if (label) {\n      const collection: CardCollectionModel = {\n        label,\n        description: toOptional(description),\n      };\n      if (this.collectionId) {\n        collection.id = this.collectionId;\n        await this.collectionService.updateCollection(collection);\n      } else {\n        await this.collectionService.createCollection(collection);\n      }\n      this.dialogRef.close();\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n\n  async deleteCollection(): Promise {\n    if (this.collectionId) {\n      await this.collectionService.deleteCollection(this.collectionId);\n    }\n    this.dialogRef.close();\n    this.router.navigateByUrl(\"/collections\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectionListComponent.html":{"url":"components/CollectionListComponent.html","title":"component - CollectionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CollectionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/collection/collection-list/collection-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-collection-list\n            \n\n\n\n            \n                styleUrls\n                ./collection-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collection-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardCountPlural\n                            \n                            \n                                    Public\n                                collections\n                            \n                            \n                                    Public\n                                icons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadCollections\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionService: CollectionService, navigationService: NavigationService, tabBarService: TabBarService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/collection/collection-list/collection-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tabBarService\n                                                  \n                                                        \n                                                                        TabBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollections()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-list/collection-list.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-list/collection-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditor\n                        \n                    \n                \n            \n            \n                \nopenEditor(collection?: CardCollection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/collection/collection-list/collection-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                CardCollection\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardCountPlural\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"=0\": \"No card\",\n    \"=1\": \"1 card\",\n    other: \"# cards\",\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-list/collection-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CardCollection[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-list/collection-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: faAdd,\n    goTo: faChevronRight,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/collection/collection-list/collection-list.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { CardCollection } from \"@core/model/card-collection.model\";\nimport { CollectionService } from \"@core/services/collection.service\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { faAdd, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { TabBarService } from \"src/app/components/tab-bar/tab-bar.service\";\nimport { CollectionEditorComponent } from \"../collection-editor/collection-editor.component\";\n\n@Component({\n  selector: \"chf-collection-list\",\n  templateUrl: \"./collection-list.component.html\",\n  styleUrls: [\"./collection-list.component.scss\"],\n})\nexport class CollectionListComponent implements OnInit {\n  public icons = {\n    add: faAdd,\n    goTo: faChevronRight,\n  };\n  public collections: CardCollection[] = [];\n  public cardCountPlural = {\n    \"=0\": \"No card\",\n    \"=1\": \"1 card\",\n    other: \"# cards\",\n  };\n\n  constructor(\n    private collectionService: CollectionService,\n    private navigationService: NavigationService,\n    private tabBarService: TabBarService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loadCollections();\n    this.navigationService.setTitle(\"Manage collections\");\n    this.navigationService.resetNavbarText();\n    this.tabBarService.resetTabBar();\n  }\n\n  openEditor(collection?: CardCollection): void {\n    this.dialog\n      .open(CollectionEditorComponent, {\n        data: { collection },\n        panelClass: [],\n      })\n      .afterClosed()\n      .subscribe(() => this.loadCollections());\n  }\n\n  private loadCollections(): void {\n    this.collectionService\n      .getCollections()\n      .then((collections) => (this.collections = collections));\n  }\n}\n\n    \n\n    \n        \n  \n  New collection\n\n\n\n  {{ collection.label }}\n  {{ collection.description }}\n  \n    \n      {{ collection.cards.length | i18nPlural : cardCountPlural }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./collection-list.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding-bottom: 1rem;\n}\n\nchf-button {\n  align-self: center;\n  margin-bottom: 0.5rem;\n}\n\ndiv[card-header-end] {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  .card-count {\n    background-color: rgba(0, 0, 0, 0.5);\n    font-size: small;\n    padding: 0.3em 0.8em;\n    border-radius: 5px;\n    margin-right: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    New collection  {{ collection.label }}  {{ collection.description }}            {{ collection.cards.length | i18nPlural : cardCountPlural }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollectionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectionPageModule.html":{"url":"modules/CollectionPageModule.html","title":"module - CollectionPageModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectionPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CollectionPageModule\n\n\n\ncluster_CollectionPageModule_imports\n\n\n\ncluster_CollectionPageModule_declarations\n\n\n\n\nCardEditorComponent\n\nCardEditorComponent\n\n\n\nCollectionPageModule\n\nCollectionPageModule\n\nCollectionPageModule -->\n\nCardEditorComponent->CollectionPageModule\n\n\n\n\n\nCardProgressBarComponent\n\nCardProgressBarComponent\n\nCollectionPageModule -->\n\nCardProgressBarComponent->CollectionPageModule\n\n\n\n\n\nCardViewerComponent\n\nCardViewerComponent\n\nCollectionPageModule -->\n\nCardViewerComponent->CollectionPageModule\n\n\n\n\n\nCollectionCardsComponent\n\nCollectionCardsComponent\n\nCollectionPageModule -->\n\nCollectionCardsComponent->CollectionPageModule\n\n\n\n\n\nCollectionEditorComponent\n\nCollectionEditorComponent\n\nCollectionPageModule -->\n\nCollectionEditorComponent->CollectionPageModule\n\n\n\n\n\nCollectionListComponent\n\nCollectionListComponent\n\nCollectionPageModule -->\n\nCollectionListComponent->CollectionPageModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nCollectionPageModule -->\n\nButtonComponent->CollectionPageModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCollectionPageModule -->\n\nCardComponent->CollectionPageModule\n\n\n\n\n\nCardDifficultyComponent\n\nCardDifficultyComponent\n\nCollectionPageModule -->\n\nCardDifficultyComponent->CollectionPageModule\n\n\n\n\n\nCardMeaningsPipe\n\nCardMeaningsPipe\n\nCollectionPageModule -->\n\nCardMeaningsPipe->CollectionPageModule\n\n\n\n\n\nInlineConfirmDialogComponent\n\nInlineConfirmDialogComponent\n\nCollectionPageModule -->\n\nInlineConfirmDialogComponent->CollectionPageModule\n\n\n\n\n\nJoinPipe\n\nJoinPipe\n\nCollectionPageModule -->\n\nJoinPipe->CollectionPageModule\n\n\n\n\n\nPinyinFormFieldComponent\n\nPinyinFormFieldComponent\n\nCollectionPageModule -->\n\nPinyinFormFieldComponent->CollectionPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/collection/collection-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardEditorComponent\n                        \n                        \n                            CardProgressBarComponent\n                        \n                        \n                            CardViewerComponent\n                        \n                        \n                            CollectionCardsComponent\n                        \n                        \n                            CollectionEditorComponent\n                        \n                        \n                            CollectionListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDifficultyComponent\n                        \n                        \n                            CardMeaningsPipe\n                        \n                        \n                            InlineConfirmDialogComponent\n                        \n                        \n                            JoinPipe\n                        \n                        \n                            PinyinFormFieldComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { RouterModule } from \"@angular/router\";\nimport { CardMeaningsPipe } from \"@core/pipes/card-meanings.pipe\";\nimport { JoinPipe } from \"@core/pipes/join.pipe\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { NgxFormControlMessagesModule } from \"@varrmcault/ngx-form-control-messages\";\nimport { ButtonComponent } from \"src/app/components/button/button.component\";\nimport { CardComponent } from \"src/app/components/card/card.component\";\nimport { InlineConfirmDialogComponent } from \"src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component\";\nimport { PinyinFormFieldComponent } from \"src/app/components/pinyin-form-field/pinyin-form-field.component\";\nimport { CardDifficultyComponent } from \"../shared/components/card-difficulty/card-difficulty.component\";\nimport { CardEditorComponent } from \"./card-editor/card-editor.component\";\nimport { CardProgressBarComponent } from \"./card-viewer/card-progress-bar/card-progress-bar.component\";\nimport { CardViewerComponent } from \"./card-viewer/card-viewer.component\";\nimport { CollectionCardsComponent } from \"./collection-cards/collection-cards.component\";\nimport { CollectionEditorComponent } from \"./collection-editor/collection-editor.component\";\nimport { CollectionListComponent } from \"./collection-list/collection-list.component\";\n\n@NgModule({\n  declarations: [\n    CollectionListComponent,\n    CollectionCardsComponent,\n    CardEditorComponent,\n    CollectionEditorComponent,\n    CardViewerComponent,\n    CardProgressBarComponent,\n  ],\n  imports: [\n    ButtonComponent,\n    CardComponent,\n    CardDifficultyComponent,\n    CardMeaningsPipe,\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    InlineConfirmDialogComponent,\n    JoinPipe,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatSortModule,\n    MatTableModule,\n    NgxFormControlMessagesModule,\n    PinyinFormFieldComponent,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n})\nexport class CollectionPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionService.html":{"url":"injectables/CollectionService.html","title":"injectable - CollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/collection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCollection\n                            \n                            \n                                deleteCollection\n                            \n                            \n                                    Async\n                                getCollection\n                            \n                            \n                                    Async\n                                getCollections\n                            \n                            \n                                getKnownCardRequest\n                            \n                            \n                                getReviewCardRequest\n                            \n                            \n                                getUnknownCardRequest\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionCards\n                            \n                            \n                                updateCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/collection.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCollection\n                        \n                    \n                \n            \n            \n                \ncreateCollection(collection: CardCollectionModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                CardCollectionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCollection\n                        \n                    \n                \n            \n            \n                \ndeleteCollection(collection: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollections()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKnownCardRequest\n                        \n                    \n                \n            \n            \n                \ngetKnownCardRequest(collectionId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:68\n                \n            \n\n\n            \n                \n                    Build the Dexie request to fetch known cards for a collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collectionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Card collection id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Collection\n\n                    \n                    \n                        Dexie Collection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReviewCardRequest\n                        \n                    \n                \n            \n            \n                \ngetReviewCardRequest(collectionId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:80\n                \n            \n\n\n            \n                \n                    Build the Dexie request to fetch cards ready for review for a collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collectionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Card collection id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Collection\n\n                    \n                    \n                        Dexie Collection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnknownCardRequest\n                        \n                    \n                \n            \n            \n                \ngetUnknownCardRequest(collectionId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:57\n                \n            \n\n\n            \n                \n                    Build the Dexie request to fetch unknown cards for a collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collectionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Card collection id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Collection\n\n                    \n                    \n                        Dexie Collection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionCards(collection: CardCollectionModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                CardCollectionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCollection\n                        \n                    \n                \n            \n            \n                \nupdateCollection(collection: CardCollectionModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/collection.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                CardCollectionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Database\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/collection.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Collection } from \"dexie\";\nimport { Database } from \"../db/database.model\";\nimport { DatabaseService } from \"../db/database.service\";\nimport { CardCollection, CardCollectionModel } from \"../model/card-collection.model\";\nimport { Card, CardModel } from \"../model/card.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CollectionService {\n  private database: Database;\n\n  constructor(databaseService: DatabaseService) {\n    this.database = databaseService.database;\n  }\n\n  async getCollections(): Promise {\n    try {\n      return await this.database.cardCollections\n        .orderBy(\"label\")\n        .toArray((collections: CardCollectionModel[]) => {\n          const filledCollectionPromises = collections.map((collection) =>\n            this.loadCollectionCards(collection)\n          );\n          return Promise.all(filledCollectionPromises);\n        });\n    } catch (error) {\n      console.error(\"Unable to load card collections\", error);\n      return [];\n    }\n  }\n\n  async getCollection(id: number): Promise {\n    const cardCollection = await this.database.cardCollections.get(id);\n    return cardCollection ? this.loadCollectionCards(cardCollection) : undefined;\n  }\n\n  createCollection(collection: CardCollectionModel): Promise {\n    return this.database.cardCollections.add(collection);\n  }\n\n  updateCollection(collection: CardCollectionModel): Promise {\n    return this.database.cardCollections.put(collection);\n  }\n\n  deleteCollection(collection: number) {\n    this.database.cardCollections.delete(collection);\n  }\n\n  /**\n   * Build the Dexie request to fetch unknown cards for a collection.\n   *\n   * @param collectionId Card collection id\n   * @returns Dexie `Collection`\n   */\n  getUnknownCardRequest(collectionId?: number): Collection {\n    const request = collectionId ? { collectionId, leitnerBox: 0 } : { leitnerBox: 0 };\n    return this.database.cards.where(request);\n  }\n\n  /**\n   * Build the Dexie request to fetch known cards for a collection.\n   *\n   * @param collectionId Card collection id\n   * @returns Dexie `Collection`\n   */\n  getKnownCardRequest(collectionId: number): Collection {\n    return this.database.cards\n      .where({ collectionId })\n      .and((card) => new Card(card).isKnown());\n  }\n\n  /**\n   * Build the Dexie request to fetch cards ready for review for a collection.\n   *\n   * @param collectionId Card collection id\n   * @returns Dexie `Collection`\n   */\n  getReviewCardRequest(collectionId?: number): Collection {\n    if (collectionId) {\n      return this.database.cards\n        .where({ collectionId })\n        .and((card) => new Card(card).needsReview());\n    } else {\n      return this.database.cards\n        .toCollection()\n        .and((card: CardModel) => new Card(card).needsReview());\n    }\n  }\n\n  private async loadCollectionCards(\n    collection: CardCollectionModel\n  ): Promise {\n    const cardCollection: CardCollection = new CardCollection(collection);\n    await this.database.cards\n      .where({ collectionId: collection.id })\n      .toArray((cards) => cardCollection.addCards(cards));\n    return cardCollection;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionStats.html":{"url":"interfaces/CollectionStats.html","title":"interface - CollectionStats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionStats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/statistics.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known\n                                        \n                                \n                                \n                                        \n                                            toLearn\n                                        \n                                \n                                \n                                        \n                                            toReview\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toLearn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toLearn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toReview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toReview:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CollectionStats {\n  toLearn: number;\n  toReview: number;\n  known: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-confirm-dialog\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                InlineConfirmDialogComponent\n                            MatDialogModule\n                \n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfirmDialogConfig, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfirmDialogConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfirmDialogConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from \"@angular/material/dialog\";\nimport { ButtonType } from \"../../button/button.types\";\nimport { InlineConfirmDialogComponent } from \"../inline-confirm-dialog/inline-confirm-dialog.component\";\n\ninterface ConfirmDialogConfig {\n  confirmText?: string;\n  cancelText?: string;\n  confirmType: ButtonType;\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: \"chf-confirm-dialog\",\n  standalone: true,\n  imports: [InlineConfirmDialogComponent, MatDialogModule],\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.scss\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public config: ConfirmDialogConfig,\n    public dialogRef: MatDialogRef\n  ) {}\n}\n\n    \n\n    \n        \n  \n    {{ config.title }}\n    {{ config.message }}\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ config.title }}    {{ config.message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmDialogConfig.html":{"url":"interfaces/ConfirmDialogConfig.html","title":"interface - ConfirmDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                        \n                                            confirmType\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmType:         ButtonType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ButtonType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from \"@angular/material/dialog\";\nimport { ButtonType } from \"../../button/button.types\";\nimport { InlineConfirmDialogComponent } from \"../inline-confirm-dialog/inline-confirm-dialog.component\";\n\ninterface ConfirmDialogConfig {\n  confirmText?: string;\n  cancelText?: string;\n  confirmType: ButtonType;\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: \"chf-confirm-dialog\",\n  standalone: true,\n  imports: [InlineConfirmDialogComponent, MatDialogModule],\n  templateUrl: \"./confirm-dialog.component.html\",\n  styleUrls: [\"./confirm-dialog.component.scss\"],\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public config: ConfirmDialogConfig,\n    public dialogRef: MatDialogRef\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlValueAccessorComponent.html":{"url":"classes/ControlValueAccessorComponent.html","title":"class - ControlValueAccessorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlValueAccessorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/control-value-accessor-component.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                    Optional\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Callback\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/control-value-accessor-component.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/control-value-accessor-component.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: Callback)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/control-value-accessor-component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Callback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/control-value-accessor-component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/control-value-accessor-component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(newValue: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/control-value-accessor-component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/control-value-accessor-component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from \"@angular/forms\";\n\ntype Callback = (value: T) => void;\n\nexport class ControlValueAccessorComponent implements ControlValueAccessor {\n  public value!: T;\n  private propagateChange: Callback = () => {\n    // Do nothing\n  };\n\n  public writeValue(value: T): void {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: Callback): void {\n    this.propagateChange = fn;\n  }\n\n  public registerOnTouched(): void {\n    // Do nothing\n  }\n\n  public setDisabledState?(): void {\n    // Do nothing\n  }\n\n  public updateValue(newValue: T) {\n    this.value = newValue;\n    this.propagateChange(this.value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Database.html":{"url":"classes/Database.html","title":"class - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/db/database.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Dexie\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardCollections\n                            \n                            \n                                    Public\n                                cards\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAndRebuild\n                            \n                            \n                                    Private\n                                    Async\n                                populate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/db/database.model.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardCollections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/db/database.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/db/database.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/db/database.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAndRebuild\n                        \n                    \n                \n            \n            \n                \ndeleteAndRebuild()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/db/database.model.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        populate\n                        \n                    \n                \n            \n            \n                \n                    \n                    populate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/db/database.model.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dayjs from \"dayjs\";\nimport Dexie, { Table } from \"dexie\";\nimport { environment } from \"src/environments/environment\";\nimport { CardCollectionModel } from \"../model/card-collection.model\";\nimport { CardModel } from \"../model/card.model\";\nimport { SettingsModel } from \"../model/settings.model\";\nimport { upgrades } from \"./database-upgrades\";\n\nconst schema = {\n  cardCollections: \"++id, label\",\n  cards: \"++id, collectionId, leitnerBox, [collectionId+leitnerBox]\",\n  settings: \"++id\",\n};\n\nexport class Database extends Dexie {\n  public cards!: Table;\n  public cardCollections!: Table;\n  public settings!: Table;\n\n  constructor() {\n    super(\"chinese-cards\");\n    this.version(environment.dbVersion)\n      .stores(schema)\n      .upgrade(upgrades[environment.dbVersion]);\n\n    if (!environment.production) {\n      this.on(\"populate\", () => this.populate());\n    }\n  }\n\n  deleteAndRebuild(): Promise {\n    this.delete();\n    this.version(environment.dbVersion).stores(schema);\n    return this.open();\n  }\n\n  private async populate() {\n    console.info(\"Populating database with demo cards and collections\");\n    const firstCollection = await this.cardCollections.add({\n      label: \"Animals\",\n    });\n    await this.cards.bulkAdd([\n      {\n        meanings: [\"Horse\"],\n        pinyin: \"mǎ\",\n        characters: \"马\",\n        collectionId: firstCollection,\n        leitnerBox: 5,\n        lastSession: dayjs().subtract(4, \"day\").toISOString(),\n      },\n      {\n        meanings: [\"Goat\"],\n        pinyin: \"yáng\",\n        characters: \"羊\",\n        collectionId: firstCollection,\n        leitnerBox: 2,\n        lastSession: dayjs().subtract(10, \"day\").toISOString(),\n      },\n      {\n        meanings: [\"Rooster\"],\n        pinyin: \"gōng jī\",\n        characters: \"公鸡\",\n        collectionId: firstCollection,\n        leitnerBox: 4,\n        lastSession: dayjs().subtract(10, \"day\").toISOString(),\n      },\n      {\n        meanings: [\"Dog\"],\n        pinyin: \"gǒu\",\n        characters: \"狗\",\n        collectionId: firstCollection,\n        leitnerBox: 0,\n      },\n    ]);\n\n    const secondCollection = await this.cardCollections.add({\n      label: \"Numbers\",\n    });\n    await this.cards.bulkAdd([\n      {\n        meanings: [\"One\", \"First\"],\n        pinyin: \"yī\",\n        characters: \"一\",\n        collectionId: secondCollection,\n        leitnerBox: 3,\n        lastSession: dayjs().toISOString(),\n      },\n      {\n        meanings: [\"Two\"],\n        pinyin: \"èr\",\n        characters: \"二\",\n        collectionId: secondCollection,\n        leitnerBox: 1,\n        lastSession: dayjs().toISOString(),\n      },\n      {\n        meanings: [\"Three\"],\n        pinyin: \"sān\",\n        characters: \"三\",\n        collectionId: secondCollection,\n        leitnerBox: 3,\n        lastSession: dayjs().toISOString(),\n      },\n      {\n        meanings: [\"Four\"],\n        pinyin: \"sì\",\n        characters: \"四\",\n        collectionId: secondCollection,\n        leitnerBox: 0,\n      },\n      {\n        meanings: [\"Five\"],\n        pinyin: \"wǔ\",\n        characters: \"五\",\n        collectionId: secondCollection,\n        leitnerBox: 0,\n      },\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/db/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabase\n                            \n                            \n                                    Async\n                                exportAsFile\n                            \n                            \n                                syncWithCloud\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/db/database.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \nclearDatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/db/database.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportAsFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportAsFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/db/database.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncWithCloud\n                        \n                    \n                \n            \n            \n                \nsyncWithCloud()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/db/database.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Database()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/db/database.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { downloadFile } from \"../utils/file.utils\";\nimport { Database } from \"./database.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseService {\n  public readonly database = new Database();\n\n  constructor() {\n    this.database.open();\n  }\n\n  syncWithCloud(): void {\n    // TODO: synchronize with Dexie cloud\n  }\n\n  async exportAsFile(): Promise {\n    const collections = await this.database.cardCollections.toArray();\n    const cards = await this.database.cards.toArray();\n    const settings = await this.database.settings.toCollection().first();\n\n    const collectionsBackup = collections.map((collection) => ({\n      ...collection,\n      cards: cards.filter((card) => card.collectionId === collection.id),\n    }));\n\n    const backup = { settings, collections: collectionsBackup };\n    downloadFile(\"chinese-flashcards-backup.json\", JSON.stringify(backup));\n  }\n\n  clearDatabase(): Promise {\n    return this.database.deleteAndRebuild();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InlineConfirmDialogComponent.html":{"url":"components/InlineConfirmDialogComponent.html","title":"component - InlineConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InlineConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-inline-confirm-dialog\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./inline-confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./inline-confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelText\n                            \n                            \n                                confirmText\n                            \n                            \n                                confirmType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                            \n                                confirmed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmType\n                    \n                \n                \n                    \n                        Type :         ButtonType\n\n                    \n                \n                \n                    \n                        Default value : \"primary\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ButtonComponent } from \"../../button/button.component\";\nimport { ButtonType } from \"../../button/button.types\";\n\n@Component({\n  selector: \"chf-inline-confirm-dialog\",\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: \"./inline-confirm-dialog.component.html\",\n  styleUrls: [\"./inline-confirm-dialog.component.scss\"],\n})\nexport class InlineConfirmDialogComponent {\n  @Input() confirmText?: string;\n  @Input() cancelText?: string;\n  @Input() confirmType: ButtonType = \"primary\";\n  @Output() cancelled = new EventEmitter();\n  @Output() confirmed = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n\n\n  \n\n\n  {{ cancelText }}\n  \n    {{ confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./inline-confirm-dialog.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.title {\n  font-size: x-large;\n  font-weight: bold;\n  line-height: 2rem;\n}\n\n.actions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ cancelText }}      {{ confirmText }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'InlineConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/JoinPipe.html":{"url":"pipes/JoinPipe.html","title":"pipe - JoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  JoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/join.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        join\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(values: string[], delimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/pipes/join.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"join\",\n  standalone: true,\n})\nexport class JoinPipe implements PipeTransform {\n  transform(values: string[], delimiter: string): unknown {\n    return values.join(delimiter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnPageModule.html":{"url":"modules/LearnPageModule.html","title":"module - LearnPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LearnPageModule\n\n\n\ncluster_LearnPageModule_imports\n\n\n\ncluster_LearnPageModule_declarations\n\n\n\n\nSessionComponent\n\nSessionComponent\n\n\n\nLearnPageModule\n\nLearnPageModule\n\nLearnPageModule -->\n\nSessionComponent->LearnPageModule\n\n\n\n\n\nSessionFillingStepComponent\n\nSessionFillingStepComponent\n\nLearnPageModule -->\n\nSessionFillingStepComponent->LearnPageModule\n\n\n\n\n\nSessionLauncherComponent\n\nSessionLauncherComponent\n\nLearnPageModule -->\n\nSessionLauncherComponent->LearnPageModule\n\n\n\n\n\nSessionMatchingStepComponent\n\nSessionMatchingStepComponent\n\nLearnPageModule -->\n\nSessionMatchingStepComponent->LearnPageModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nLearnPageModule -->\n\nButtonComponent->LearnPageModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nLearnPageModule -->\n\nCardComponent->LearnPageModule\n\n\n\n\n\nCardDifficultyComponent\n\nCardDifficultyComponent\n\nLearnPageModule -->\n\nCardDifficultyComponent->LearnPageModule\n\n\n\n\n\nCardMeaningsPipe\n\nCardMeaningsPipe\n\nLearnPageModule -->\n\nCardMeaningsPipe->LearnPageModule\n\n\n\n\n\nCardProgressIndicatorComponent\n\nCardProgressIndicatorComponent\n\nLearnPageModule -->\n\nCardProgressIndicatorComponent->LearnPageModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nLearnPageModule -->\n\nConfirmDialogComponent->LearnPageModule\n\n\n\n\n\nPinyinFormFieldComponent\n\nPinyinFormFieldComponent\n\nLearnPageModule -->\n\nPinyinFormFieldComponent->LearnPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/learn/learn-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SessionComponent\n                        \n                        \n                            SessionFillingStepComponent\n                        \n                        \n                            SessionLauncherComponent\n                        \n                        \n                            SessionMatchingStepComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDifficultyComponent\n                        \n                        \n                            CardMeaningsPipe\n                        \n                        \n                            CardProgressIndicatorComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            PinyinFormFieldComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { RouterModule } from \"@angular/router\";\nimport { CardMeaningsPipe } from \"@core/pipes/card-meanings.pipe\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { NgCircleProgressModule } from \"ng-circle-progress\";\nimport { ButtonComponent } from \"src/app/components/button/button.component\";\nimport { CardComponent } from \"src/app/components/card/card.component\";\nimport { ConfirmDialogComponent } from \"src/app/components/dialog/confirm-dialog/confirm-dialog.component\";\nimport { PinyinFormFieldComponent } from \"src/app/components/pinyin-form-field/pinyin-form-field.component\";\nimport { CardDifficultyComponent } from \"../shared/components/card-difficulty/card-difficulty.component\";\nimport { CardProgressIndicatorComponent } from \"../shared/components/card-progress-indicator/card-progress-indicator.component\";\nimport { SessionLauncherComponent } from \"./session-launcher/session-launcher.component\";\nimport { SessionFillingStepComponent } from \"./session/session-filling-step/session-filling-step.component\";\nimport { SessionMatchingStepComponent } from \"./session/session-matching-step/session-matching-step.component\";\nimport { SessionComponent } from \"./session/session.component\";\n\n@NgModule({\n  declarations: [\n    SessionLauncherComponent,\n    SessionComponent,\n    SessionMatchingStepComponent,\n    SessionFillingStepComponent,\n  ],\n  imports: [\n    ButtonComponent,\n    CardComponent,\n    CardDifficultyComponent,\n    CardMeaningsPipe,\n    CardProgressIndicatorComponent,\n    CommonModule,\n    ConfirmDialogComponent,\n    FontAwesomeModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    NgCircleProgressModule,\n    PinyinFormFieldComponent,\n    RouterModule,\n  ],\n})\nexport class LearnPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LearningSessionService.html":{"url":"injectables/LearningSessionService.html","title":"injectable - LearningSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LearningSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/learning-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                currentSession\n                            \n                            \n                                    Public\n                                    Readonly\n                                sessionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLearningSession\n                            \n                            \n                                    Async\n                                createReviewSession\n                            \n                            \n                                    Private\n                                getWordsPerSession\n                            \n                            \n                                    Public\n                                isLearningSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionService: CollectionService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/learning-session.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLearningSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLearningSession(collection?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/learning-session.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReviewSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReviewSession(collection?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/learning-session.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getWordsPerSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWordsPerSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/learning-session.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLearningSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLearningSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/learning-session.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/learning-session.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        sessionType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"learn\")\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/learning-session.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Card } from \"../model/card.model\";\nimport { CollectionService } from \"./collection.service\";\nimport { SettingsService } from \"./settings.service\";\n\ntype SessionType = \"review\" | \"learn\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LearningSessionService {\n  public readonly currentSession = new BehaviorSubject([]);\n  public readonly sessionType = new BehaviorSubject(\"learn\");\n\n  constructor(\n    private collectionService: CollectionService,\n    private settingsService: SettingsService\n  ) {}\n\n  async createLearningSession(collection?: number): Promise {\n    const cards = await this.collectionService\n      .getUnknownCardRequest(collection)\n      .limit(await this.getWordsPerSession())\n      .toArray();\n\n    this.sessionType.next(\"learn\");\n\n    return cards.map((card) => new Card(card));\n  }\n\n  async createReviewSession(collection?: number): Promise {\n    const settings = await this.settingsService.getSettings();\n    const cards = await this.collectionService\n      .getReviewCardRequest(collection)\n      .sortBy(\"leitnerBox\");\n\n    if (settings.cardSelectionType === \"oldest\") {\n      cards.reverse();\n    }\n\n    this.sessionType.next(\"review\");\n\n    return cards.slice(0, settings.wordsPerSession).map((card) => new Card(card));\n  }\n\n  public isLearningSession(): boolean {\n    return this.sessionType.getValue() === \"learn\";\n  }\n\n  private getWordsPerSession(): Promise {\n    return this.settingsService\n      .getSettings()\n      .then((settings) => settings.wordsPerSession);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LongPressDirective.html":{"url":"directives/LongPressDirective.html","title":"directive - LongPressDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LongPressDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/virtual-keyboard/long-press.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [chfLongPress]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                events$\n                            \n                            \n                                    Private\n                                pressDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                longPress\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/virtual-keyboard/long-press.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        longPress\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/virtual-keyboard/long-press.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/virtual-keyboard/long-press.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        events$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/long-press.directive.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pressDuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/long-press.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from \"@angular/core\";\nimport { filter, fromEvent, map, merge, of, Subscription, switchMap, timer } from \"rxjs\";\n\n@Directive({\n  selector: \"[chfLongPress]\",\n  standalone: true,\n})\nexport class LongPressDirective implements OnDestroy {\n  @Output() longPress = new EventEmitter();\n\n  private events$: Subscription;\n  private pressDuration = 500;\n\n  constructor(elementRef: ElementRef) {\n    const mouseDown$ = fromEvent(elementRef.nativeElement, \"mousedown\").pipe(\n      filter((event) => event.button === 0), // Only allow left button\n      map(() => true)\n    );\n\n    const mouseUp$ = fromEvent(elementRef.nativeElement, \"mouseup\").pipe(\n      filter((event) => event.button === 0), // Only allow left button\n      map(() => false)\n    );\n\n    const touchStart$ = fromEvent(elementRef.nativeElement, \"touchstart\").pipe(\n      map(() => true)\n    );\n\n    const touchEnd$ = fromEvent(elementRef.nativeElement, \"touchend\").pipe(\n      map(() => false)\n    );\n\n    this.events$ = merge(mouseDown$, mouseUp$, touchStart$, touchEnd$)\n      .pipe(\n        switchMap((isPressing) => (isPressing ? timer(this.pressDuration) : of(null))),\n        filter((value) => value !== null)\n      )\n      .subscribe(() => this.longPress.emit());\n  }\n\n  ngOnDestroy(): void {\n    if (this.events$) {\n      this.events$.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchingCard.html":{"url":"interfaces/MatchingCard.html","title":"interface - MatchingCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MatchingCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            card\n                                        \n                                \n                                \n                                        \n                                            matched\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        card:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matched\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Card } from \"@core/model/card.model\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { shuffleArray } from \"@core/utils/general.utils\";\n\ninterface MatchingCard {\n  card: Card;\n  matched: boolean;\n}\n\n@Component({\n  selector: \"chf-session-matching-step\",\n  templateUrl: \"./session-matching-step.component.html\",\n  styleUrls: [\"./session-matching-step.component.scss\"],\n})\nexport class SessionMatchingStepComponent implements OnInit {\n  @Input() cards: Card[] = [];\n  @Input() repeat = 1;\n  @Output() completed = new EventEmitter();\n\n  public matchingPages: Card[][] = [];\n  public leftColumnCards: MatchingCard[] = [];\n  public rightColumnCards: MatchingCard[] = [];\n  public selectedLeftCard?: MatchingCard;\n  public selectedRightCard?: MatchingCard;\n\n  constructor(navigationService: NavigationService) {\n    navigationService.setNavbarText(\n      \"Match cards on the left with their translation on the right\",\n      \"description\"\n    );\n  }\n\n  ngOnInit(): void {\n    for (let i = 0; i  matched);\n      if (allMatched) {\n        this.learnNewPage();\n      }\n    }\n  }\n\n  /**\n   * Split the cards into pages of 5 elements.\n   *\n   * @param cards All the cards to match during this session\n   * @returns A randomized set of pages\n   */\n  private buildStepPages(cards: Card[]): Card[][] {\n    const toSplit = shuffleArray(cards);\n    const pages: Card[][] = [];\n    while (toSplit.length) {\n      pages.push(toSplit.splice(0, 5));\n    }\n\n    return pages;\n  }\n\n  /**\n   * Emit the `completed` event if all cards have been repeated or\n   * load two new columns of cards to match.\n   */\n  private learnNewPage(): void {\n    if (this.matchingPages.length) {\n      const page: Card[] = this.matchingPages.splice(0, 1)[0];\n      this.leftColumnCards = shuffleArray(page.map((card) => ({ card, matched: false })));\n      this.rightColumnCards = shuffleArray(\n        page.map((card) => ({ card, matched: false }))\n      );\n    } else {\n      this.completed.emit();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-navbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                importedModules\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navbarText$\n                            \n                            \n                                    Public\n                                navbarType$\n                            \n                            \n                                    Public\n                                navbarVisible$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigation: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigation\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navbarText$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navbarType$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : of()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navbarVisible$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { NavbarType, NavigationService } from \"@core/services/navigation.service\";\nimport { Observable, of } from \"rxjs\";\n\nconst importedModules = [CommonModule, MatButtonModule, MatIconModule];\n\n@Component({\n  selector: \"chf-navbar\",\n  standalone: true,\n  imports: importedModules,\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.scss\"],\n})\nexport class NavbarComponent {\n  public navbarType$: Observable = of();\n  public navbarText$: Observable = of();\n  public navbarVisible$: Observable = of();\n\n  constructor(navigation: NavigationService) {\n    this.navbarType$ = navigation.navbarType.asObservable();\n    this.navbarText$ = navigation.navbarText.asObservable();\n    this.navbarVisible$ = navigation.navbarVisible.asObservable();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{ navbarText$ | async }}\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .navbar {\n  background-color: var(--app-bg-color);\n  color: var(--app-fg-color);\n  font-family: var(--font-title);\n  padding: 0.6rem 0.7rem;\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    height: 50px;\n  }\n}\n\n.main {\n  font-size: x-large;\n  font-weight: 600;\n  width: fit-content;\n}\n\n.description {\n  color: gray;\n  font-size: 0.9rem;\n  font-family: var(--font-content);\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ navbarText$ | async }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                APP_NAME\n                            \n                            \n                                    Public\n                                    Readonly\n                                navbarText\n                            \n                            \n                                    Public\n                                    Readonly\n                                navbarType\n                            \n                            \n                                    Public\n                                    Readonly\n                                navbarVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetNavbarText\n                            \n                            \n                                setNavbarText\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/navigation.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetNavbarText\n                        \n                    \n                \n            \n            \n                \nresetNavbarText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/navigation.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNavbarText\n                        \n                    \n                \n            \n            \n                \nsetNavbarText(text: string, type: NavbarType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/navigation.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                NavbarType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/navigation.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        APP_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Chinese Flashcards\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/navigation.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        navbarText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/navigation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        navbarType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"main\")\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/navigation.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        navbarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/navigation.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { BehaviorSubject } from \"rxjs\";\n\nexport type NavbarType = \"main\" | \"description\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NavigationService {\n  public static readonly APP_NAME = \"Chinese Flashcards\";\n  public readonly navbarType = new BehaviorSubject(\"main\");\n  public readonly navbarText = new BehaviorSubject(\"\");\n  public readonly navbarVisible = new BehaviorSubject(true);\n\n  constructor(private titleService: Title) {}\n\n  setTitle(title: string): void {\n    this.titleService.setTitle(NavigationService.APP_NAME + \" | \" + title);\n  }\n\n  resetNavbarText(): void {\n    this.setNavbarText(NavigationService.APP_NAME, \"main\");\n  }\n\n  setNavbarText(text: string, type: NavbarType): void {\n    this.navbarType.next(type);\n    this.navbarText.next(text);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PendingChangesComponent.html":{"url":"interfaces/PendingChangesComponent.html","title":"interface - PendingChangesComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PendingChangesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/pending-changes.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canDeactivate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canDeactivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanDeactivateFn } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\n\nexport interface PendingChangesComponent {\n  canDeactivate: () => Observable;\n}\n\nexport const PendingChangesGuard: CanDeactivateFn = (\n  component: PendingChangesComponent\n): Observable => component.canDeactivate();\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PinyinFormFieldComponent.html":{"url":"components/PinyinFormFieldComponent.html","title":"component - PinyinFormFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PinyinFormFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pinyin-form-field/pinyin-form-field.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PinyinFormFieldComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                chf-pinyin-form-field\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                modules\n                \n            \n\n            \n                styleUrls\n                ./pinyin-form-field.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pinyin-form-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                fieldValue\n                            \n                            \n                                    Public\n                                keyboardIcon\n                            \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                    Public\n                                virtualKeyboardOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                removePinyinCharacter\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                updateValue\n                            \n                            \n                                writePinyinCharacter\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: PropagateFct)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                PropagateFct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePinyinCharacter\n                        \n                    \n                \n            \n            \n                \nremovePinyinCharacter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValue\n                        \n                    \n                \n            \n            \n                \nupdateValue(newValue?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writePinyinCharacter\n                        \n                    \n                \n            \n            \n                \nwritePinyinCharacter(character: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(newValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        fieldValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        keyboardIcon\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faKeyboard\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PropagateFct\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        virtualKeyboardOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pinyin-form-field/pinyin-form-field.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgIf } from \"@angular/common\";\nimport { Component, forwardRef } from \"@angular/core\";\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { faKeyboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { VirtualKeyboardComponent } from \"../virtual-keyboard/virtual-keyboard.component\";\n\nconst modules = [\n  FontAwesomeModule,\n  FormsModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  NgIf,\n  VirtualKeyboardComponent,\n];\n\ntype PropagateFct = (_?: string) => void;\n\n@Component({\n  selector: \"chf-pinyin-form-field\",\n  standalone: true,\n  imports: modules,\n  templateUrl: \"./pinyin-form-field.component.html\",\n  styleUrls: [\"./pinyin-form-field.component.scss\"],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PinyinFormFieldComponent),\n      multi: true,\n    },\n  ],\n})\nexport class PinyinFormFieldComponent implements ControlValueAccessor {\n  public virtualKeyboardOpen = false;\n  public fieldValue?: string;\n  public keyboardIcon = faKeyboard;\n\n  private propagateChange: PropagateFct = () => {\n    // Do nothing\n  };\n\n  writePinyinCharacter(character: string): void {\n    this.updateValue((this.fieldValue ?? \"\") + character);\n  }\n\n  removePinyinCharacter(): void {\n    const newValue = this.fieldValue?.length\n      ? this.fieldValue.substring(0, this.fieldValue.length - 1)\n      : undefined;\n    this.updateValue(newValue);\n  }\n\n  updateValue(newValue?: string): void {\n    this.fieldValue = newValue;\n    this.propagateChange(newValue);\n  }\n\n  writeValue(newValue: string): void {\n    this.fieldValue = newValue;\n  }\n\n  registerOnChange(fn: PropagateFct): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(): void {\n    // Do nothing\n  }\n\n  setDisabledState(): void {\n    // Do nothing\n  }\n}\n\n    \n\n    \n        \n  Pinyin\n  \n  \n    \n  \n  \n    Close the virtual keyboard to edit this field\n  \n\n\n\n\n    \n\n    \n                \n                    ./pinyin-form-field.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\n.pinyin-field {\n  font-family: \"Ubuntu Mono\", Raleway !important;\n  font-size: 1.25em !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pinyin                Close the virtual keyboard to edit this field  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'PinyinFormFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionCard.html":{"url":"classes/SessionCard.html","title":"class - SessionCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/learn/session/session-card.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentRepetitions\n                            \n                            \n                                mistakes\n                            \n                            \n                                numberOfRepetitions\n                            \n                            \n                                sessionProgress\n                            \n                            \n                                sessionResultIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDifficulty\n                            \n                            \n                                endSession\n                            \n                            \n                                    Private\n                                getDefaultRepetitions\n                            \n                            \n                                    Private\n                                getNumberOfRepetitions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    pinyin\n                                \n                                \n                                    characters\n                                \n                                \n                                    nextReview\n                                \n                                \n                                    isCompleted\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/learn/session/session-card.model.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentRepetitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mistakes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfRepetitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionProgress\n\n                    \n                \n                \n                    \n                        Default value : \"flat\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionResultIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : faArrowRight\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-card.model.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDifficulty\n                        \n                    \n                \n            \n            \n                \nchangeDifficulty(difficulty: CardDifficultyLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-card.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    difficulty\n                                    \n                                                CardDifficultyLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endSession\n                        \n                    \n                \n            \n            \n                \nendSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-card.model.ts:68\n                \n            \n\n\n            \n                \n                    Computes the new Leitner box based on the number of mistakes.\n0 mistake: move to the next box\n1 mistake: stay in the same box\n2+ mistakes: move to the previous box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultRepetitions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultRepetitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-card.model.ts:105\n                \n            \n\n\n            \n                \n                    Gets the number of repetitions based on the Leitner box.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Number of repetitions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNumberOfRepetitions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfRepetitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-card.model.ts:87\n                \n            \n\n\n            \n                \n                    Gets the number of repetitions required to learn the card\nbased on the difficulty (if set) or the Leitner box.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Number of repetitions\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/learn/session/session-card.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pinyin\n                    \n                \n\n                \n                    \n                        getpinyin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/learn/session/session-card.model.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        characters\n                    \n                \n\n                \n                    \n                        getcharacters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/learn/session/session-card.model.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextReview\n                    \n                \n\n                \n                    \n                        getnextReview()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/learn/session/session-card.model.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isCompleted\n                    \n                \n\n                \n                    \n                        getisCompleted()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/learn/session/session-card.model.ts:40\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Card, CardDifficultyLevel } from \"@core/model/card.model\";\nimport {\n  IconDefinition,\n  faArrowRight,\n  faArrowTrendDown,\n  faArrowTrendUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport * as dayjs from \"dayjs\";\n\nconst EASY_REPS = 2;\nconst MEDIUM_REPS = 3;\nconst HARD_REPS = 4;\n\ntype SessionProgress = \"up\" | \"down\" | \"flat\";\n\nexport class SessionCard {\n  card: Card;\n  mistakes: number;\n  numberOfRepetitions = 0;\n  currentRepetitions = 0;\n  sessionResultIcon: IconDefinition = faArrowRight;\n  sessionProgress: SessionProgress = \"flat\";\n\n  get id(): number {\n    return this.card.id ?? 0;\n  }\n\n  get pinyin(): string | undefined {\n    return this.card.pinyin;\n  }\n\n  get characters(): string | undefined {\n    return this.card.characters;\n  }\n\n  get nextReview(): number {\n    return this.card.nextReviewInDays();\n  }\n\n  get isCompleted(): boolean {\n    return this.currentRepetitions >= this.numberOfRepetitions;\n  }\n\n  constructor(card: Card) {\n    this.card = card;\n    this.mistakes = 0;\n    this.numberOfRepetitions = this.getNumberOfRepetitions();\n  }\n\n  changeDifficulty(difficulty: CardDifficultyLevel): void {\n    if (this.card.difficulty === difficulty) {\n      this.card.difficulty = undefined;\n    } else {\n      this.card.difficulty = difficulty;\n    }\n    this.numberOfRepetitions = this.getNumberOfRepetitions();\n    if (this.currentRepetitions > this.numberOfRepetitions) {\n      this.currentRepetitions = this.numberOfRepetitions;\n    }\n  }\n\n  /**\n   * Computes the new Leitner box based on the number of mistakes.\n   * 0 mistake: move to the next box\n   * 1 mistake: stay in the same box\n   * 2+ mistakes: move to the previous box\n   */\n  endSession(): void {\n    if (this.mistakes === 0) {\n      this.sessionProgress = \"up\";\n      this.card.moveNextBox();\n      this.sessionResultIcon = faArrowTrendUp;\n    } else if (this.mistakes > 1) {\n      this.sessionProgress = \"down\";\n      this.card.movePreviousBox();\n      this.sessionResultIcon = faArrowTrendDown;\n    }\n    this.card.lastSession = dayjs().toISOString();\n  }\n\n  /**\n   * Gets the number of repetitions required to learn the card\n   * based on the difficulty (if set) or the Leitner box.\n   *\n   * @returns Number of repetitions\n   */\n  private getNumberOfRepetitions(): number {\n    switch (this.card.difficulty) {\n      case \"easy\":\n        return EASY_REPS;\n      case \"medium\":\n        return MEDIUM_REPS;\n      case \"hard\":\n        return HARD_REPS;\n      default:\n        return this.getDefaultRepetitions();\n    }\n  }\n\n  /**\n   * Gets the number of repetitions based on the Leitner box.\n   *\n   * @returns  Number of repetitions\n   */\n  private getDefaultRepetitions(): number {\n    if (this.card.leitnerBox \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionComponent.html":{"url":"components/SessionComponent.html","title":"component - SessionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/learn/session/session.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    PendingChangesComponent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-session\n            \n\n\n\n            \n                styleUrls\n                ./session.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./session.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                invalidSession\n                            \n                            \n                                    Public\n                                isFillingStep\n                            \n                            \n                                    Public\n                                isMatchingStep\n                            \n                            \n                                    Public\n                                isSessionDone\n                            \n                            \n                                    Public\n                                sessionCards\n                            \n                            \n                                    Public\n                                sessionResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                            \n                                matchingCompleted\n                            \n                            \n                                sessionCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cardService: CardService, dialog: MatDialog, router: Router, tabBarService: TabBarService, navigationService: NavigationService, learningSessionService: LearningSessionService, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/learn/session/session.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tabBarService\n                                                  \n                                                        \n                                                                        TabBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        learningSessionService\n                                                  \n                                                        \n                                                                        LearningSessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchingCompleted\n                        \n                    \n                \n            \n            \n                \nmatchingCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionCompleted\n                        \n                    \n                \n            \n            \n                \nsessionCompleted(cards: SessionCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            SessionCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        invalidSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFillingStep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMatchingStep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSessionDone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SessionCard[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\nimport { PendingChangesComponent } from \"@core/guards/pending-changes.guard\";\nimport { Card } from \"@core/model/card.model\";\nimport { CardService } from \"@core/services/card.service\";\nimport { LearningSessionService } from \"@core/services/learning-session.service\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { faCircleStop, faFlagCheckered } from \"@fortawesome/free-solid-svg-icons\";\nimport { Observable, map, of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"src/app/components/dialog/confirm-dialog/confirm-dialog.component\";\nimport { TabBarService } from \"src/app/components/tab-bar/tab-bar.service\";\nimport { SessionCard } from \"./session-card.model\";\n\n@Component({\n  selector: \"chf-session\",\n  templateUrl: \"./session.component.html\",\n  styleUrls: [\"./session.component.scss\"],\n})\nexport class SessionComponent implements PendingChangesComponent {\n  public sessionCards: Card[] = [];\n  public isMatchingStep = false;\n  public isFillingStep = false;\n  public isSessionDone = false;\n  public sessionResults: SessionCard[] = [];\n\n  private invalidSession = false;\n\n  constructor(\n    private cardService: CardService,\n    private dialog: MatDialog,\n    private router: Router,\n    private tabBarService: TabBarService,\n    private navigationService: NavigationService,\n    learningSessionService: LearningSessionService,\n    settingsService: SettingsService\n  ) {\n    navigationService.setTitle(\"Learning session\");\n    this.sessionCards = learningSessionService.currentSession.getValue();\n    if (!this.sessionCards.length) {\n      this.invalidSession = true;\n      router.navigateByUrl(\"/sessions\");\n    }\n    settingsService.getSettings().then((settings) => {\n      this.isMatchingStep =\n        learningSessionService.isLearningSession() || settings.enableReviewMatching;\n      this.isFillingStep = !this.isMatchingStep;\n    });\n    tabBarService.setActions([\n      {\n        icon: faCircleStop,\n        label: \"Cancel session\",\n        action: () => router.navigateByUrl(\"/sessions\"),\n      },\n    ]);\n  }\n\n  canDeactivate(): Observable {\n    return this.invalidSession || this.isSessionDone\n      ? of(true)\n      : this.dialog\n          .open(ConfirmDialogComponent, {\n            data: {\n              confirmType: \"primary\",\n              confirmText: \"Yes, stop this session\",\n              cancelText: \"I changed my mind\",\n              title: \"Cancel the session\",\n              message: \"You will lose any progress made during the session.\",\n            },\n          })\n          .afterClosed()\n          // Need to use a pipe because \"undefined\" does not prevent the route change\n          .pipe(map((confirmed) => !!confirmed));\n  }\n\n  matchingCompleted(): void {\n    this.isMatchingStep = false;\n    this.isFillingStep = true;\n  }\n\n  sessionCompleted(cards: SessionCard[]): void {\n    this.isFillingStep = false;\n    this.isSessionDone = true;\n    this.sessionResults = cards;\n    const toUpdate: Card[] = [];\n    cards.forEach((sessionCard) => {\n      sessionCard.endSession();\n      toUpdate.push(sessionCard.card);\n    });\n    this.cardService.updateCards(toUpdate);\n    this.tabBarService.setActions([\n      {\n        icon: faFlagCheckered,\n        label: \"End session\",\n        action: () => this.router.navigateByUrl(\"/sessions\"),\n      },\n    ]);\n    this.navigationService.setNavbarText(\"Session completed!\", \"main\");\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n      {{ card.characters ?? card.pinyin }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./session.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n  box-sizing: border-box;\n}\n\n.card-result-row {\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  height: 35px;\n\n  div {\n    width: 30vw;\n    text-align: center;\n  }\n\n  .progress {\n    &.up {\n      color: #36d336;\n    }\n\n    &.down {\n      color: red;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ card.characters ?? card.pinyin }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SessionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionFillingStepComponent.html":{"url":"components/SessionFillingStepComponent.html","title":"component - SessionFillingStepComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionFillingStepComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-session-filling-step\n            \n\n\n\n            \n                styleUrls\n                ./session-filling-step.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./session-filling-step.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardRevealed\n                            \n                            \n                                    Public\n                                    Optional\n                                characterInput\n                            \n                            \n                                    Public\n                                    Optional\n                                currentCard\n                            \n                            \n                                    Public\n                                    Readonly\n                                icons\n                            \n                            \n                                    Public\n                                isMistake\n                            \n                            \n                                    Public\n                                learnPinyin\n                            \n                            \n                                    Public\n                                    Optional\n                                pinyinInput\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                sessionCards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildSessionCards\n                            \n                            \n                                    Public\n                                changeDifficulty\n                            \n                            \n                                    Public\n                                checkResponse\n                            \n                            \n                                    Public\n                                nextCard\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                reveal\n                            \n                            \n                                    Private\n                                updateSessionCards\n                            \n                            \n                                    Private\n                                wrongAnswer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settingsService: SettingsService, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cards\n                    \n                \n                \n                    \n                        Type :         Card[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildSessionCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSessionCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeDifficulty\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeDifficulty(difficulty: CardDifficultyLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    difficulty\n                                    \n                                                CardDifficultyLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkResponse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nextCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reveal\n                        \n                    \n                \n            \n            \n                \n                    \n                    reveal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSessionCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSessionCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        wrongAnswer\n                        \n                    \n                \n            \n            \n                \n                    \n                    wrongAnswer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardRevealed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        characterInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    check: faCheckToSlot,\n    next: faArrowRight,\n    success: faCheckCircle,\n    failed: faCircleXmark,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMistake\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        learnPinyin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        pinyinInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionCards\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Card, CardDifficultyLevel } from \"@core/model/card.model\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport {\n  removeOnce,\n  removeTimes,\n  shuffleArray,\n  uniqueValues,\n} from \"@core/utils/general.utils\";\nimport {\n  faArrowRight,\n  faCheckCircle,\n  faCheckToSlot,\n  faCircleXmark,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { SessionCard } from \"../session-card.model\";\n\n@Component({\n  selector: \"chf-session-filling-step\",\n  templateUrl: \"./session-filling-step.component.html\",\n  styleUrls: [\"./session-filling-step.component.scss\"],\n})\nexport class SessionFillingStepComponent implements OnInit {\n  @Input() cards: Card[] = [];\n  @Output() completed = new EventEmitter();\n\n  public readonly icons = {\n    check: faCheckToSlot,\n    next: faArrowRight,\n    success: faCheckCircle,\n    failed: faCircleXmark,\n  };\n\n  public sessionCards = new Map();\n  public session: number[] = [];\n  public currentCard?: SessionCard;\n  public characterInput?: string;\n  public pinyinInput?: string;\n  public learnPinyin = true;\n  public cardRevealed = false;\n  public isMistake = false;\n\n  constructor(settingsService: SettingsService, navigationService: NavigationService) {\n    settingsService\n      .getSettings()\n      .then((settings) => (this.learnPinyin = settings.learnPinyin));\n    navigationService.navbarType.next(\"description\");\n    navigationService.navbarText.next(\n      \"Translate the card by filling in both the characters and the pinyin transcription\"\n    );\n  }\n\n  public ngOnInit(): void {\n    this.cards.forEach((card) => {\n      const sessionCard = new SessionCard(card);\n      this.sessionCards.set(sessionCard.id, sessionCard);\n    });\n\n    this.buildSessionCards();\n    this.nextCard();\n  }\n\n  public changeDifficulty(difficulty: CardDifficultyLevel): void {\n    this.currentCard?.changeDifficulty(difficulty);\n  }\n\n  public checkResponse(): void {\n    let chineseMatch = true;\n    let pinyinMatch = true;\n    if (this.currentCard) {\n      if (this.currentCard.characters) {\n        chineseMatch = this.currentCard.characters.trim() === this.characterInput?.trim();\n      }\n      if (this.currentCard.pinyin) {\n        pinyinMatch = this.currentCard.pinyin.trim() === this.pinyinInput?.trim();\n      }\n      this.isMistake = !chineseMatch || !pinyinMatch;\n      this.cardRevealed = true;\n\n      if (this.isMistake) {\n        this.wrongAnswer();\n      } else {\n        this.currentCard.currentRepetitions++;\n      }\n    }\n  }\n\n  public reveal(): void {\n    this.cardRevealed = true;\n    this.isMistake = true;\n    this.wrongAnswer();\n  }\n\n  public nextCard(): void {\n    this.updateSessionCards();\n    const nextCard = this.session.shift();\n    this.cardRevealed = false;\n    this.characterInput = undefined;\n    this.pinyinInput = undefined;\n    if (nextCard) {\n      this.currentCard = this.sessionCards.get(nextCard);\n    } else {\n      this.completed.emit([...this.sessionCards.values()]);\n    }\n  }\n\n  private wrongAnswer(): void {\n    if (this.currentCard) {\n      this.currentCard.mistakes++;\n      // Add the card to the list of the session so that it will be presented one more time\n      this.session.push(this.currentCard.id);\n    }\n  }\n\n  private buildSessionCards(): void {\n    let allCards: number[] = [];\n    this.sessionCards.forEach((sessionCard: SessionCard) => {\n      allCards = allCards.concat(\n        Array(sessionCard.numberOfRepetitions).fill(sessionCard.id)\n      );\n    });\n\n    this.session = [];\n    while (allCards.length) {\n      const uniqueCards = uniqueValues(allCards);\n      this.session.push(...shuffleArray(uniqueCards));\n      removeOnce(allCards, uniqueCards);\n    }\n  }\n\n  private updateSessionCards(): void {\n    if (this.currentCard) {\n      const expectedRemaining =\n        this.currentCard.numberOfRepetitions - this.currentCard.currentRepetitions;\n\n      if (expectedRemaining) {\n        const sessionCount = this.session.filter(\n          (card) => card === this.currentCard?.id\n        ).length;\n        if (sessionCount > expectedRemaining) {\n          this.session = removeTimes(\n            this.session,\n            this.currentCard.id,\n            sessionCount - expectedRemaining\n          );\n        } else {\n          this.session = shuffleArray(\n            this.session.concat(\n              Array(expectedRemaining - sessionCount).fill(this.currentCard.id)\n            )\n          );\n        }\n      } else {\n        this.session = this.session.filter((card) => card !== this.currentCard?.id);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Card completed for this session!\n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n            \n          \n        \n        {{ characterInput }}\n        {{ pinyinInput }}\n      \n    \n\n    \n      \n        \n          \n        \n        {{ currentCard.card.characters }}\n        {{ currentCard.card.pinyin }}\n      \n    \n\n    How did you find this card?\n    \n  \n\n  \n    \n      \n        \n          Chinese characters\n          \n        \n\n        \n          \n        \n      \n      \n        \n          \n          Check\n        \n      \n    \n  \n\n  \n    Reveal the card\n    \n      \n      Next card\n    \n  \n\n\n    \n\n    \n                \n                    ./session-filling-step.component.scss\n                \n                :host {\n  text-align: center;\n}\n\nmat-form-field,\nchf-pinyin-form-field {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\nchf-card {\n  padding: 1rem;\n  margin-bottom: 1rem;\n\n  div[card-content] {\n    position: relative;\n  }\n}\n\n.card-rep-count {\n  font-size: small;\n  color: gray;\n  text-align: right;\n}\n\n.centered-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  min-height: 50px;\n\n  span:empty {\n    display: none;\n  }\n}\n\n.translation {\n  font-size: large;\n  font-weight: 600;\n\n  .card-done-text {\n    font-size: 0.8rem;\n    color: #afafaf;\n    font-weight: normal;\n  }\n}\n\n.chinese {\n  font-size: 1.2em;\n}\n\n.helper-text {\n  font-size: small;\n  color: #c5c5c5;\n}\n\n.bottom-actions {\n  margin-top: 1.5rem;\n  display: flex;\n\n  &.centered {\n    justify-content: center;\n  }\n}\n\nchf-card-difficulty {\n  margin: 1rem 0;\n}\n\n.floating-icon {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  .passed {\n    color: #2ebd00;\n  }\n\n  .failed {\n    color: #e70000;\n  }\n\n  .solution {\n    color: #ff9100;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Card completed for this session!                                                                                          {{ characterInput }}        {{ pinyinInput }}                                                      {{ currentCard.card.characters }}        {{ currentCard.card.pinyin }}              How did you find this card?                                    Chinese characters                                                                                    Check                          Reveal the card                Next card      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SessionFillingStepComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionLauncherComponent.html":{"url":"components/SessionLauncherComponent.html","title":"component - SessionLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/learn/session-launcher/session-launcher.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-session-launcher\n            \n\n\n\n            \n                styleUrls\n                ./session-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./session-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                allCollectionStats\n                            \n                            \n                                    Public\n                                collections\n                            \n                            \n                                    Public\n                                    Optional\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                learn\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                review\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, tabBarService: TabBarService, settingsService: SettingsService, collectionService: CollectionService, statisticsService: StatisticsService, learningSessionService: LearningSessionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tabBarService\n                                                  \n                                                        \n                                                                        TabBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statisticsService\n                                                  \n                                                        \n                                                                        StatisticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        learningSessionService\n                                                  \n                                                        \n                                                                        LearningSessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        learn\n                        \n                    \n                \n            \n            \n                \n                    \n                    learn(collection?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        review\n                        \n                    \n                \n            \n            \n                \n                    \n                    review(collection?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        allCollectionStats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session-launcher/session-launcher.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { CardCollection } from \"@core/model/card-collection.model\";\nimport { Settings } from \"@core/model/settings.model\";\nimport { CollectionStats } from \"@core/model/statistics.model\";\nimport { CollectionService } from \"@core/services/collection.service\";\nimport { LearningSessionService } from \"@core/services/learning-session.service\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { StatisticsService } from \"@core/services/statistics.service\";\nimport { TabBarService } from \"src/app/components/tab-bar/tab-bar.service\";\n\n@Component({\n  selector: \"chf-session-launcher\",\n  templateUrl: \"./session-launcher.component.html\",\n  styleUrls: [\"./session-launcher.component.scss\"],\n})\nexport class SessionLauncherComponent implements OnInit {\n  public settings?: Settings;\n  public collections: Partial[] = [];\n  public allCollectionStats?: {\n    numbers: CollectionStats;\n    percents: CollectionStats;\n  };\n\n  constructor(\n    private navigationService: NavigationService,\n    private tabBarService: TabBarService,\n    private settingsService: SettingsService,\n    private collectionService: CollectionService,\n    private statisticsService: StatisticsService,\n    private learningSessionService: LearningSessionService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.navigationService.setTitle(\"Start a session\");\n    this.navigationService.resetNavbarText();\n    this.tabBarService.resetTabBar();\n\n    this.settingsService.getSettings().then((settings) => (this.settings = settings));\n    this.collectionService.getCollections().then(async (collections) => {\n      this.collections = await this.statisticsService.getCollectionsReviewStats(\n        collections\n      );\n      const numberStats: CollectionStats = {\n        toLearn: 0,\n        toReview: 0,\n        known: 0,\n      };\n      this.collections.forEach((collection) => {\n        numberStats.toLearn += collection.statistics?.toLearn ?? 0;\n        numberStats.toReview += collection.statistics?.toReview ?? 0;\n        numberStats.known += collection.statistics?.known ?? 0;\n      });\n      this.allCollectionStats = {\n        numbers: numberStats,\n        percents: CardCollection.computePercentStats(numberStats),\n      };\n      this.collections.unshift({\n        label: \"All collections\",\n        description: \"Learn or review cards from all the collections\",\n        statistics: this.allCollectionStats.numbers,\n        percentStatistics: this.allCollectionStats.percents,\n      });\n    });\n  }\n\n  async learn(collection?: number): Promise {\n    const cardsToLearn = await this.learningSessionService.createLearningSession(\n      collection\n    );\n\n    this.learningSessionService.currentSession.next(cardsToLearn);\n    this.router.navigateByUrl(\"/sessions/active\");\n  }\n\n  async review(collection?: number): Promise {\n    const cardsToReview = await this.learningSessionService.createReviewSession(\n      collection\n    );\n\n    this.learningSessionService.currentSession.next(cardsToReview);\n    this.router.navigateByUrl(\"/sessions/active\");\n  }\n}\n\n    \n\n    \n        \n  {{ collection.label }}\n  {{ collection.description }}\n  \n    \n\n    \n      \n        Learn\n      \n      \n        Review\n      \n    \n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./session-launcher.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding-bottom: 1rem;\n}\n\n$learnColor: #559d00;\n$reviewColor: #9524ff;\n$knownColor: #289dd7;\n\n.learn-button {\n  --chf-button-bg: #{$learnColor};\n}\n\n.review-button {\n  --chf-button-bg: #{$reviewColor};\n}\n\n.statistic-section {\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-evenly;\n  font-size: small;\n\n  .to-learn {\n    --chf-progress-outer-stroke: #{$learnColor};\n    --chf-progress-inner-stroke: #559d007b;\n  }\n\n  .to-review {\n    --chf-progress-outer-stroke: #{$reviewColor};\n    --chf-progress-inner-stroke: #9524ff7b;\n  }\n\n  .known {\n    --chf-progress-outer-stroke: #{$knownColor};\n    --chf-progress-inner-stroke: #289dd77b;\n  }\n}\n\n.card-actions {\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ collection.label }}  {{ collection.description }}                        Learn                    Review                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SessionLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionMatchingStepComponent.html":{"url":"components/SessionMatchingStepComponent.html","title":"component - SessionMatchingStepComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionMatchingStepComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-session-matching-step\n            \n\n\n\n            \n                styleUrls\n                ./session-matching-step.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./session-matching-step.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                leftColumnCards\n                            \n                            \n                                    Public\n                                matchingPages\n                            \n                            \n                                    Public\n                                rightColumnCards\n                            \n                            \n                                    Public\n                                    Optional\n                                selectedLeftCard\n                            \n                            \n                                    Public\n                                    Optional\n                                selectedRightCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildStepPages\n                            \n                            \n                                    Private\n                                learnNewPage\n                            \n                            \n                                    Private\n                                matchSelectedCards\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectLeftCard\n                            \n                            \n                                selectRightCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                repeat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                completed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cards\n                    \n                \n                \n                    \n                        Type :         Card[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        repeat\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        completed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildStepPages\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildStepPages(cards: Card[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:77\n                \n            \n\n\n            \n                \n                    Split the cards into pages of 5 elements.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                Card[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All the cards to match during this session\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        A randomized set of pages\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        learnNewPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    learnNewPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:91\n                \n            \n\n\n            \n                \n                    Emit the completed event if all cards have been repeated or\nload two new columns of cards to match.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        matchSelectedCards\n                        \n                    \n                \n            \n            \n                \n                    \n                    matchSelectedCards()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:55\n                \n            \n\n\n            \n                \n                    Mark the cards as matched\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLeftCard\n                        \n                    \n                \n            \n            \n                \nselectLeftCard(card: MatchingCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                MatchingCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRightCard\n                        \n                    \n                \n            \n            \n                \nselectRightCard(card: MatchingCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                MatchingCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leftColumnCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchingCard[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        matchingPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Card[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rightColumnCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchingCard[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        selectedLeftCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchingCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        selectedRightCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchingCard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Card } from \"@core/model/card.model\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { shuffleArray } from \"@core/utils/general.utils\";\n\ninterface MatchingCard {\n  card: Card;\n  matched: boolean;\n}\n\n@Component({\n  selector: \"chf-session-matching-step\",\n  templateUrl: \"./session-matching-step.component.html\",\n  styleUrls: [\"./session-matching-step.component.scss\"],\n})\nexport class SessionMatchingStepComponent implements OnInit {\n  @Input() cards: Card[] = [];\n  @Input() repeat = 1;\n  @Output() completed = new EventEmitter();\n\n  public matchingPages: Card[][] = [];\n  public leftColumnCards: MatchingCard[] = [];\n  public rightColumnCards: MatchingCard[] = [];\n  public selectedLeftCard?: MatchingCard;\n  public selectedRightCard?: MatchingCard;\n\n  constructor(navigationService: NavigationService) {\n    navigationService.setNavbarText(\n      \"Match cards on the left with their translation on the right\",\n      \"description\"\n    );\n  }\n\n  ngOnInit(): void {\n    for (let i = 0; i  matched);\n      if (allMatched) {\n        this.learnNewPage();\n      }\n    }\n  }\n\n  /**\n   * Split the cards into pages of 5 elements.\n   *\n   * @param cards All the cards to match during this session\n   * @returns A randomized set of pages\n   */\n  private buildStepPages(cards: Card[]): Card[][] {\n    const toSplit = shuffleArray(cards);\n    const pages: Card[][] = [];\n    while (toSplit.length) {\n      pages.push(toSplit.splice(0, 5));\n    }\n\n    return pages;\n  }\n\n  /**\n   * Emit the `completed` event if all cards have been repeated or\n   * load two new columns of cards to match.\n   */\n  private learnNewPage(): void {\n    if (this.matchingPages.length) {\n      const page: Card[] = this.matchingPages.splice(0, 1)[0];\n      this.leftColumnCards = shuffleArray(page.map((card) => ({ card, matched: false })));\n      this.rightColumnCards = shuffleArray(\n        page.map((card) => ({ card, matched: false }))\n      );\n    } else {\n      this.completed.emit();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    \n      {{ matchCard.card.characters }}\n      {{ matchCard.card.pinyin }}\n    \n  \n\n\n    \n\n    \n                \n                    ./session-matching-step.component.scss\n                \n                :host {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  height: 100%;\n}\n\n.column {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  box-sizing: border-box;\n\n  chf-card {\n    &.left-card {\n      --card-bottom-right-radius: 3px;\n    }\n\n    &.right-card {\n      --card-top-left-radius: 3px;\n    }\n\n    div {\n      height: 50px;\n      flex-direction: column;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 1rem;\n    }\n\n    &.selected {\n      --card-bg-color: #646464;\n    }\n\n    &.matched {\n      pointer-events: none;\n      --card-bg-color: #437835;\n    }\n\n    div:empty {\n      display: none;\n    }\n  }\n\n  .chinese-translation {\n    display: flex;\n    flex-direction: column;\n\n    span:empty {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ matchCard.card.characters }}      {{ matchCard.card.pinyin }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SessionMatchingStepComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/settings.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SettingsModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardSelectionType\n                            \n                            \n                                    Public\n                                enableReviewMatching\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                learnPinyin\n                            \n                            \n                                    Public\n                                leitnerBoxes\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                resetCardProgress\n                            \n                            \n                                    Public\n                                theme\n                            \n                            \n                                    Public\n                                wordsPerSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDarkModeActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings?: SettingsModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/settings.model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardSelectionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardReviewType\n\n                    \n                \n                \n                    \n                        Default value : \"newest\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enableReviewMatching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        learnPinyin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        leitnerBoxes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resetCardProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppTheme\n\n                    \n                \n                \n                    \n                        Default value : \"dark\"\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wordsPerSession\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/core/model/settings.model.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isDarkModeActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDarkModeActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/model/settings.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type AppTheme = \"dark\" | \"light\";\nexport type CardReviewType = \"oldest\" | \"newest\";\n\nexport interface SettingsModel {\n  id?: number;\n  enableReviewMatching: boolean;\n  learnPinyin: boolean;\n  pageSize: number;\n  wordsPerSession: number;\n  theme: AppTheme;\n  leitnerBoxes: number;\n  resetCardProgress: boolean;\n  cardSelectionType: CardReviewType;\n}\n\nexport class Settings implements SettingsModel {\n  public id?: number;\n  public enableReviewMatching = false;\n  public learnPinyin = true;\n  public pageSize = 10;\n  public wordsPerSession = 10;\n  public theme: AppTheme = \"dark\";\n  public leitnerBoxes = 5;\n  public resetCardProgress = true;\n  public cardSelectionType: CardReviewType = \"newest\";\n\n  constructor(settings?: SettingsModel) {\n    if (settings) {\n      this.id = settings.id;\n      this.enableReviewMatching = settings.enableReviewMatching;\n      this.learnPinyin = settings.learnPinyin;\n      this.pageSize = settings.pageSize;\n      this.wordsPerSession = settings.wordsPerSession;\n      this.theme = settings.theme;\n      this.leitnerBoxes = settings.leitnerBoxes;\n      this.resetCardProgress = settings.resetCardProgress;\n      this.cardSelectionType = settings.cardSelectionType;\n    }\n  }\n\n  public isDarkModeActive(): boolean {\n    return this.theme === \"dark\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appLicense\n                            \n                            \n                                    Public\n                                appVersion\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isProductionEnv\n                            \n                            \n                                    Public\n                                pageOptions\n                            \n                            \n                                    Public\n                                    Optional\n                                settings\n                            \n                            \n                                    Public\n                                wordsOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteDatabase\n                            \n                            \n                                exportToJSON\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, settingsService: SettingsService, databaseService: DatabaseService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDatabase\n                        \n                    \n                \n            \n            \n                \ndeleteDatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToJSON\n                        \n                    \n                \n            \n            \n                \nexportToJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        appLicense\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.license\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.version\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    darkTheme: new FormControl(false),\n    enableReviewMatching: new FormControl(false),\n    learnPinyin: new FormControl(true),\n    pageSize: new FormControl(10),\n    wordsPerSession: new FormControl(10),\n    leitnerBoxes: new FormControl(5),\n    cardSelectionType: new FormControl(\"newest\"),\n    resetCardProgress: new FormControl(true),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProductionEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.production\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 15, 20, 50, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wordsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [5, 10, 15]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { DatabaseService } from \"@core/db/database.service\";\nimport { CardReviewType, Settings } from \"@core/model/settings.model\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { environment } from \"src/environments/environment\";\n\n// TODO: clean forms (remove unnecessary typings, use non-nullable fields)\ninterface SettingsForm {\n  darkTheme: FormControl;\n  enableReviewMatching: FormControl;\n  learnPinyin: FormControl;\n  pageSize: FormControl;\n  wordsPerSession: FormControl;\n  leitnerBoxes: FormControl;\n  cardSelectionType: FormControl;\n  resetCardProgress: FormControl;\n}\n\n@Component({\n  selector: \"chf-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"],\n})\nexport class SettingsComponent implements OnInit {\n  public settings?: Settings;\n  public form = new FormGroup({\n    darkTheme: new FormControl(false),\n    enableReviewMatching: new FormControl(false),\n    learnPinyin: new FormControl(true),\n    pageSize: new FormControl(10),\n    wordsPerSession: new FormControl(10),\n    leitnerBoxes: new FormControl(5),\n    cardSelectionType: new FormControl(\"newest\"),\n    resetCardProgress: new FormControl(true),\n  });\n  public pageOptions = [5, 10, 15, 20, 50, 100];\n  public wordsOptions = [5, 10, 15];\n  public isProductionEnv = environment.production;\n  public appVersion = environment.version;\n  public appLicense = environment.license;\n\n  constructor(\n    private navigationService: NavigationService,\n    private settingsService: SettingsService,\n    private databaseService: DatabaseService,\n    private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.navigationService.setTitle(\"Settings\");\n    this.settingsService.getSettings().then((settings) => {\n      this.settings = settings;\n      this.form.patchValue({\n        darkTheme: this.settings.theme === \"dark\",\n        enableReviewMatching: this.settings.enableReviewMatching,\n        learnPinyin: this.settings.learnPinyin,\n        leitnerBoxes: this.settings.leitnerBoxes,\n        pageSize: this.settings.pageSize,\n        wordsPerSession: this.settings.wordsPerSession,\n        resetCardProgress: this.settings.resetCardProgress,\n        cardSelectionType: this.settings.cardSelectionType,\n      });\n    });\n    this.form.valueChanges.subscribe(() => {\n      if (this.settings) {\n        this.settings.theme = this.form.value.darkTheme ? \"dark\" : \"light\";\n        this.settings.enableReviewMatching = !!this.form.value.enableReviewMatching;\n        this.settings.learnPinyin = this.form.value.learnPinyin ?? true;\n        this.settings.wordsPerSession = this.form.value.wordsPerSession ?? 10;\n        this.settings.pageSize = this.form.value.pageSize ?? 10;\n        this.settings.leitnerBoxes = this.form.value.leitnerBoxes ?? 5;\n        this.settings.resetCardProgress = this.form.value.resetCardProgress ?? true;\n        this.settings.cardSelectionType = this.form.value.cardSelectionType ?? \"newest\";\n        this.settingsService.updateSettings(this.settings);\n      }\n    });\n  }\n\n  deleteDatabase(): void {\n    this.databaseService\n      .clearDatabase()\n      .then(() => this.snackbar.open(\"Database deleted successfully\", \"Close\"));\n  }\n\n  exportToJSON(): void {\n    this.databaseService.exportAsFile();\n  }\n}\n\n    \n\n    \n        \n  \n    Learning sessions\n\n    \n      Words per session\n      \n        \n          \n            \n              {{ words }} words\n            \n          \n        \n      \n    \n\n    \n      Enable \"Matching mode\" for review sessions\n      \n        \n      \n    \n\n    \n      Card selection\n      \n        \n          \n            Newest first\n            Oldest first\n          \n        \n      \n    \n  \n\n  \n    Card collections\n\n    \n      Cards per page\n      \n        \n          \n            \n              {{ size }} cards\n            \n          \n        \n      \n    \n\n    \n      Reset progress when a card is updated\n      \n        \n      \n    \n  \n\n\n\n  Backup\n  Download a backup file\n\n\n\n  Development options\n  Delete database\n\n\n\n  About\n  \n    App version: {{ appVersion }}\n    License: {{ appLicense }}\n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n  font-size: 0.9rem;\n}\n\n.setting-group {\n  margin-bottom: 2rem;\n\n  .setting {\n    display: flex;\n    align-items: center;\n    margin-bottom: 1rem;\n\n    .label {\n      flex: 1;\n    }\n\n    .field {\n      max-width: 150px;\n\n      mat-form-field {\n        width: 100%;\n      }\n    }\n  }\n\n  .title {\n    font-size: large;\n    font-weight: 500;\n    border-bottom: solid 1px gray;\n    margin-bottom: 1rem;\n    padding: 0.5rem 0;\n    font-family: var(--font-title);\n  }\n}\n\n.field-with-ext-hint {\n  margin-bottom: 1rem;\n\n  div {\n    font-size: small;\n    margin-top: 0.7rem;\n  }\n}\n\n.about-info {\n  display: flex;\n  gap: 1.5rem;\n  flex-wrap: wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Learning sessions          Words per session                                                  {{ words }} words                                                  Enable \"Matching mode\" for review sessions                                  Card selection                                    Newest first            Oldest first                                    Card collections          Cards per page                                                  {{ size }} cards                                                  Reset progress when a card is updated                            Backup  Download a backup file  Development options  Delete database  About      App version: {{ appVersion }}    License: {{ appLicense }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsForm.html":{"url":"interfaces/SettingsForm.html","title":"interface - SettingsForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/settings/settings.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardSelectionType\n                                        \n                                \n                                \n                                        \n                                            darkTheme\n                                        \n                                \n                                \n                                        \n                                            enableReviewMatching\n                                        \n                                \n                                \n                                        \n                                            learnPinyin\n                                        \n                                \n                                \n                                        \n                                            leitnerBoxes\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            resetCardProgress\n                                        \n                                \n                                \n                                        \n                                            wordsPerSession\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardSelectionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardSelectionType:         FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkTheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkTheme:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableReviewMatching\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableReviewMatching:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learnPinyin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        learnPinyin:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leitnerBoxes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leitnerBoxes:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetCardProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetCardProgress:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wordsPerSession\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wordsPerSession:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { DatabaseService } from \"@core/db/database.service\";\nimport { CardReviewType, Settings } from \"@core/model/settings.model\";\nimport { NavigationService } from \"@core/services/navigation.service\";\nimport { SettingsService } from \"@core/services/settings.service\";\nimport { environment } from \"src/environments/environment\";\n\n// TODO: clean forms (remove unnecessary typings, use non-nullable fields)\ninterface SettingsForm {\n  darkTheme: FormControl;\n  enableReviewMatching: FormControl;\n  learnPinyin: FormControl;\n  pageSize: FormControl;\n  wordsPerSession: FormControl;\n  leitnerBoxes: FormControl;\n  cardSelectionType: FormControl;\n  resetCardProgress: FormControl;\n}\n\n@Component({\n  selector: \"chf-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"],\n})\nexport class SettingsComponent implements OnInit {\n  public settings?: Settings;\n  public form = new FormGroup({\n    darkTheme: new FormControl(false),\n    enableReviewMatching: new FormControl(false),\n    learnPinyin: new FormControl(true),\n    pageSize: new FormControl(10),\n    wordsPerSession: new FormControl(10),\n    leitnerBoxes: new FormControl(5),\n    cardSelectionType: new FormControl(\"newest\"),\n    resetCardProgress: new FormControl(true),\n  });\n  public pageOptions = [5, 10, 15, 20, 50, 100];\n  public wordsOptions = [5, 10, 15];\n  public isProductionEnv = environment.production;\n  public appVersion = environment.version;\n  public appLicense = environment.license;\n\n  constructor(\n    private navigationService: NavigationService,\n    private settingsService: SettingsService,\n    private databaseService: DatabaseService,\n    private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.navigationService.setTitle(\"Settings\");\n    this.settingsService.getSettings().then((settings) => {\n      this.settings = settings;\n      this.form.patchValue({\n        darkTheme: this.settings.theme === \"dark\",\n        enableReviewMatching: this.settings.enableReviewMatching,\n        learnPinyin: this.settings.learnPinyin,\n        leitnerBoxes: this.settings.leitnerBoxes,\n        pageSize: this.settings.pageSize,\n        wordsPerSession: this.settings.wordsPerSession,\n        resetCardProgress: this.settings.resetCardProgress,\n        cardSelectionType: this.settings.cardSelectionType,\n      });\n    });\n    this.form.valueChanges.subscribe(() => {\n      if (this.settings) {\n        this.settings.theme = this.form.value.darkTheme ? \"dark\" : \"light\";\n        this.settings.enableReviewMatching = !!this.form.value.enableReviewMatching;\n        this.settings.learnPinyin = this.form.value.learnPinyin ?? true;\n        this.settings.wordsPerSession = this.form.value.wordsPerSession ?? 10;\n        this.settings.pageSize = this.form.value.pageSize ?? 10;\n        this.settings.leitnerBoxes = this.form.value.leitnerBoxes ?? 5;\n        this.settings.resetCardProgress = this.form.value.resetCardProgress ?? true;\n        this.settings.cardSelectionType = this.form.value.cardSelectionType ?? \"newest\";\n        this.settingsService.updateSettings(this.settings);\n      }\n    });\n  }\n\n  deleteDatabase(): void {\n    this.databaseService\n      .clearDatabase()\n      .then(() => this.snackbar.open(\"Database deleted successfully\", \"Close\"));\n  }\n\n  exportToJSON(): void {\n    this.databaseService.exportAsFile();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsModel.html":{"url":"interfaces/SettingsModel.html","title":"interface - SettingsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/settings.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cardSelectionType\n                                        \n                                \n                                \n                                        \n                                            enableReviewMatching\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            learnPinyin\n                                        \n                                \n                                \n                                        \n                                            leitnerBoxes\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            resetCardProgress\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            wordsPerSession\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardSelectionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cardSelectionType:         CardReviewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardReviewType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableReviewMatching\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableReviewMatching:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        learnPinyin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        learnPinyin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leitnerBoxes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leitnerBoxes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetCardProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetCardProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         AppTheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppTheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wordsPerSession\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wordsPerSession:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type AppTheme = \"dark\" | \"light\";\nexport type CardReviewType = \"oldest\" | \"newest\";\n\nexport interface SettingsModel {\n  id?: number;\n  enableReviewMatching: boolean;\n  learnPinyin: boolean;\n  pageSize: number;\n  wordsPerSession: number;\n  theme: AppTheme;\n  leitnerBoxes: number;\n  resetCardProgress: boolean;\n  cardSelectionType: CardReviewType;\n}\n\nexport class Settings implements SettingsModel {\n  public id?: number;\n  public enableReviewMatching = false;\n  public learnPinyin = true;\n  public pageSize = 10;\n  public wordsPerSession = 10;\n  public theme: AppTheme = \"dark\";\n  public leitnerBoxes = 5;\n  public resetCardProgress = true;\n  public cardSelectionType: CardReviewType = \"newest\";\n\n  constructor(settings?: SettingsModel) {\n    if (settings) {\n      this.id = settings.id;\n      this.enableReviewMatching = settings.enableReviewMatching;\n      this.learnPinyin = settings.learnPinyin;\n      this.pageSize = settings.pageSize;\n      this.wordsPerSession = settings.wordsPerSession;\n      this.theme = settings.theme;\n      this.leitnerBoxes = settings.leitnerBoxes;\n      this.resetCardProgress = settings.resetCardProgress;\n      this.cardSelectionType = settings.cardSelectionType;\n    }\n  }\n\n  public isDarkModeActive(): boolean {\n    return this.theme === \"dark\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSettingsModule -->\n\nButtonComponent->SettingsModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nSettingsModule -->\n\nSlideToggleComponent->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { ButtonComponent } from \"src/app/components/button/button.component\";\nimport { SlideToggleComponent } from \"src/app/components/slide-toggle/slide-toggle.component\";\nimport { SettingsComponent } from \"./settings.component\";\n\n@NgModule({\n  declarations: [SettingsComponent],\n  imports: [\n    ButtonComponent,\n    CommonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    SlideToggleComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                darkModeActive$\n                            \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSettings\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                updateSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/settings.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSettings\n                        \n                    \n                \n            \n            \n                \ngetSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/settings.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n            \n                \nisDarkMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/settings.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSettings\n                        \n                    \n                \n            \n            \n                \nupdateSettings(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/settings.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        darkModeActive$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    (localStorage.getItem(THEME_STORAGE_KEY) ?? \"dark\") === \"dark\"\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/settings.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Database\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/settings.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { Database } from \"../db/database.model\";\nimport { Settings } from \"../model/settings.model\";\nimport { DatabaseService } from \"../db/database.service\";\n\nconst THEME_STORAGE_KEY = \"THEME\";\n\n@Injectable({ providedIn: \"root\" })\nexport class SettingsService {\n  private database: Database;\n  private darkModeActive$ = new BehaviorSubject(\n    (localStorage.getItem(THEME_STORAGE_KEY) ?? \"dark\") === \"dark\"\n  );\n\n  constructor(databaseService: DatabaseService) {\n    this.database = databaseService.database;\n  }\n\n  isDarkMode(): Observable {\n    return this.darkModeActive$.asObservable();\n  }\n\n  getSettings(): Promise {\n    return this.database.settings.toArray().then(async (settingCollection) => {\n      let settings = new Settings();\n      if (settingCollection.length === 0) {\n        settings.id = await this.database.settings.add(new Settings(settings));\n      } else {\n        settings = new Settings(settingCollection[0]);\n      }\n      return settings;\n    });\n  }\n\n  updateSettings(settings: Settings): void {\n    this.darkModeActive$.next(settings.isDarkModeActive());\n    // Save to the localStorage so that the background can be immediately set to\n    // the correct theme on start\n    localStorage.setItem(THEME_STORAGE_KEY, settings.theme);\n    this.database.settings.put(settings);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-sidenav\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                importedModules\n                \n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.version\n                    \n                \n                    \n                        \n                                Defined in src/app/components/sidenav/sidenav.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { RouterModule } from \"@angular/router\";\nimport { environment } from \"src/environments/environment\";\n\nconst importedModules = [\n  CommonModule,\n  MatButtonModule,\n  MatIconModule,\n  MatTooltipModule,\n  RouterModule,\n];\n\n@Component({\n  selector: \"chf-sidenav\",\n  standalone: true,\n  imports: importedModules,\n  templateUrl: \"./sidenav.component.html\",\n  styleUrls: [\"./sidenav.component.scss\"],\n})\nexport class SidenavComponent {\n  public appVersion = environment.version;\n}\n\n    \n\n    \n        \n  \n    \n      school Learn\n    \n    \n      style Collections\n    \n  \n\n  \n    \n      settings Settings\n    \n  \n\n\nv{{ appVersion }}\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                :host {\n  height: 100%;\n  padding: 0.5rem 0;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n}\n\n.sidenav-menu {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.menu-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  div {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    padding: 10px 20px;\n    cursor: pointer;\n\n    &.active {\n      color: var(--accent-color);\n    }\n  }\n}\n\n.version {\n  font-size: small;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            school Learn              style Collections                  settings Settings      v{{ appVersion }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/slide-toggle/slide-toggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlValueAccessorComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SlideToggleComponent), multi: true,\n}\n                \n            \n\n\n            \n                selector\n                chf-slide-toggle\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                propagateChange\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                    Optional\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnChange(fn: Callback)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlValueAccessorComponent\n\n                \n            \n            \n                \n                        Defined in         ControlValueAccessorComponent:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Callback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerOnTouched()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlValueAccessorComponent\n\n                \n            \n            \n                \n                        Defined in         ControlValueAccessorComponent:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDisabledState()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlValueAccessorComponent\n\n                \n            \n            \n                \n                        Defined in         ControlValueAccessorComponent:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(newValue: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlValueAccessorComponent\n\n                \n            \n            \n                \n                        Defined in         ControlValueAccessorComponent:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: T)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlValueAccessorComponent\n\n                \n            \n            \n                \n                        Defined in         ControlValueAccessorComponent:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Callback\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorComponent:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlValueAccessorComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlValueAccessorComponent:6\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { ControlValueAccessorComponent } from \"@core/control-value-accessor-component\";\n\n@Component({\n  selector: \"chf-slide-toggle\",\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: \"./slide-toggle.component.html\",\n  styleUrls: [\"./slide-toggle.component.scss\"],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SlideToggleComponent),\n      multi: true,\n    },\n  ],\n})\nexport class SlideToggleComponent extends ControlValueAccessorComponent {}\n\n    \n\n    \n        \n  \n  Yes\n  No\n\n\n    \n\n    \n                \n                    ./slide-toggle.component.scss\n                \n                $sliderHeight: 30px;\n$rounderBorder: 20px;\n$sliderCircleSize: calc($sliderHeight - 8px);\n\n.slider {\n  display: flex;\n  height: $sliderHeight;\n  width: 55px;\n  background-color: #22262d;\n  border-radius: $rounderBorder;\n  padding: 0px 5px;\n  align-items: center;\n\n  .circle {\n    height: $sliderCircleSize;\n    width: $sliderCircleSize;\n    background-color: #5c5c5c;\n    border-radius: $rounderBorder;\n  }\n\n  .text {\n    font-size: 0.7rem;\n    padding: 0 0.5rem;\n  }\n\n  &.active {\n    background-color: var(--primary-color-darker);\n    flex-direction: row-reverse;\n\n    .circle {\n      background-color: var(--primary-color);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Yes  No'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatisticsService.html":{"url":"injectables/StatisticsService.html","title":"injectable - StatisticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatisticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/statistics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCollectionReviewStats\n                            \n                            \n                                getCollectionsReviewStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionService: CollectionService, databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/statistics.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionReviewStats\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionReviewStats(collectionId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/statistics.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCollectionsReviewStats\n                        \n                    \n                \n            \n            \n                \ngetCollectionsReviewStats(collections: CardCollection[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/statistics.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            CardCollection[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Database\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/statistics.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Database } from \"../db/database.model\";\nimport { DatabaseService } from \"../db/database.service\";\nimport { CardCollection } from \"../model/card-collection.model\";\nimport { CollectionStats } from \"../model/statistics.model\";\nimport { CollectionService } from \"./collection.service\";\n\n@Injectable({ providedIn: \"root\" })\nexport class StatisticsService {\n  private database: Database;\n\n  constructor(\n    private collectionService: CollectionService,\n    databaseService: DatabaseService\n  ) {\n    this.database = databaseService.database;\n  }\n\n  async getCollectionReviewStats(collectionId: number): Promise {\n    const toLearn = await this.collectionService\n      .getUnknownCardRequest(collectionId)\n      .count();\n\n    const known = await this.collectionService.getKnownCardRequest(collectionId).count();\n\n    const toReview = await this.collectionService\n      .getReviewCardRequest(collectionId)\n      .count();\n\n    return { toLearn, toReview, known };\n  }\n\n  getCollectionsReviewStats(collections: CardCollection[]): Promise {\n    const promises = collections.map(async (collection) => {\n      collection.setStatistics(await this.getCollectionReviewStats(collection.id));\n      return collection;\n    });\n    return Promise.all(promises).then(() => collections);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabBarComponent.html":{"url":"components/TabBarComponent.html","title":"component - TabBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tab-bar/tab-bar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-tab-bar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FontAwesomeModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./tab-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actions\n                            \n                            \n                                    Public\n                                routes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tabBarService: TabBarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tab-bar/tab-bar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabBarService\n                                                  \n                                                        \n                                                                        TabBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionTab[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tab-bar/tab-bar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RouterTab[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tab-bar/tab-bar.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { ActionTab, RouterTab, TabBarService } from \"./tab-bar.service\";\n\n@Component({\n  selector: \"chf-tab-bar\",\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule, RouterModule],\n  templateUrl: \"./tab-bar.component.html\",\n  styleUrls: [\"./tab-bar.component.scss\"],\n})\nexport class TabBarComponent {\n  public actions: ActionTab[] = [];\n  public routes: RouterTab[] = [];\n\n  constructor(tabBarService: TabBarService) {\n    tabBarService.tabs.asObservable().subscribe((tabBar) => {\n      if (tabBar.type === \"action\") {\n        this.actions = tabBar.tabs;\n        this.routes = [];\n      } else {\n        this.routes = tabBar.tabs;\n        this.actions = [];\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ tab.label }}\n  \n\n\n\n  \n    \n    {{ tab.label }}\n  \n\n\n    \n\n    \n                \n                    ./tab-bar.component.scss\n                \n                :host {\n  display: flex;\n  background-color: black;\n  gap: 0.5rem;\n  justify-content: space-evenly;\n}\n\n.tab {\n  text-align: center;\n  padding: 0.5rem 0;\n  color: #4a4a4a;\n\n  div {\n    margin-top: 0.25rem;\n  }\n\n  &.active {\n    color: white;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ tab.label }}            {{ tab.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TabBarService.html":{"url":"injectables/TabBarService.html","title":"injectable - TabBarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TabBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/tab-bar/tab-bar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                rootTabs\n                            \n                            \n                                    Public\n                                    Readonly\n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetTabBar\n                            \n                            \n                                setActions\n                            \n                            \n                                setRoutes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetTabBar\n                        \n                    \n                \n            \n            \n                \nresetTabBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tab-bar/tab-bar.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActions\n                        \n                    \n                \n            \n            \n                \nsetActions(tabs: ActionTab[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tab-bar/tab-bar.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tabs\n                                    \n                                            ActionTab[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRoutes\n                        \n                    \n                \n            \n            \n                \nsetRoutes(tabs: RouterTab[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tab-bar/tab-bar.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tabs\n                                    \n                                            RouterTab[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rootTabs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RouterTab[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { icon: faCirclePlay, label: \"Start session\", route: \"/sessions\" },\n    { icon: faBook, label: \"Browser cards\", route: \"/collections\" },\n    { icon: faGear, label: \"Settings\", route: \"/settings\" },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tab-bar/tab-bar.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tabs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({\n    type: \"router\",\n    tabs: this.rootTabs,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tab-bar/tab-bar.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  IconDefinition,\n  faBook,\n  faCirclePlay,\n  faGear,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BehaviorSubject } from \"rxjs\";\n\ntype Tab = { icon: IconDefinition; label: string };\nexport type RouterTab = Tab & { route: string };\nexport type ActionTab = Tab & { action: () => void };\nexport type TabType = \"router\" | \"action\";\nexport type RouterTabBar = { tabs: RouterTab[]; type: \"router\" };\nexport type ActionTabBar = { tabs: ActionTab[]; type: \"action\" };\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TabBarService {\n  private readonly rootTabs: RouterTab[] = [\n    { icon: faCirclePlay, label: \"Start session\", route: \"/sessions\" },\n    { icon: faBook, label: \"Browser cards\", route: \"/collections\" },\n    { icon: faGear, label: \"Settings\", route: \"/settings\" },\n  ];\n\n  public readonly tabs = new BehaviorSubject({\n    type: \"router\",\n    tabs: this.rootTabs,\n  });\n\n  resetTabBar(): void {\n    this.setRoutes(this.rootTabs);\n  }\n\n  setRoutes(tabs: RouterTab[]): void {\n    this.tabs.next({ type: \"router\", tabs });\n  }\n\n  setActions(tabs: ActionTab[]): void {\n    this.tabs.next({ type: \"action\", tabs });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VirtualKeyboardComponent.html":{"url":"components/VirtualKeyboardComponent.html","title":"component - VirtualKeyboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VirtualKeyboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                chf-virtual-keyboard\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FontAwesomeModule\n                                LongPressDirective\n                            MatRippleModule\n                            OverlayModule\n                \n            \n\n            \n                styleUrls\n                ./virtual-keyboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./virtual-keyboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icons\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                    Public\n                                toneKeys\n                            \n                            \n                                    Public\n                                toneOverlayOffsetX\n                            \n                            \n                                    Public\n                                toneOverlayOffsetY\n                            \n                            \n                                    Public\n                                toneOverlayOpen\n                            \n                            \n                                    Public\n                                    Optional\n                                toneOverlayOrigin\n                            \n                            \n                                    Public\n                                uppercaseEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeOffsetX\n                            \n                            \n                                    Public\n                                openTones\n                            \n                            \n                                    Public\n                                writeCharacter\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                backspace\n                            \n                            \n                                submitText\n                            \n                            \n                                typed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        backspace\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitText\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeOffsetX\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeOffsetX(positionInColumn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:102\n                \n            \n\n\n            \n                \n                    Compute the overlay offset based on the position of the key in the row.\nThe two leftmost and the two rightmost keys shouldn't try and display a centered\noverlay as it would go offscreen.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    positionInColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key index in the row\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Adjusted offset in px\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openTones\n                        \n                    \n                \n            \n            \n                \n                    \n                    openTones(letter: string, positionInColumn: number, elementRef: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:75\n                \n            \n\n\n            \n                \n                    Open the tone overlay to select an accentuated letter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    letter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The letter to accentuate\n\n                                    \n                                \n                                \n                                    positionInColumn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the letter in the row\n\n                                    \n                                \n                                \n                                    elementRef\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Reference to the HTML container of the letter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeCharacter\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeCharacter(character: string, preserverCase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:60\n                \n            \n\n\n            \n                \n                    Select a character to write. This method is used for both the standard keyboard\nand the tone overlay.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    character\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Character to emit\n\n                                    \n                                \n                                \n                                    preserverCase\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    uppercase: faArrowUpFromBracket,\n    backspace: faDeleteLeft,\n    done: faCheck,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : QWERTY\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toneKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toneOverlayOffsetX\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BASE_TONE_OVERLAY_OFFSET_X\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toneOverlayOffsetY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BASE_TONE_OVERLAY_OFFSET_Y\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toneOverlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        toneOverlayOrigin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FlexibleConnectedPositionStrategyOrigin\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uppercaseEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/virtual-keyboard/virtual-keyboard.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FlexibleConnectedPositionStrategyOrigin,\n  OverlayModule,\n} from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, EventEmitter, Output } from \"@angular/core\";\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport {\n  faArrowUpFromBracket,\n  faCheck,\n  faDeleteLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { QWERTY } from \"./keyboard-layout.model\";\nimport { LongPressDirective } from \"./long-press.directive\";\nimport { getTones, hasTones } from \"./tones\";\n\nconst TONE_KEY_WIDTH_PX = 34; // Key width + gap with other keys\nconst BASE_TONE_OVERLAY_OFFSET_X = -(TONE_KEY_WIDTH_PX * 1.5);\nconst BASE_TONE_OVERLAY_OFFSET_Y = -TONE_KEY_WIDTH_PX * 2.5;\n\n@Component({\n  selector: \"chf-virtual-keyboard\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    LongPressDirective,\n    MatRippleModule,\n    OverlayModule,\n  ],\n  templateUrl: \"./virtual-keyboard.component.html\",\n  styleUrls: [\"./virtual-keyboard.component.scss\"],\n})\nexport class VirtualKeyboardComponent {\n  @Output() typed = new EventEmitter();\n  @Output() backspace = new EventEmitter();\n  @Output() submitText = new EventEmitter();\n\n  public toneOverlayOffsetY = BASE_TONE_OVERLAY_OFFSET_Y;\n  public toneOverlayOffsetX = BASE_TONE_OVERLAY_OFFSET_X;\n\n  public layout = QWERTY;\n  public uppercaseEnabled = false;\n  public toneOverlayOpen = false;\n  public toneOverlayOrigin?: FlexibleConnectedPositionStrategyOrigin;\n  public toneKeys: string[] = [];\n  public icons = {\n    uppercase: faArrowUpFromBracket,\n    backspace: faDeleteLeft,\n    done: faCheck,\n  };\n\n  /**\n   * Select a character to write. This method is used for both the standard keyboard\n   * and the tone overlay.\n   *\n   * @param character Character to emit\n   */\n  public writeCharacter(character: string, preserverCase = false): void {\n    this.typed.emit(this.uppercaseEnabled ? character : character.toLowerCase());\n    if (!preserverCase) {\n      this.uppercaseEnabled = false;\n    }\n    this.toneOverlayOpen = false;\n  }\n\n  /**\n   * Open the tone overlay to select an accentuated letter.\n   *\n   * @param letter The letter to accentuate\n   * @param positionInColumn Index of the letter in the row\n   * @param elementRef Reference to the HTML container of the letter\n   */\n  public openTones(\n    letter: string,\n    positionInColumn: number,\n    elementRef: HTMLElement\n  ): void {\n    if (hasTones(letter)) {\n      this.toneOverlayOffsetX = this.computeOffsetX(positionInColumn);\n      this.toneOverlayOpen = true;\n      this.toneOverlayOrigin = elementRef;\n      const letterCase = this.uppercaseEnabled ? \"UPPER\" : \"LOWER\";\n      this.toneKeys = getTones(letter, letterCase);\n      if (letter === \"U\") {\n        // Add ü variations with u tones to avoid adding another key\n        const rootLetter = this.uppercaseEnabled ? \"Ü\" : \"ü\";\n        this.toneKeys = [...this.toneKeys, ...getTones(\"ü\", letterCase), rootLetter];\n      }\n    }\n  }\n\n  /**\n   * Compute the overlay offset based on the position of the key in the row.\n   * The two leftmost and the two rightmost keys shouldn't try and display a centered\n   * overlay as it would go offscreen.\n   *\n   * @param positionInColumn Key index in the row\n   * @returns Adjusted offset in px\n   */\n  private computeOffsetX(positionInColumn: number): number {\n    let offset = BASE_TONE_OVERLAY_OFFSET_X;\n    if (positionInColumn  7) {\n      offset = -TONE_KEY_WIDTH_PX * 2;\n    }\n    return offset;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ key }}\n      {{ key | lowercase }}\n    \n    \n      \n    \n  \n  \n    ?123\n    Space\n    \n      \n    \n  \n\n\n\n  \n    \n      {{ tone }}\n    \n  \n\n\n    \n\n    \n                \n                    ./virtual-keyboard.component.scss\n                \n                :host {\n  display: block;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  z-index: 10;\n  background-color: #141414;\n  padding: 5px;\n  box-sizing: border-box;\n}\n\n$keyGap: 4px;\n\n.main-keyboard {\n  display: flex;\n  flex-direction: column;\n  gap: $keyGap;\n}\n\n.keyboard-row {\n  display: flex;\n  gap: $keyGap;\n}\n\n.keyboard-key {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  color: white;\n  cursor: pointer;\n\n  // Disable text selection\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n\n  &.plain {\n    background-color: #323232;\n    border-radius: 25px;\n    height: 40px;\n  }\n\n  &.active {\n    --tone-line-color: orange;\n    color: orange;\n  }\n\n  &.space {\n    flex: 3;\n  }\n\n  &.validate {\n    background-color: var(--primary-color);\n  }\n}\n\n.tone-keyboard {\n  margin-top: 10px;\n  margin-bottom: 15px;\n  display: flex;\n  gap: $keyGap * 2;\n  justify-content: center;\n\n  .keyboard-key {\n    max-width: 40px;\n  }\n}\n\n.tone-overlay-container {\n  background-color: red;\n  width: 170px;\n}\n\n$toneKeySize: 30px;\n.tone-overlay {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $keyGap;\n  width: 140px;\n  max-width: 170px;\n\n  .keyboard-key {\n    background-color: #565656;\n    min-width: $toneKeySize;\n    max-width: $toneKeySize;\n    height: 40px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ key }}      {{ key | lowercase }}                          ?123    Space                            {{ tone }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'chf-root'},{'name': 'ButtonComponent', 'selector': 'chf-button'},{'name': 'CardComponent', 'selector': 'chf-card'},{'name': 'CardDifficultyComponent', 'selector': 'chf-card-difficulty'},{'name': 'CardEditorComponent', 'selector': 'chf-card-editor'},{'name': 'CardProgressBarComponent', 'selector': 'chf-card-progress-bar'},{'name': 'CardProgressIndicatorComponent', 'selector': 'chf-card-progress-indicator'},{'name': 'CardViewerComponent', 'selector': 'chf-card-viewer'},{'name': 'CollectionCardsComponent', 'selector': 'chf-collection-cards'},{'name': 'CollectionEditorComponent', 'selector': 'chf-collection-editor'},{'name': 'CollectionListComponent', 'selector': 'chf-collection-list'},{'name': 'ConfirmDialogComponent', 'selector': 'chf-confirm-dialog'},{'name': 'InlineConfirmDialogComponent', 'selector': 'chf-inline-confirm-dialog'},{'name': 'NavbarComponent', 'selector': 'chf-navbar'},{'name': 'PinyinFormFieldComponent', 'selector': 'chf-pinyin-form-field'},{'name': 'SessionComponent', 'selector': 'chf-session'},{'name': 'SessionFillingStepComponent', 'selector': 'chf-session-filling-step'},{'name': 'SessionLauncherComponent', 'selector': 'chf-session-launcher'},{'name': 'SessionMatchingStepComponent', 'selector': 'chf-session-matching-step'},{'name': 'SettingsComponent', 'selector': 'chf-settings'},{'name': 'SidenavComponent', 'selector': 'chf-sidenav'},{'name': 'SlideToggleComponent', 'selector': 'chf-slide-toggle'},{'name': 'TabBarComponent', 'selector': 'chf-tab-bar'},{'name': 'VirtualKeyboardComponent', 'selector': 'chf-virtual-keyboard'}];\n    var DIRECTIVES = [{'name': 'LongPressDirective', 'selector': '[chfLongPress]'}];\n    var ACTUAL_COMPONENT = {'name': 'VirtualKeyboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            defaultErrorMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/dialog/confirm-dialog/confirm-dialog.component.ts\n            \n            interface\n            ConfirmDialogConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/dialog/inline-confirm-dialog/inline-confirm-dialog.component.ts\n            \n            component\n            InlineConfirmDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            variable\n            importedModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/pinyin-form-field/pinyin-form-field.component.ts\n            \n            component\n            PinyinFormFieldComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/pinyin-form-field/pinyin-form-field.component.ts\n            \n            variable\n            modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/sidenav/sidenav.component.ts\n            \n            variable\n            importedModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/slide-toggle/slide-toggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/tab-bar/tab-bar.component.ts\n            \n            component\n            TabBarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tab-bar/tab-bar.service.ts\n            \n            injectable\n            TabBarService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/keyboard-layout.model.ts\n            \n            variable\n            AZERTY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/keyboard-layout.model.ts\n            \n            variable\n            QWERTY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/long-press.directive.ts\n            \n            directive\n            LongPressDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/tones.ts\n            \n            variable\n            getTones\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/tones.ts\n            \n            variable\n            hasTones\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/tones.ts\n            \n            variable\n            TONES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n            \n            component\n            VirtualKeyboardComponent\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n            \n            variable\n            BASE_TONE_OVERLAY_OFFSET_X\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n            \n            variable\n            BASE_TONE_OVERLAY_OFFSET_Y\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n            \n            variable\n            TONE_KEY_WIDTH_PX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/coercion-component.ts\n            \n            class\n            CoercionComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/control-value-accessor-component.ts\n            \n            class\n            ControlValueAccessorComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/db/database-upgrades.ts\n            \n            variable\n            upgrades\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/db/database.model.ts\n            \n            class\n            Database\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/db/database.model.ts\n            \n            variable\n            schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/db/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/guards/pending-changes.guard.ts\n            \n            interface\n            PendingChangesComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/guards/pending-changes.guard.ts\n            \n            variable\n            PendingChangesGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/model/card-collection.model.ts\n            \n            class\n            CardCollection\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/model/card-collection.model.ts\n            \n            interface\n            CardCollectionModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/card.model.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/core/model/card.model.ts\n            \n            interface\n            CardModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/model/card.model.ts\n            \n            variable\n            boxReviewDelay\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/settings.model.ts\n            \n            class\n            Settings\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/model/settings.model.ts\n            \n            interface\n            SettingsModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/model/statistics.model.ts\n            \n            interface\n            CollectionStats\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/pipes/card-meanings.pipe.ts\n            \n            pipe\n            CardMeaningsPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/join.pipe.ts\n            \n            pipe\n            JoinPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pwa-updates.ts\n            \n            variable\n            checkForUpdates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/collection.service.ts\n            \n            injectable\n            CollectionService\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/core/services/learning-session.service.ts\n            \n            injectable\n            LearningSessionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/settings.service.ts\n            \n            variable\n            THEME_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/statistics.service.ts\n            \n            injectable\n            StatisticsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/utils/file.utils.ts\n            \n            variable\n            downloadFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/form.utils.ts\n            \n            function\n            toOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            function\n            removeOnce\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            function\n            removeTimes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            function\n            shuffleArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            function\n            uniqueValues\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            variable\n            areEqual\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            variable\n            areSubstrings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/general.utils.ts\n            \n            variable\n            normalizeForComparison\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/collection/card-editor/card-editor.component.ts\n            \n            component\n            CardEditorComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/pages/collection/card-editor/card-editor.component.ts\n            \n            interface\n            CardForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/collection/card-viewer/card-progress-bar/card-progress-bar.component.ts\n            \n            component\n            CardProgressBarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/collection/card-viewer/card-viewer.component.ts\n            \n            component\n            CardViewerComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/collection/collection-cards/collection-cards.component.ts\n            \n            component\n            CollectionCardsComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/pages/collection/collection-editor/collection-editor.component.ts\n            \n            component\n            CollectionEditorComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/collection/collection-editor/collection-editor.component.ts\n            \n            interface\n            CollectionForm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/collection/collection-list/collection-list.component.ts\n            \n            component\n            CollectionListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session-launcher/session-launcher.component.ts\n            \n            component\n            SessionLauncherComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-card.model.ts\n            \n            class\n            SessionCard\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-card.model.ts\n            \n            variable\n            EASY_REPS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-card.model.ts\n            \n            variable\n            HARD_REPS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-card.model.ts\n            \n            variable\n            MEDIUM_REPS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-filling-step/session-filling-step.component.ts\n            \n            component\n            SessionFillingStepComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts\n            \n            component\n            SessionMatchingStepComponent\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session-matching-step/session-matching-step.component.ts\n            \n            interface\n            MatchingCard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/learn/session/session.component.ts\n            \n            component\n            SessionComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.component.ts\n            \n            interface\n            SettingsForm\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/shared/components/card-difficulty/card-difficulty.component.ts\n            \n            component\n            CardDifficultyComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/shared/components/card-progress-indicator/card-progress-indicator.component.ts\n            \n            component\n            CardProgressIndicatorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.4\n        \n            @angular/cdk : ^16.2.3\n        \n            @angular/common : ^16.2.4\n        \n            @angular/compiler : ^16.2.4\n        \n            @angular/core : ^16.2.4\n        \n            @angular/forms : ^16.2.4\n        \n            @angular/material : ^16.2.3\n        \n            @angular/platform-browser : ^16.2.4\n        \n            @angular/platform-browser-dynamic : ^16.2.4\n        \n            @angular/router : ^16.2.4\n        \n            @angular/service-worker : ^16.2.4\n        \n            @fortawesome/angular-fontawesome : ^0.13.0\n        \n            @fortawesome/fontawesome-svg-core : ^6.4.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.4.2\n        \n            @varrmcault/ngx-form-control-messages : ^1.1.1\n        \n            dayjs : ^1.11.9\n        \n            dexie : ^3.2.4\n        \n            ng-circle-progress : ^1.7.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            removeOnce   (src/.../general.utils.ts)\n                        \n                        \n                            removeTimes   (src/.../general.utils.ts)\n                        \n                        \n                            shuffleArray   (src/.../general.utils.ts)\n                        \n                        \n                            toOptional   (src/.../form.utils.ts)\n                        \n                        \n                            uniqueValues   (src/.../general.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/utils/general.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeOnce\n                        \n                    \n                \n            \n            \n                \nremoveOnce(source, toRemove)\n                \n            \n\n\n\n\n            \n                \n                    Removes the first occurrence of a set of items. This function will modify\nthe source array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of items\n\n                                    \n                                \n                                \n                                    toRemove\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Items to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        Source array without the removed occurrences\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTimes\n                        \n                    \n                \n            \n            \n                \nremoveTimes(source, toRemove: T, times: number)\n                \n            \n\n\n\n\n            \n                \n                    Removes a certain number of occurrences of an item from an array. This\nfunction will modify the source array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of items\n\n                                    \n                                \n                                \n                                    toRemove\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item to remove\n\n                                    \n                                \n                                \n                                    times\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of occurrences to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        Source array without the removed occurrences\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shuffleArray\n                        \n                    \n                \n            \n            \n                \nshuffleArray(arr)\n                \n            \n\n\n\n\n            \n                \n                    Shuffles an array. The original array is not modified.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array to shuffle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        A new array with shuffled elements\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniqueValues\n                        \n                    \n                \n            \n            \n                \nuniqueValues(arr)\n                \n            \n\n\n\n\n            \n                \n                    Filters the array to keep only one occurrence of each element. The original\narray is not modified.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array to filter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        New array without duplicates\n\n                    \n                \n            \n        \n    \n    src/app/core/utils/form.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toOptional\n                        \n                    \n                \n            \n            \n                \ntoOptional(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nChineseFlashcards\nThis project was generated with Angular CLI version 15.1.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectionPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CollectionPageModule\n\n\n\ncluster_CollectionPageModule_declarations\n\n\n\ncluster_CollectionPageModule_imports\n\n\n\ncluster_LearnPageModule\n\n\n\ncluster_LearnPageModule_declarations\n\n\n\ncluster_LearnPageModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCollectionPageModule\n\nCollectionPageModule\n\nAppModule -->\n\nCollectionPageModule->AppModule\n\n\n\n\n\nLearnPageModule\n\nLearnPageModule\n\nAppModule -->\n\nLearnPageModule->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nTabBarComponent\n\nTabBarComponent\n\nAppModule -->\n\nTabBarComponent->AppModule\n\n\n\n\n\nCardEditorComponent\n\nCardEditorComponent\n\nCollectionPageModule -->\n\nCardEditorComponent->CollectionPageModule\n\n\n\n\n\nCardProgressBarComponent\n\nCardProgressBarComponent\n\nCollectionPageModule -->\n\nCardProgressBarComponent->CollectionPageModule\n\n\n\n\n\nCardViewerComponent\n\nCardViewerComponent\n\nCollectionPageModule -->\n\nCardViewerComponent->CollectionPageModule\n\n\n\n\n\nCollectionCardsComponent\n\nCollectionCardsComponent\n\nCollectionPageModule -->\n\nCollectionCardsComponent->CollectionPageModule\n\n\n\n\n\nCollectionEditorComponent\n\nCollectionEditorComponent\n\nCollectionPageModule -->\n\nCollectionEditorComponent->CollectionPageModule\n\n\n\n\n\nCollectionListComponent\n\nCollectionListComponent\n\nCollectionPageModule -->\n\nCollectionListComponent->CollectionPageModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nCollectionPageModule -->\n\nButtonComponent->CollectionPageModule\n\n\n\nLearnPageModule -->\n\nButtonComponent->LearnPageModule\n\n\n\nSettingsModule -->\n\nButtonComponent->SettingsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCollectionPageModule -->\n\nCardComponent->CollectionPageModule\n\n\n\nLearnPageModule -->\n\nCardComponent->LearnPageModule\n\n\n\n\n\nCardDifficultyComponent\n\nCardDifficultyComponent\n\nCollectionPageModule -->\n\nCardDifficultyComponent->CollectionPageModule\n\n\n\nLearnPageModule -->\n\nCardDifficultyComponent->LearnPageModule\n\n\n\n\n\nCardMeaningsPipe\n\nCardMeaningsPipe\n\nCollectionPageModule -->\n\nCardMeaningsPipe->CollectionPageModule\n\n\n\nLearnPageModule -->\n\nCardMeaningsPipe->LearnPageModule\n\n\n\n\n\nInlineConfirmDialogComponent\n\nInlineConfirmDialogComponent\n\nCollectionPageModule -->\n\nInlineConfirmDialogComponent->CollectionPageModule\n\n\n\n\n\nJoinPipe\n\nJoinPipe\n\nCollectionPageModule -->\n\nJoinPipe->CollectionPageModule\n\n\n\n\n\nPinyinFormFieldComponent\n\nPinyinFormFieldComponent\n\nCollectionPageModule -->\n\nPinyinFormFieldComponent->CollectionPageModule\n\n\n\nLearnPageModule -->\n\nPinyinFormFieldComponent->LearnPageModule\n\n\n\n\n\nSessionComponent\n\nSessionComponent\n\nLearnPageModule -->\n\nSessionComponent->LearnPageModule\n\n\n\n\n\nSessionFillingStepComponent\n\nSessionFillingStepComponent\n\nLearnPageModule -->\n\nSessionFillingStepComponent->LearnPageModule\n\n\n\n\n\nSessionLauncherComponent\n\nSessionLauncherComponent\n\nLearnPageModule -->\n\nSessionLauncherComponent->LearnPageModule\n\n\n\n\n\nSessionMatchingStepComponent\n\nSessionMatchingStepComponent\n\nLearnPageModule -->\n\nSessionMatchingStepComponent->LearnPageModule\n\n\n\n\n\nCardProgressIndicatorComponent\n\nCardProgressIndicatorComponent\n\nLearnPageModule -->\n\nCardProgressIndicatorComponent->LearnPageModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nLearnPageModule -->\n\nConfirmDialogComponent->LearnPageModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nSettingsModule -->\n\nSlideToggleComponent->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.1\n        \n            License : MIT\n        \n            Author : Carrm\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionTab   (src/.../tab-bar.service.ts)\n                        \n                        \n                            ActionTabBar   (src/.../tab-bar.service.ts)\n                        \n                        \n                            AppTheme   (src/.../settings.model.ts)\n                        \n                        \n                            ButtonType   (src/.../button.types.ts)\n                        \n                        \n                            Callback   (src/.../control-value-accessor-component.ts)\n                        \n                        \n                            CardDifficultyLevel   (src/.../card.model.ts)\n                        \n                        \n                            CardReviewType   (src/.../settings.model.ts)\n                        \n                        \n                            DbUpgrades   (src/.../database-upgrades.ts)\n                        \n                        \n                            Indexable   (src/.../types.ts)\n                        \n                        \n                            NavbarType   (src/.../navigation.service.ts)\n                        \n                        \n                            Optional   (src/.../types.ts)\n                        \n                        \n                            PropagateFct   (src/.../pinyin-form-field.component.ts)\n                        \n                        \n                            RouterTab   (src/.../tab-bar.service.ts)\n                        \n                        \n                            RouterTabBar   (src/.../tab-bar.service.ts)\n                        \n                        \n                            SessionProgress   (src/.../session-card.model.ts)\n                        \n                        \n                            SessionType   (src/.../learning-session.service.ts)\n                        \n                        \n                            Tab   (src/.../tab-bar.service.ts)\n                        \n                        \n                            TabType   (src/.../tab-bar.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/tab-bar/tab-bar.service.ts\n    \n    \n        \n            \n                \n                    \n                    ActionTab\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionTabBar\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RouterTab\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RouterTabBar\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tab\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TabType\n                \n            \n            \n                \n                        \"router\" | \"action\"\n\n                \n            \n        \n    \n    src/app/core/model/settings.model.ts\n    \n    \n        \n            \n                \n                    \n                    AppTheme\n                \n            \n            \n                \n                        \"dark\" | \"light\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CardReviewType\n                \n            \n            \n                \n                        \"oldest\" | \"newest\"\n\n                \n            \n        \n    \n    src/app/components/button/button.types.ts\n    \n    \n        \n            \n                \n                    \n                    ButtonType\n                \n            \n            \n                \n                        \"primary\" | \"error\" | \"default\"\n\n                \n            \n        \n    \n    src/app/core/control-value-accessor-component.ts\n    \n    \n        \n            \n                \n                    \n                    Callback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/core/model/card.model.ts\n    \n    \n        \n            \n                \n                    \n                    CardDifficultyLevel\n                \n            \n            \n                \n                        \"easy\" | \"medium\" | \"hard\"\n\n                \n            \n        \n    \n    src/app/core/db/database-upgrades.ts\n    \n    \n        \n            \n                \n                    \n                    DbUpgrades\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/types.ts\n    \n    \n        \n            \n                \n                    \n                    Indexable\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Optional\n                \n            \n            \n                \n                        T | undefined | null\n\n                \n            \n        \n    \n    src/app/core/services/navigation.service.ts\n    \n    \n        \n            \n                \n                    \n                    NavbarType\n                \n            \n            \n                \n                        \"main\" | \"description\"\n\n                \n            \n        \n    \n    src/app/components/pinyin-form-field/pinyin-form-field.component.ts\n    \n    \n        \n            \n                \n                    \n                    PropagateFct\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/pages/learn/session/session-card.model.ts\n    \n    \n        \n            \n                \n                    \n                    SessionProgress\n                \n            \n            \n                \n                        \"up\" | \"down\" | \"flat\"\n\n                \n            \n        \n    \n    src/app/core/services/learning-session.service.ts\n    \n    \n        \n            \n                \n                    \n                    SessionType\n                \n            \n            \n                \n                        \"review\" | \"learn\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            areEqual   (src/.../general.utils.ts)\n                        \n                        \n                            areSubstrings   (src/.../general.utils.ts)\n                        \n                        \n                            AZERTY   (src/.../keyboard-layout.model.ts)\n                        \n                        \n                            BASE_TONE_OVERLAY_OFFSET_X   (src/.../virtual-keyboard.component.ts)\n                        \n                        \n                            BASE_TONE_OVERLAY_OFFSET_Y   (src/.../virtual-keyboard.component.ts)\n                        \n                        \n                            boxReviewDelay   (src/.../card.model.ts)\n                        \n                        \n                            checkForUpdates   (src/.../pwa-updates.ts)\n                        \n                        \n                            defaultErrorMessages   (src/.../app.module.ts)\n                        \n                        \n                            downloadFile   (src/.../file.utils.ts)\n                        \n                        \n                            EASY_REPS   (src/.../session-card.model.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getTones   (src/.../tones.ts)\n                        \n                        \n                            HARD_REPS   (src/.../session-card.model.ts)\n                        \n                        \n                            hasTones   (src/.../tones.ts)\n                        \n                        \n                            importedModules   (src/.../navbar.component.ts)\n                        \n                        \n                            importedModules   (src/.../sidenav.component.ts)\n                        \n                        \n                            MEDIUM_REPS   (src/.../session-card.model.ts)\n                        \n                        \n                            modules   (src/.../pinyin-form-field.component.ts)\n                        \n                        \n                            normalizeForComparison   (src/.../general.utils.ts)\n                        \n                        \n                            PendingChangesGuard   (src/.../pending-changes.guard.ts)\n                        \n                        \n                            QWERTY   (src/.../keyboard-layout.model.ts)\n                        \n                        \n                            schema   (src/.../database.model.ts)\n                        \n                        \n                            THEME_STORAGE_KEY   (src/.../settings.service.ts)\n                        \n                        \n                            TONE_KEY_WIDTH_PX   (src/.../virtual-keyboard.component.ts)\n                        \n                        \n                            TONES   (src/.../tones.ts)\n                        \n                        \n                            upgrades   (src/.../database-upgrades.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/utils/general.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        areEqual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (str1: Optional, str2: Optional): boolean =>\n  !!str1 && !!str2 && str1.toLowerCase().trim() === str2.toLowerCase().trim()\n                    \n                \n\n            \n                \n                    Compares two strings, ignoring their case.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        areSubstrings\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  str1: Optional,\n  str2: Optional\n): boolean => {\n  if (!str1 || !str2) {\n    return false;\n  }\n\n  const normalizedStr1 = normalizeForComparison(str1);\n  const normalizedStr2 = normalizeForComparison(str2);\n  return (\n    normalizedStr1.includes(normalizedStr2) || normalizedStr2.includes(normalizedStr1)\n  );\n}\n                    \n                \n\n            \n                \n                    Checks if one of the strings is contained in the other. The comparison is\nmade on the normalized value of each string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeForComparison\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (text: string): string =>\n  text\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/\\p{Diacritic}/gu, \"\")\n                    \n                \n\n            \n                \n                    Sets a text to lowercase and removes diacritics.\n\n                \n            \n\n        \n    \n\n    src/app/components/virtual-keyboard/keyboard-layout.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AZERTY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\"A\", \"Z\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n  [\"Q\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\"],\n  [\"W\", \"X\", \"C\", \"V\", \"B\", \"N\"],\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QWERTY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n  [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"],\n  [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"],\n]\n                    \n                \n\n\n        \n    \n\n    src/app/components/virtual-keyboard/virtual-keyboard.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_TONE_OVERLAY_OFFSET_X\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -(TONE_KEY_WIDTH_PX * 1.5)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BASE_TONE_OVERLAY_OFFSET_Y\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -TONE_KEY_WIDTH_PX * 2.5\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TONE_KEY_WIDTH_PX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 34\n                    \n                \n\n\n        \n    \n\n    src/app/core/model/card.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        boxReviewDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 0.5, 1, 2, 4, 7, 14]\n                    \n                \n\n            \n                \n                    Review delay for each box from 0 to 6 (using the index of the array)\n\n                \n            \n\n        \n    \n\n    src/app/core/pwa-updates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkForUpdates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  swUpdate: SwUpdate,\n  snackbar: MatSnackBar\n): (() => Promise) => {\n  return (): Promise =>\n    new Promise((resolve) => {\n      swUpdate.checkForUpdate();\n      swUpdate.versionUpdates.subscribe((event) => {\n        if (event.type === \"VERSION_READY\") {\n          snackbar\n            .open(\"A new version is available\", \"Reload now\", {\n              verticalPosition: \"top\",\n              duration: 5000,\n            })\n            .onAction()\n            .subscribe(() => {\n              window.location.reload();\n            });\n        }\n      });\n\n      resolve();\n    });\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultErrorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgxFormControlMessages\n\n                    \n                \n                \n                    \n                        Default value : {\n  required: \"Field required\",\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/file.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        downloadFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (filename: string, fileContent: string) => {\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.setAttribute(\n    \"href\",\n    encodeURI(\"data:application/json;charset=utf-8,\" + fileContent)\n  );\n  downloadLink.setAttribute(\"download\", filename);\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/learn/session/session-card.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EASY_REPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HARD_REPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIUM_REPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  dbVersion: 2,\n  version: \"2.0.1\",\n  license: \"MIT\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  dbVersion: 2,\n  version: \"2.0.1\",\n  license: \"MIT\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  dbVersion: 2,\n  version: \"2.0.1\",\n  license: \"MIT\",\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/virtual-keyboard/tones.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTones\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (letter: string, letterCase: \"UPPER\" | \"LOWER\"): string[] => {\n  let tones = TONES[letter.toUpperCase()] ?? [];\n  if (letterCase === \"LOWER\") {\n    tones = tones.map((toneLetter) => toneLetter.toLowerCase());\n  }\n  return tones;\n}\n                    \n                \n\n            \n                \n                    Get all the available tones for the key.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasTones\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (letter: string): boolean => {\n  return Object.keys(TONES).includes(letter.toUpperCase());\n}\n                    \n                \n\n            \n                \n                    Check if a letter has associated tones.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TONES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Indexable\n\n                    \n                \n                \n                    \n                        Default value : Object.freeze({\n  A: [\"Ā\", \"Á\", \"Ǎ\", \"À\"],\n  E: [\"Ē\", \"É\", \"Ě\", \"È\"],\n  I: [\"Ī\", \"Í\", \"Ǐ\", \"Ì\"],\n  O: [\"Ō\", \"Ó\", \"Ǒ\", \"Ò\"],\n  U: [\"Ū\", \"Ú\", \"Ǔ\", \"Ù\"],\n  Ü: [\"Ǖ\", \"Ǘ\", \"Ǚ\", \"Ǜ\"],\n})\n                    \n                \n\n            \n                \n                    All the available tones for each letter.\n\n                \n            \n\n        \n    \n\n    src/app/components/navbar/navbar.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        importedModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CommonModule, MatButtonModule, MatIconModule]\n                    \n                \n\n\n        \n    \n\n    src/app/components/sidenav/sidenav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        importedModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CommonModule,\n  MatButtonModule,\n  MatIconModule,\n  MatTooltipModule,\n  RouterModule,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/components/pinyin-form-field/pinyin-form-field.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  FontAwesomeModule,\n  FormsModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  NgIf,\n  VirtualKeyboardComponent,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/pending-changes.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PendingChangesGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CanDeactivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  component: PendingChangesComponent\n): Observable => component.canDeactivate()\n                    \n                \n\n\n        \n    \n\n    src/app/core/db/database.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  cardCollections: \"++id, label\",\n  cards: \"++id, collectionId, leitnerBox, [collectionId+leitnerBox]\",\n  settings: \"++id\",\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/settings.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        THEME_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"THEME\"\n                    \n                \n\n\n        \n    \n\n    src/app/core/db/database-upgrades.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        upgrades\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DbUpgrades\n\n                    \n                \n                \n                    \n                        Default value : {\n  1: () => Promise.resolve(),\n  2: () => Promise.resolve(),\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
